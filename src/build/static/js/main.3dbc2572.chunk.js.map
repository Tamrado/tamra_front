{"version":3,"sources":["pages/Home.js","redux/modules/base.js","lib/styleUtils.js","components/Auth/AuthWrapper.js","components/Auth/AuthContent.js","components/Auth/InputWithLabel.js","components/Auth/AuthButton.js","components/Auth/RightAlignedLink.js","components/Auth/AuthError.js","components/Auth/Label.js","lib/api/auth.js","redux/modules/auth.js","redux/modules/user.js","lib/storage.js","containers/Auth/Login.js","containers/Auth/Register.js","pages/Auth.js","components/Base/PageWrapper.js","components/User/UserHead.js","redux/modules/userPage.js","lib/api/users.js","containers/User/UserHeadContainer.js","lib/socket.js","pages/User.js","components/Base/Header/Header.js","components/Base/Header/LoginButton.js","components/Base/Header/UserThumbnail.js","components/Base/UserMenu/UserMenu.js","components/Base/UserMenu/UserMenuItem.js","components/Base/UserMenu/Username.js","containers/Base/UserMenuContainer.js","containers/Base/HeaderContainer.js","App.js","Root.js","serviceWorker.js","redux/modules/index.js","redux/configureStore.js","index.js"],"names":["Home","Component","setHeaderVisibility","createAction","setUserMenuVisibility","initialState","Map","header","visible","userMenu","handleActions","state","action","setIn","payload","sizes","wide","desktop","tablet","phone","media","Object","keys","reduce","acc","label","css","shadow","weight","transitions","shake","keyframes","Positioner","styled","div","ShadowedBox","LogoWrapper","oc","teal","Logo","Link","Contents","AuthWrapper","children","to","Title","gray","AuthContent","title","Wrapper","Label","Input","input","InputWithLabel","rest","AuthButton","onClick","Aligner","StyledLink","RightAlignedLink","red","AuthError","logout","axios","get","withCredentials","checkEmailExists","email","checkIdExists","id","checkPhoneExists","localRegister","password","birthday","name","comment","address","gender","post","localLogin","localRegisterImage","formData","headers","AuthAPI","changeInput","initializeForm","setError","register","form","passwordConfirm","error","registerImage","image","login","result","value","initialForm","set","message","pender","type","onSuccess","data","setLoggedInfo","setValidated","checkStatus","loggedInfo","thumbname","username","logged","validated","onFailure","storage","key","object","localStorage","JSON","stringify","console","log","parse","e","remove","removeItem","Login","handleChange","AuthActions","props","target","handleLocalLogin","a","UserActions","history","toJS","push","location","this","undefined","queryString","search","expired","placeholder","onChange","connect","auth","getIn","dispatch","bindActionCreators","authActions","userActions","Register","debounce","validate","isEmail","isAlphanumeric","isLength","min","max","RegExp","test","defaultNullChange","validation","indexOf","handleLocalRegister","FormData","append","file","handleFileInput","bind","setState","files","checked","exists","Auth","BaseActions","path","component","baseActions","PageWrapper","responsive","Thumbnail","Username","UserHead","getUserInfo","checkUserAndGetInfo","info","thumbnail","User","userId","fromJS","UserHeadContainer","UserPageActions","prevProps","prevState","fetched","userPage","success","userPageActions","_store","_socket","_uri","_listen","listener","str","parsed","parseJSON","reconnect","setTimeout","uri","WebSocket","onmessage","onopen","event","onclose","initialize","store","listen","ignore","socket","match","params","WhiteBackground","HeaderContents","Spacer","GradientBorder","cyan","Header","BorderedButton","LoginButton","UserThumbnail","MenuWrapper","UserMenu","MenuItem","UserMenuItem","UserMenuContainer","handleSetUserInfo","window","href","handleLogout","contextTypes","router","PropTypes","base","user","HeaderContainer","handleThumbnailClick","eventTypes","App","initializeUserInfo","exact","style","zIndex","hideProgressBar","position","Root","Boolean","hostname","combineReducers","penderReducer","composeEnhancers","compose","createStore","modules","applyMiddleware","penderMiddleware","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3dbc2572.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Home\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import { Map } from 'immutable';\r\nimport { handleActions, createAction } from 'redux-actions';\r\n\r\nconst SET_HEADER_VISIBILITY = 'base/SET_HEADER_VISIBILITY'; // 헤더 렌더링 여부 설정\r\nconst SET_USER_MENU_VISIBILITY = 'base/SET_USER_MENU_VISIBILITY';\r\n\r\nexport const setHeaderVisibility = createAction(SET_HEADER_VISIBILITY); // visible\r\nexport const setUserMenuVisibility = createAction(SET_USER_MENU_VISIBILITY);\r\n\r\nconst initialState = Map({\r\n    header: Map({\r\n        visible: true\r\n    }),\r\n    userMenu: Map({\r\n        visible: false\r\n    })\r\n});\r\n\r\nexport default handleActions({\r\n    [SET_HEADER_VISIBILITY]: (state, action) => state.setIn(['header', 'visible'], action.payload),\r\n    [SET_USER_MENU_VISIBILITY]: (state,action) => state.setIn(['userMenu','visible'], action.payload)\r\n}, initialState);","import { css, keyframes } from 'styled-components';\r\n\r\n// 미디어 쿼리 헬퍼: https://www.styled-components.com/docs/advanced#media-templates 참조\r\nexport const sizes = {\r\n    wide: '1200px',\r\n    desktop: '992px',\r\n    tablet: '768px',\r\n    phone: '376px'\r\n};\r\n\r\nexport const media = Object.keys(sizes).reduce((acc, label) => {\r\n    acc[label] = (...args) => css`\r\n        @media (max-width: ${sizes[label]}) {\r\n            ${css(...args)}\r\n        }\r\n    `;\r\n    return acc;\r\n}, {});\r\n\r\n// 그림자 효과: https://codepen.io/sdthornton/pen/wBZdXq 기반\r\nexport const shadow = (weight) => {\r\n    const shadows = [\r\n        css`box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);`,\r\n        css`box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);`,\r\n        css`box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);`,\r\n        css`box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);`,\r\n        css`box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);`\r\n    ];\r\n\r\n    return shadows[weight];\r\n};\r\n\r\nexport const transitions = {\r\n    shake: keyframes`\r\n        0% {\r\n            transform: translate(-30px);\r\n        }\r\n        25% {\r\n            transform: translate(15px);\r\n        }\r\n        50% {\r\n            transform: translate(-10px);\r\n        }\r\n        75% {\r\n            transform: translate(5px);\r\n        }\r\n        100% {\r\n            transform: translate(0px);\r\n        }\r\n    `\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\nimport {shadow} from 'lib/styleUtils';\r\nimport {Link} from 'react-router-dom';\r\n\r\n// 화면의 중앙에 위치시킨다\r\nconst Positioner = styled.div`\r\n    position: absolute;\r\n    top : 60%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\n// 너비, 그림자 설정\r\nconst ShadowedBox = styled.div`\r\n    width: 500px;\r\n    ${shadow(2)}\r\n`;\r\n\r\n// 로고\r\nconst LogoWrapper = styled.div`\r\n    background: ${oc.teal[7]};\r\n    height: 5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Logo = styled(Link)`\r\n    color: white;\r\n    font-family: 'Rajdhani';\r\n    font-size: 2.4rem;\r\n    letter-spacing: 5px;\r\n    text-decoration: none;\r\n`;\r\n\r\n// children 이 들어가는 곳\r\nconst Contents = styled.div`\r\n    background: white;\r\n    padding: 2rem;\r\n    height: auto;\r\n`;\r\n\r\nconst AuthWrapper = ({children}) => (\r\n    <Positioner>\r\n        <ShadowedBox>\r\n            <LogoWrapper>\r\n                <Logo to=\"/\">TimeLine</Logo>\r\n            </LogoWrapper>\r\n            <Contents>\r\n                {children}\r\n            </Contents>\r\n        </ShadowedBox>\r\n    </Positioner>\r\n);\r\n\r\nexport default AuthWrapper;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\n\r\nconst Title = styled.div`\r\n    font-size: 1.5rem;\r\n    font-weight: 500;\r\n    color: ${oc.gray[8]};\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nconst AuthContent = ({title, children}) => (\r\n    <div>\r\n        <Title>{title}</Title>\r\n        {children}\r\n    </div>\r\n);\r\n\r\nexport default AuthContent;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\n\r\n// 두개가 함께 있을땐 상단 (그 사이) 에 여백을 준다\r\nconst Wrapper = styled.div`\r\n    & + & {\r\n        margin-top: 1rem;\r\n    }\r\n`;\r\n\r\nconst Label = styled.div`\r\n    font-size: 1rem;\r\n    color: ${oc.gray[6]};\r\n    margin-bottom: 0.25rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    border: 1px solid ${oc.gray[3]};\r\n    outline: none;\r\n    border-radius: 0px;\r\n    line-height: 2.5rem;\r\n    font-size: 1.2rem;\r\n    padding-left: 0.5rem;\r\n    padding-right: 0.5rem;\r\n    ::placeholder {\r\n        color: ${oc.gray[3]};\r\n    }\r\n`;\r\n\r\n// rest 쪽에는 onChange, type, name, value, placeholder 등의 input 에서 사용 하는 값들을 넣어줄수 있다.\r\nconst InputWithLabel = ({label, ...rest}) => (\r\n    <Wrapper>\r\n        <Label>{label}</Label>\r\n        <Input {...rest}/>\r\n    </Wrapper>\r\n);\r\n\r\nexport default InputWithLabel;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\nimport { shadow } from 'lib/styleUtils';\r\n\r\nconst Wrapper = styled.div`\r\n    margin-top: 1rem;\r\n    padding-top: 0.6rem;\r\n    padding-bottom: 0.5rem;\r\n\r\n    background: ${oc.teal[6]};\r\n    color: white;\r\n\r\n    text-align: center;\r\n    font-size: 1.25rem;\r\n    font-weight: 500;\r\n\r\n    cursor: pointer;\r\n    user-select: none;\r\n    transition: .2s all;\r\n\r\n    &:hover {\r\n        background: ${oc.teal[5]};\r\n        ${shadow(0)}\r\n    }\r\n\r\n    &:active {\r\n        background: ${oc.teal[7]};\r\n    }\r\n\r\n`;\r\n\r\nconst AuthButton = ({children, onClick}) => (\r\n    <Wrapper onClick={onClick}>\r\n        {children}\r\n    </Wrapper>\r\n);\r\n\r\nexport default AuthButton;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Aligner = styled.div`\r\n    margin-top: 1rem;\r\n    text-align: right;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    color: ${oc.gray[6]};\r\n    &:hover {\r\n        color: ${oc.gray[7]};\r\n    }\r\n`\r\n\r\nconst RightAlignedLink = ({to, children}) => (\r\n    <Aligner>\r\n        <StyledLink to={to}>{children}</StyledLink>\r\n    </Aligner>\r\n);\r\n\r\nexport default RightAlignedLink;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\nimport {transitions} from 'lib/styleUtils';\r\n\r\nconst Wrapper = styled.div`\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n    color: ${oc.red[7]};\r\n    font-weight: 500;\r\n    text-align: center;\r\n    animation: ${transitions.shake} 0.3s ease-in;\r\n    animation-fill-mode: forwards;\r\n`;\r\n\r\nconst AuthError = ({children}) => (\r\n    <Wrapper>\r\n        {children}\r\n    </Wrapper>\r\n);\r\n\r\nexport default AuthError;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\n\r\n// 두개가 함께 있을땐 상단 (그 사이) 에 여백을 준다\r\nconst Wrapper = styled.div`\r\n    & + & {\r\n        margin-top: 1rem;\r\n    }\r\n`;\r\n\r\nconst Label = styled.div`\r\n    font-size: 1rem;\r\n    color: ${oc.gray[6]};\r\n    margin-bottom: 0.25rem;\r\n`;\r\n\r\n// rest 쪽에는 onChange, type, name, value, placeholder 등의 input 에서 사용 하는 값들을 넣어줄수 있다.\r\nconst label = ({label}) => (\r\n    <Wrapper>\r\n        <Label>{label}</Label>\r\n    </Wrapper>\r\n);\r\n\r\nexport default label;","import axios from 'axios';\r\n\r\nexport const checkEmailExists = (email) => axios.get('http://localhost:8080/api/member/email/?email=' + email);\r\nexport const checkIdExists = (id) => axios.get('http://localhost:8080/api/member/id/?id=' + id);\r\nexport const checkPhoneExists = (phone) => axios.get('http://localhost:8080/api/member/phone/?phone=' + phone);\r\n\r\nexport const localRegister = ({email,id,password,phone,birthday,name,comment,address,gender}) => axios.post('http://localhost:8080/api/member', {email,id,password,phone,birthday,name,comment,address,gender});\r\nexport const localLogin = ({id,password}) => axios.post('http://localhost:8080/api/member/auth', {id, password},{withCredentials: true});\r\nexport const localRegisterImage = (formData) => axios.post('http://localhost:8080/api/member/image',formData,{headers:{'content-type' : 'multipart/form-data',withCredentials: true}});\r\nexport const checkStatus = () => axios.get('http://localhost:8080/api/member/auth/token/id', {withCredentials: true});\r\nexport const logout = () => axios.get('http://localhost:8080/api//member/auth/token', {withCredentials: true});\r\n","import {createAction, handleActions} from 'redux-actions';\r\nimport {Map} from 'immutable';\r\nimport {pender} from 'redux-pender';\r\nimport * as AuthAPI from 'lib/api/auth';\r\n\r\nconst CHECK_EMAIL_EXISTS = 'auth/CHECK_EMAIL_EXISTS';\r\nconst CHECK_ID_EXISTS = 'auth/CHECK_ID_EXISTS';\r\nconst CHECK_PHONE_EXISTS = 'auth/CHECK_PHONE_EXISTS';\r\n\r\nconst SET_ERROR = 'auth/SET_ERROR';\r\n\r\nconst LOCAL_REGISTER = 'auth/LOCAL_REGISTER';\r\nconst LOCAL_LOGIN = 'auth/LOCAL_LOGIN';\r\nconst LOCAL_REGISTER_IMAGE = 'auth/LOCAL_REGISTER_IMAGE';\r\nconst LOGOUT = 'auth/LOGOUT';\r\n\r\nconst CHANGE_INPUT = 'auth/CHANGE_INPUT';// input 값 변경\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM'; // form 초기화\r\n\r\nexport const checkEmailExists = createAction(CHECK_EMAIL_EXISTS, AuthAPI.checkEmailExists);\r\nexport const checkIdExists = createAction(CHECK_ID_EXISTS,AuthAPI.checkIdExists);\r\nexport const checkPhoneExists = createAction(CHECK_PHONE_EXISTS, AuthAPI.checkPhoneExists);\r\n\r\nexport const localRegister = createAction(LOCAL_REGISTER, AuthAPI.localRegister);\r\nexport const localLogin = createAction(LOCAL_LOGIN,AuthAPI.localLogin);\r\nexport const localRegisterImage = createAction(LOCAL_REGISTER_IMAGE,AuthAPI.localRegisterImage);\r\n\r\nexport const logout = createAction(LOGOUT, AuthAPI.logout);\r\n\r\nexport const changeInput = createAction(CHANGE_INPUT);// {form, name, value}\r\nexport const initializeForm = createAction(INITIALIZE_FORM); //form\r\nexport const setError = createAction(SET_ERROR);\r\n\r\nconst initialState = Map({\r\n    register: Map({\r\n        form: Map({\r\n            id : '',\r\n            password: '',\r\n            passwordConfirm : '',\r\n            email: '',\r\n            phone: '',\r\n            comment: '',\r\n            birthday : '',\r\n            name : '',\r\n            gender : '',\r\n            address : ''\r\n            }),\r\n        error: null\r\n    }),\r\n    registerImage: Map({\r\n        form : Map({\r\n            image : null\r\n        })\r\n    }),\r\n    login: Map({\r\n        form: Map({\r\n            id: '',\r\n            password: ''\r\n        }),\r\n        error: null\r\n    }),\r\n    result: Map({})\r\n});\r\n\r\n\r\nexport default handleActions({\r\n    [CHANGE_INPUT]:(state, action) => {\r\n        const {form,name,value}=action.payload;\r\n        return state.setIn([form,'form',name], value);\r\n    },\r\n    [INITIALIZE_FORM]: (state, action) => {\r\n        const initialForm = initialState.get(action.payload);\r\n        return state.set(action.payload, initialForm);\r\n    },\r\n    [SET_ERROR]: (state, action)=> {\r\n        const {form, message} = action.payload;\r\n        return state.setIn([form, 'error'],message);\r\n    },\r\n    ...pender({\r\n        type: CHECK_EMAIL_EXISTS,\r\n        onSuccess: (state,action) => state.set('result', Map(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: CHECK_PHONE_EXISTS,\r\n        onSuccess: (state,action) => state.set('result', Map(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: CHECK_ID_EXISTS,\r\n        onSuccess: (state,action) => state.set('result', Map(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: LOCAL_REGISTER_IMAGE,\r\n        onSuccess: (state, action) => state.set('result',Map(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: LOCAL_LOGIN,\r\n        onSuccess: (state, action) => state.set('result',Map(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: LOCAL_REGISTER,\r\n        onSuccess: (state,action) => state.set('result',Map(action.payload.data))\r\n    })\r\n}, initialState);","import {createAction, handleActions} from 'redux-actions';\r\n\r\nimport {Map} from 'immutable';\r\nimport * as AuthAPI from 'lib/api/auth';\r\nimport {pender} from 'redux-pender';\r\n\r\nconst SET_LOGGED_INFO = 'user/SET_LOGGED_INFO';\r\nconst SET_VALIDATED = 'user/SET_VALIDATED';\r\nconst LOGOUT = 'user/LOGOUT';\r\nconst CHECK_STATUS = 'user/CHECK_STATUS';\r\n\r\nexport const setLoggedInfo = createAction(SET_LOGGED_INFO);\r\nexport const setValidated = createAction(SET_VALIDATED);\r\nexport const logout = createAction(LOGOUT,AuthAPI.logout);\r\nexport const checkStatus = createAction(CHECK_STATUS,AuthAPI.checkStatus);// 현재 로그인상태 확인\r\n\r\nconst initialState = Map({\r\n    loggedInfo: Map({ // 현재 로그인 중인 유저의 정보\r\n        thumbname: null, \r\n        username: null\r\n    }),\r\n    logged : false, //현재 로그인중인지 알려줌\r\n    validated: false // 현재 로그인 중인지 아닌지 한번 서버측에 검증했음을 의미\r\n});\r\n\r\nexport default handleActions({\r\n    [SET_LOGGED_INFO]: (state,action) => state.set('loggedInfo',Map(action.payload)).set('logged',true),\r\n    [SET_VALIDATED] : (state,action) => state.set('validated', action.payload),\r\n    ...pender({\r\n        type: CHECK_STATUS,\r\n        onSuccess: (state,action) => state.set('loggedInfo',Map(action.payload.data)).set('validated', true),\r\n        onFailure: (state,action) => initialState\r\n    })\r\n\r\n}, initialState);","//로컬 스토리지에 JSON 형태로 저장/ 불러오기/ 삭제 헬퍼\r\nconst storage = {\r\n    set : (key,object) => {\r\n        if(!localStorage) return;\r\n        localStorage[key] = (typeof object) === 'string' ? object : JSON.stringify(object);\r\n    },\r\n    get : (key) => {\r\n        if(!localStorage) return null;\r\n\r\n        if(!localStorage[key]){\r\n            return null;\r\n        }\r\n        try {\r\n            console.log(localStorage[key]);\r\n            const parsed = JSON.parse(localStorage[key]);\r\n            return parsed;\r\n        } catch(e){\r\n            return localStorage[key];\r\n        }\r\n    },\r\n    remove: (key) => {\r\n        if(!localStorage) return null;\r\n\r\n        if(localStorage[key]){\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n};\r\n\r\nexport default storage;","import React, { Component } from 'react';\r\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink, AuthError } from 'components/Auth';\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as authActions from 'redux/modules/auth';\r\nimport * as userActions from 'redux/modules/user';\r\nimport storage from 'lib/storage';\r\nimport queryString from 'query-string';\r\n\r\nclass Login extends Component {\r\n\r\n    componentDidMount(){\r\n        const{location} = this.props;\r\n        const query = queryString.parse(location.search);\r\n\r\n        if(query.expired !== undefined){\r\n            this.setError('세션에 만료되었습니다. 다시 로그인하세요.')\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { AuthActions } = this.props;\r\n        const { name, value } = e.target;\r\n\r\n        AuthActions.changeInput({\r\n            name,\r\n            value,\r\n            form: 'login'\r\n        });\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        const {AuthActions} = this.props;\r\n        AuthActions.initializeForm('login');\r\n    }\r\n\r\n    setError = (message) => {\r\n        const {AuthActions} = this.props;\r\n        AuthActions.setError({\r\n            form : 'login',\r\n            message\r\n        });\r\n        return false;\r\n    }\r\n\r\n    handleLocalLogin = async () => {\r\n        const {form, AuthActions, UserActions, history} = this.props;\r\n        const {id,password} = form.toJS();\r\n\r\n        try{\r\n            await AuthActions.localLogin({id, password});\r\n            const loggedInfo = this.props.result.toJS();\r\n\r\n            UserActions.setLoggedInfo(loggedInfo);\r\n            history.push('/');\r\n            storage.set('loggedInfo', loggedInfo);\r\n            console.log(loggedInfo);\r\n        \r\n        } catch(e){\r\n            this.setError('잘못된 계정정보입니다.');\r\n        }\r\n     }\r\n\r\n    render() {\r\n        const { id, password } = this.props.form.toJS(); // form 에서 id 과 password 값을 읽어옴\r\n        const { handleChange,handleLocalLogin } = this;\r\n        const {error} = this.props;\r\n\r\n        return (\r\n            <AuthContent title=\"로그인\">\r\n                <InputWithLabel \r\n                    label=\"아이디\" \r\n                    name=\"id\" \r\n                    placeholder=\"아이디\" \r\n                    value={id} \r\n                    onChange={handleChange}\r\n                />\r\n                <InputWithLabel \r\n                    label=\"비밀번호\" \r\n                    name=\"password\" \r\n                    placeholder=\"비밀번호\" \r\n                    type=\"password\" \r\n                    value={password} \r\n                    onChange={handleChange}\r\n                />\r\n                {\r\n                    error && <AuthError>{error}</AuthError>\r\n                }\r\n                <AuthButton onClick={handleLocalLogin}>로그인</AuthButton>\r\n                <RightAlignedLink to=\"/auth/register\">회원가입</RightAlignedLink>\r\n            </AuthContent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['login', 'form']),\r\n        error: state.auth.getIn(['login', 'error']),\r\n        result : state.auth.get('result')\r\n    }),\r\n    (dispatch) => ({\r\n        AuthActions: bindActionCreators(authActions, dispatch),\r\n        UserActions: bindActionCreators(userActions,dispatch)\r\n    })\r\n)(Login);","import React, {Component} from 'react';\r\nimport {AuthContent,InputWithLabel,AuthButton,RightAlignedLink,AuthError,Label} from 'components/Auth';\r\nimport { bindActionCreators } from '../../../../AppData/Local/Microsoft/TypeScript/3.6/node_modules/redux';\r\nimport {connect} from 'react-redux';\r\nimport * as authActions from 'redux/modules/auth';\r\nimport {isEmail,isAlphanumeric,isLength} from 'validator';\r\nimport debounce from 'lodash/debounce';\r\nimport * as userActions from 'redux/modules/user';\r\nimport storage from 'lib/storage';\r\n\r\nclass Register extends Component{  \r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        \r\n        this.state = {\r\n        \r\n        file: null\r\n        }\r\n        this.handleFileInput = this.handleFileInput.bind(this);\r\n    }\r\n    setError = (message) => {\r\n        const{AuthActions} = this.props;\r\n        AuthActions.setError({\r\n            form: 'register',\r\n            message\r\n        });\r\n    }\r\n\r\n    checkEmailExists = debounce(async (email) => {\r\n        const { AuthActions } = this.props;\r\n        try{\r\n            await AuthActions.checkEmailExists(email);\r\n            if(this.props.result.get('issue')!== null) {\r\n                this.setError('이미 존재하는 이메일입니다.');\r\n            } else {\r\n                this.setError(null);\r\n            }\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    },300);\r\n\r\n    checkIdExists = debounce(async(id)=> {\r\n        const {AuthActions} = this.props;\r\n        try{\r\n            await AuthActions.checkIdExists(id);\r\n            if(this.props.result.get('issue')!== null){\r\n                this.setError('이미 존재하는 아이디입니다.');\r\n            } else {\r\n                this.setError(null);\r\n            }\r\n        } catch (e){\r\n            console.log(e);\r\n        }\r\n    },300);\r\n\r\n    checkPhoneExists = debounce(async(phone) => {\r\n        const {AuthActions} = this.props;\r\n        try{\r\n            await AuthActions.checkPhoneExists(phone);\r\n            if(this.props.result.get('issue')!== null){\r\n                this.setError('이미 존재하는 핸드폰 번호입니다.');\r\n            } else {\r\n                this.setError(null);\r\n            } \r\n        }catch (e){\r\n                console.log(e);\r\n        }\r\n    },300);\r\n\r\n    validate = {\r\n        email: (value) => {\r\n            if(!isEmail(value)){\r\n                this.setError('잘못된 이메일 형식 입니다.');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n            id: (value) => {\r\n            if(!isAlphanumeric(value) || !isLength(value, {min:9, max: 15})) {\r\n                this.setError('아이디는 9~15 글자의 알파벳 혹은 숫자로 이루어져야 합니다.');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        password: (value) => {\r\n            var passwordRules = /^(?=.*\\\\d)(?=.*[~`!@#$%\\\\^&*()-])(?=.*[a-z])(?=.*[A-Z]).{9,12}$/;\r\n            if(new RegExp(passwordRules).test(value)){\r\n                this.setError('비밀번호는 9~12 글자의 알파벳 (대소문자 구분), 숫자, 특수문자로 이루어져야 합니다.');\r\n                return false;\r\n            }\r\n            if(new RegExp(/(\\w)\\1\\1\\1/).test(value)){\r\n                this.setError('비밀번호는 같은 문자를 4번 이상 사용할 수 없습니다.');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        passwordConfirm: (value) => {\r\n            if(this.props.form.get('password') !== value){\r\n                this.setError('비밀번호 확인이 일치하지 않습니다.');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        phone: (value)=> {\r\n            if(!new RegExp(/^01(?:0|1|[6-9])-(\\d{3}|\\d{4})-(\\d{4})$/).test(value)){\r\n                this.setError('핸드폰 번호는 01x-xxx(x)-xxxx와 같은 형태로 입력해야 합니다.');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        comment: (value)=> {\r\n            if(!isLength(value, {min:0, max: 50})){\r\n                this.setError('코멘트는 50자를 넘길 수 없습니다.');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        name: (value) => {\r\n            if(!isLength(value, {min:1, max: 30})){\r\n                this.setError('이름은 1자 이상 30자 이하여야 합니다.');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        }\r\n\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        const {AuthActions} = this.props;\r\n        AuthActions.initializeForm('register')\r\n    }\r\n\r\n    defaultNullChange = (e) =>{\r\n        const {AuthActions} = this.props;\r\n        const {name, value} = e.target;\r\n        AuthActions.changeInput({\r\n          name,\r\n          value,\r\n          form: 'register'  \r\n        });\r\n    }\r\n    \r\n\r\n    handleFileInput(e){\r\n            this.setState({\r\n            file: e.target.files[0]\r\n            });\r\n        \r\n      }\r\n    handleChange = (e) =>{\r\n    const {AuthActions} = this.props;\r\n    const {name, value} = e.target;\r\n    AuthActions.changeInput({\r\n      name,\r\n      value,\r\n      form: 'register'  \r\n    });\r\n    const validation = this.validate[name](value);\r\n    if(name.indexOf('password') > -1 || !validation) return;\r\n    const check = name === 'email' ? this.checkEmailExists : 'id' ? this.checkIdExists : this.checkPhoneExists;\r\n    check(value);\r\n}\r\nhandleLocalRegister = async () => {\r\n    const{form, AuthActions, error, history,UserActions} = this.props;\r\n    const {email, id, password, passwordConfirm, phone,name,comment,address,gender,birthday} = form.toJS();\r\n    const formData = new FormData();\r\n    formData.append('file',this.state.file);\r\n    console.log(this.state.file);\r\n    formData.append('userId',id);\r\n    const {validate} = this;\r\n\r\n    if(error) return; //현재 에러 있는 상태라면 진행 x\r\n    if(!validate['email'](email)\r\n    || !validate['id'](id)\r\n    || !validate['password'](password)\r\n    || !validate['passwordConfirm'](passwordConfirm)\r\n    || !validate['name'](name)\r\n    || !validate['comment'](comment)\r\n    || !validate['phone'](phone)\r\n    ){\r\n        //하나라도 실패하면 진행 하지 않음\r\n        return;\r\n    }\r\n    \r\n    try{\r\n        await AuthActions.localRegister({\r\n            email,id,password,name,comment,phone,address,gender,birthday\r\n        });\r\n    } catch(e){\r\n        \r\n    }\r\n    try{\r\n        await AuthActions.localRegisterImage(\r\n            formData\r\n        );\r\n        const loggedInfo = this.props.result.toJS();\r\n        storage.set('loggedInfo', loggedInfo);\r\n        UserActions.setLoggedInfo(loggedInfo);\r\n        UserActions.setValidated(true);\r\n        history.push('/');\r\n    } catch(e){\r\n        console.log(e);\r\n    }\r\n        this.setError('알 수 없는 에러가 발생했습니다.');\r\n    }\r\n    render(){\r\n        const {error} = this.props;\r\n        const {id,password,passwordConfirm,email,name,phone,birthday,comment,address,gender} = this.props.form.toJS();\r\n        const {handleChange,handleLocalRegister,defaultNullChange,handleFileInput} = this;\r\n        return(\r\n            <AuthContent title='회원가입'>\r\n                <InputWithLabel label = \"아이디\" name=\"id\" placeholder=\"아이디\"\r\n                value = {id}\r\n                onChange={handleChange}/>\r\n                <InputWithLabel label = \"비밀번호\" name=\"password\" placeholder=\"비밀번호\"\r\n                type=\"password\"\r\n                value={password} onChange={handleChange}\r\n                />\r\n                <InputWithLabel label = \"비밀번호 확인\" name=\"passwordConfirm\" placeholder=\"다시 한번 입력\"\r\n                type=\"password\"\r\n                value={passwordConfirm} onChange={handleChange}\r\n                />\r\n                <InputWithLabel label = \"생년월일\" name=\"birthday\" placeholder=\"****-**-**\"\r\n                type=\"date\"\r\n                value = {birthday} onChange={defaultNullChange}\r\n                />\r\n                <InputWithLabel label = \"이메일\" name=\"email\" placeholder=\"timeline@naver.com\"\r\n                type=\"email\"\r\n                value = {email}\r\n                onChange={handleChange}/>\r\n                <InputWithLabel label = \"핸드폰 번호\" name=\"phone\" placeholder=\"010-1234-1234\"\r\n                value={phone}\r\n                onChange={handleChange}/>\r\n                <InputWithLabel label = \"이름\" name=\"name\" placeholder=\"이름\"\r\n                value = {name} onChange={handleChange}/>\r\n                <InputWithLabel label = \"코멘트\" name=\"comment\" placeholder=\"반갑습니다.\"\r\n                value = {comment} onChange={handleChange} /> <br/>\r\n                <Label label = \"성별\"></Label>\r\n                <input name= \"gender\" type=\"radio\" checked = \"checked\" value= {gender} onChange={defaultNullChange} />여성\r\n                <input name=\"gender\" type=\"radio\" value ={gender}  onChange={defaultNullChange}/>남성\r\n                <input name=\"gender\" type=\"radio\"value={gender} onChange={defaultNullChange} />others\r\n                <InputWithLabel label =\"주소\" name =\"address\" placeholder=\"서울\" value = {address} onChange={defaultNullChange} />\r\n                <InputWithLabel label = \"프로필 사진\" name =\"image\" type=\"file\" onChange={handleFileInput}></InputWithLabel>\r\n                {\r\n                    error && <AuthError>{error}</AuthError>\r\n                }               \r\n                <AuthButton onClick={handleLocalRegister}>회원가입</AuthButton>\r\n                <RightAlignedLink to=\"/auth/login\">로그인</RightAlignedLink>\r\n            </AuthContent>\r\n        );\r\n        }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['register','form']),\r\n        error: state.auth.getIn(['register','error']),\r\n        exists: state.auth.getIn(['register','exists']),\r\n        result: state.auth.get('result')\r\n    }),\r\n    (dispatch)=>({\r\n        AuthActions : bindActionCreators(authActions,dispatch),\r\n        UserActions : bindActionCreators(userActions, dispatch)\r\n    })\r\n)(Register);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as baseActions from 'redux/modules/base';\r\nimport {AuthWrapper} from 'components/Auth';\r\nimport {Route} from 'react-router-dom';\r\nimport {Login,Register} from 'containers/Auth';\r\nclass Auth extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.BaseActions.setHeaderVisibility(false);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.BaseActions.setHeaderVisibility(true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AuthWrapper>\r\n                <Route path=\"/auth/Login\" component={Login}/>\r\n                <Route path=\"/auth/Register\" component={Register}/>\r\n            </AuthWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n\r\n    }),\r\n    //상태값 수정할 때 사용되는 메소드\r\n    (dispatch) => ({\r\n        // bindActionCreators 는 액션함수들을 자동으로 바인딩해줍니다.\r\n        BaseActions : bindActionCreators(baseActions, dispatch)\r\n    })\r\n)(Auth);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { media } from 'lib/styleUtils';\r\n\r\n// 헤더 아래에 위치하도록 상단 패딩\r\nconst Wrapper = styled.div`\r\n    margin-top: 58px;\r\n    padding: 1rem;\r\n    width: 1200px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    ${media.wide`\r\n        width: 992px;\r\n    `}\r\n    ${media.desktop`\r\n        width: 100%;\r\n    `}\r\n`;\r\n\r\nconst PageWrapper = ({responsive, children}) => (\r\n    <Wrapper responsive={responsive}>\r\n        {children}\r\n    </Wrapper>\r\n);\r\n\r\nexport default PageWrapper;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst Thumbnail = styled.div`\r\n    background-image: url(${props => props.image});\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n`;\r\n\r\nconst Username = styled.div`\r\n    margin-top: 0.5rem;\r\n    font-size: 1.5rem;\r\n    font-weight: 800;\r\n    color: ${oc.gray[8]};\r\n`;\r\n\r\n\r\n\r\n\r\nconst UserHead = ({image=\"/static/images/default_thumbnail.png\", username=\"username\"}) => (\r\n    <Wrapper>\r\n        <Thumbnail image={image}/>\r\n        <Username>{username}</Username>\r\n    </Wrapper>\r\n);\r\n\r\nexport default UserHead;","import {createAction, handleActions} from 'redux-actions';\r\n\r\nimport {Map, fromJS} from 'immutable';\r\nimport {pender} from 'redux-pender';\r\nimport * as UsersAPI from 'lib/api/users';\r\n\r\nconst GET_USER_INFO = 'userPage/GET_USER_INFO';\r\nconst CHECK_USER_AND_GET_INFO = 'userPage/CHECK_USER_AND_GET_INFO';\r\n\r\nexport const getUserInfo = createAction(GET_USER_INFO, UsersAPI.getUserInfo);\r\nexport const checkUserAndGetInfo = createAction(CHECK_USER_AND_GET_INFO, UsersAPI.checkUserAndGetInfo);\r\n\r\nconst initialState = Map({\r\n    info: Map({\r\n            thumbnail: null,\r\n            username: null\r\n    }),\r\n    User: Map({\r\n        userId : '',\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        comment: '',\r\n        birthday : '',\r\n        name : '',\r\n        gender : '',\r\n        address : ''\r\n    })\r\n});\r\n\r\nexport default handleActions({\r\n    ...pender({\r\n        type: GET_USER_INFO,\r\n        onSuccess: (state,action) => state.set('info',fromJS(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: CHECK_USER_AND_GET_INFO,\r\n        onSuccess: (state,action) => state.set('User',Map(action.payload.data))\r\n    })\r\n},initialState);","import axios from 'axios';\r\n\r\nexport const getUserInfo = () => axios.get('http://localhost:8080/api/member/info',{withCredentials: true});\r\nexport const checkUserAndGetInfo = () => axios.get('http://localhost:8080/api/auth',{withCredentials: true});","import React, {Component} from 'react';\r\nimport UserHead from 'components/User/UserHead';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as userPageActions from 'redux/modules/userPage';\r\n\r\nclass UserHeadContainer extends Component {\r\n    \r\n    getUserInfo = async() => {\r\n        const{UserPageActions} = this.props;\r\n        try{\r\n            UserPageActions.getUserInfo();\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getUserInfo();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.username !== this.props.username){\r\n            this.getUserInfo();\r\n        }\r\n    }\r\n    render(){\r\n        const {username,thumbnail,fetched} = this.props;\r\n        if(!fetched) return null;\r\n        return (\r\n            <UserHead username={username} thumbnail={thumbnail}/>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        thumbnail: state.userPage.getIn(['info','profile','thumbnail']),\r\n        fetched: state.pender.success['userPage/GET_USER_INFO']\r\n    }),\r\n    (dispatch)=> ({\r\n        UserPageActions: bindActionCreators(userPageActions, dispatch)\r\n    })\r\n)(UserHeadContainer);","// 에러처리된 JSON 파싱함수\r\nconst parseJSON = (str) => {\r\n    let parsed = null;\r\n    try {\r\n        parsed = JSON.parse(str);\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n    return parsed;\r\n}\r\n\r\nexport default (function socketHelper() {\r\n    let _store = null;\r\n    let _socket = null;\r\n    let _uri = null;\r\n    let _listen = true;\r\n\r\n    const listener = (message) => {\r\n        if(!_listen) return; // _listen 이 활성화가 되어있지 않으면 무시\r\n        const data = parseJSON(message.data); // JSON 파싱\r\n        if(!data || !data.type) return; // 파싱 실패했거나, type 값이 없으면 무시\r\n        _store.dispatch(data); // 제대로 된 데이터면 store 에 디스패치\r\n    }\r\n\r\n\r\n    const reconnect = () => {\r\n        // 연결이 끊겼을 때 3초마다 재연결\r\n        console.log('reconnecting..');\r\n        setTimeout(() => connect(_uri), 3000);\r\n    }\r\n\r\n    const connect = (uri) => {\r\n        _uri = uri;\r\n        _socket = new WebSocket(uri);\r\n        _socket.onmessage = listener;\r\n        _socket.onopen = (event) => {\r\n            console.log('connected to ' + uri);\r\n        }\r\n        _socket.onclose = reconnect; // 연결이 끊기 면 재연결 시도\r\n    }\r\n    \r\n    return {\r\n        initialize: (store, uri) => {\r\n            _store = store;\r\n            connect(uri);\r\n        },\r\n        listen: () => {\r\n            _listen = true;\r\n        },\r\n        ignore: () => {\r\n            _listen = false;\r\n        }\r\n    }\r\n})()","import React, { Component } from 'react';\r\nimport PageWrapper from 'components/Base/PageWrapper';\r\nimport UserHeadContainer from 'containers/User/UserHeadContainer';\r\nimport socket from 'lib/socket';\r\n\r\nclass User extends Component {\r\n\r\n    componentDidMount() {\r\n        socket.ignore();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socket.listen();\r\n    }\r\n    \r\n    render() {\r\n        const { match } = this.props;\r\n        const { username } = match.params;\r\n\r\n        return (\r\n            <PageWrapper>\r\n                <UserHeadContainer username={username}/>\r\n            </PageWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\nimport { shadow, media } from 'lib/styleUtils';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// 상단 고정, 그림자\r\nconst Positioner = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    width: 100%;\r\n    top: 0px;\r\n    ${shadow(1)}\r\n    z-index: 20;\r\n`;\r\n\r\n// 흰 배경, 내용 중간 정렬\r\nconst WhiteBackground = styled.div`\r\n    background: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    height: auto;\r\n`;\r\n\r\n// 해더의 내용\r\nconst HeaderContents = styled.div`\r\n    width: 1200px;\r\n    height: 55px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    position: relative;\r\n    padding-right: 1rem;\r\n    padding-left: 1rem;\r\n    ${media.wide`\r\n        width: 992px;\r\n    `}\r\n    ${media.tablet`\r\n        width: 100%;\r\n    `}\r\n`;\r\n\r\n// 로고\r\nconst Logo = styled(Link)`\r\n    font-size: 1.4rem;\r\n    letter-spacing: 2px;\r\n    color: ${oc.teal[7]};\r\n    font-family: 'Rajdhani';\r\n    text-decoration: none;\r\n`;\r\n\r\n// 중간 여백\r\nconst Spacer = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n\r\n// 하단 그래디언트 테두리\r\nconst GradientBorder = styled.div`\r\n    height: 3px;\r\n    background: linear-gradient(to right, ${oc.teal[6]}, ${oc.cyan[5]});\r\n`;\r\n\r\nconst Header = ({children}) => {\r\n    return (\r\n        <Positioner>\r\n            <WhiteBackground>\r\n                <HeaderContents>\r\n                    <Logo to=\"/\">TIMELINE</Logo>\r\n                    <Spacer/>\r\n                    {children}\r\n                </HeaderContents>\r\n            </WhiteBackground>\r\n            <GradientBorder/>\r\n        </Positioner>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\nimport { Link } from 'react-router-dom';\r\nimport { shadow } from 'lib/styleUtils';\r\n\r\nconst BorderedButton = styled(Link)`\r\n    font-weight: 600;\r\n    color: ${oc.cyan[6]};\r\n    border: 1px solid ${oc.cyan[6]};\r\n    padding: 0.5rem;\r\n    padding-bottom: 0.4rem;\r\n    cursor: pointer;\r\n    border-radius: 2px;\r\n    text-decoration: none;\r\n    transition: .2s all;\r\n\r\n    &:hover {\r\n        background: ${oc.cyan[6]};\r\n        color: white;\r\n        ${shadow(1)}\r\n    }\r\n\r\n    &:active {\r\n        /* 마우스 클릭시 아래로 미세하게 움직임 */\r\n        transform: translateY(3px);\r\n    }\r\n\r\n\r\n`;\r\n\r\nconst LoginButton = () => (\r\n    <BorderedButton to=\"/auth/login\">\r\n        로그인 / 가입\r\n    </BorderedButton>\r\n);\r\n\r\nexport default LoginButton;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    \r\n    background: ${oc.cyan[5]};\r\n    background-image: url(${props => props.image});\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    &:hover {\r\n        filter: brightness(105%);\r\n    }\r\n`;\r\n\r\nconst UserThumbnail = ({thumbnail, onClick}) => (\r\n    <Wrapper image={thumbnail} onClick={onClick}>\r\n\r\n    </Wrapper>\r\n);\r\n\r\nexport default UserThumbnail;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// 유저 메뉴를 우측 상단에 위치시킵니다\r\nconst Positioner = styled.div`\r\n    position: absolute;\r\n    right: 0px;\r\n    top: 55px;\r\n`;\r\n\r\n// 흰색 메뉴박스 \r\nconst MenuWrapper = styled.div`\r\n    background: white;\r\n    min-width: 140px;\r\n    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\r\n`;\r\n\r\nconst UserMenu = ({children}) => (\r\n    <Positioner>\r\n        <MenuWrapper>\r\n            {children}\r\n        </MenuWrapper>\r\n    </Positioner>\r\n);\r\n\r\nexport default UserMenu;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\n\r\nconst MenuItem = styled.div`\r\n    & + & {\r\n        border-top: 1px solid ${oc.gray[3]};\r\n    }\r\n    \r\n    padding-left: 1rem;\r\n    padding-top: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n    color: ${oc.gray[7]};\r\n    cursor: pointer;\r\n    &:hover {\r\n        background: ${oc.gray[0]};\r\n        font-weight: 500;\r\n        color: ${oc.cyan[6]};\r\n    }\r\n`;\r\n\r\nconst UserMenuItem = ({onClick, children}) => (\r\n    <MenuItem onClick={onClick}>\r\n        {children}\r\n    </MenuItem>\r\n);\r\n\r\nexport default UserMenuItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\n\r\nconst Wrapper = styled.div`\r\n    background: ${oc.gray[1]};\r\n    border-bottom: 1px solid ${oc.gray[3]};\r\n    padding-right: 1rem;\r\n    padding-left: 1rem;\r\n    padding-top: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n    color: ${oc.gray[9]};\r\n    font-weight: 500;\r\n    font-size: 0.9rem;\r\n`;\r\n\r\nconst Username = ({username}) => (\r\n    <Wrapper>\r\n        @{username}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Username;","import React, {Component} from 'react';\r\nimport {UserMenuItem,UserMenu, Username} from 'components/Base/UserMenu';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as baseActions from 'redux/modules/base';\r\nimport * as userActions from 'redux/modules/user';\r\nimport PropTypes from 'prop-types';\r\nimport storage from 'lib/storage';\r\n\r\nclass UserMenuContainer extends Component{\r\n\r\n    static contextTypes = {\r\n        router: PropTypes.object\r\n    }\r\n\r\n    handleSetUserInfo = async() => {\r\n        window.location.href='/member';\r\n    }\r\n\r\n\r\n    handleLogout = async()=> {\r\n        const {UserActions} = this.props;\r\n\r\n        try{\r\n            await UserActions.logout();\r\n        }catch (e){\r\n            console.log(e);\r\n        }\r\n\r\n        storage.remove('loggedInfo');\r\n        window.location.href='/';\r\n    }\r\n\r\n    render(){\r\n        const{visible, username} = this.props;\r\n        const {handleLogout,handleSetUserInfo} = this;\r\n\r\n        if(!visible){\r\n            return null;\r\n        }\r\n        return (\r\n            <UserMenu>\r\n                <Username username={username}/>\r\n                <UserMenuItem onClick={handleSetUserInfo}>설정</UserMenuItem>\r\n                <UserMenuItem onClick={handleLogout}>로그아웃</UserMenuItem>\r\n                </UserMenu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n\r\n    (state) => ({\r\n        visible : state.base.getIn(['userMenu','visible']),\r\n        username: state.user.getIn(['loggedInfo','username'])\r\n    }),\r\n    (dispatch) => ({\r\n        BaseActions: bindActionCreators(baseActions, dispatch),\r\n        UserActions: bindActionCreators(userActions, dispatch)\r\n    })\r\n)(UserMenuContainer);","import React, {Component} from 'react';\r\nimport Header, {LoginButton,UserThumbnail} from 'components/Base/Header';\r\nimport {connect} from 'react-redux';\r\nimport * as userActions from 'redux/modules/user';\r\nimport * as baseActions from 'redux/modules/base';\r\nimport {bindActionCreators} from 'redux';\r\nimport UserMenuContainer from './UserMenuContainer';\r\n\r\nclass HeaderContainer extends Component {\r\n\r\n    handleThumbnailClick = () => {\r\n        const {BaseActions} = this.props;\r\n        BaseActions.setUserMenuVisibility(true);\r\n    }\r\n\r\n    render(){\r\n    const {visible, user} = this.props;\r\n    const {handleThumbnailClick} = this;\r\n    if(!visible) return null;\r\n\r\n        return(\r\n            <Header>\r\n                { user.get('logged')\r\n                    ?(<UserThumbnail thumbnail={user.getIn(['loggedInfo','thumbnail'])} onClick={handleThumbnailClick}/>)\r\n                        : <LoginButton/>\r\n                }\r\n                <UserMenuContainer eventTypes=\"click\"/>\r\n                </Header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        visible: state.base.getIn(['header', 'visible']),\r\n        user: state.user\r\n    }),\r\n    (dispatch) => ({\r\n        UserActions: bindActionCreators(userActions, dispatch),\r\n        BaseActions: bindActionCreators(baseActions,dispatch)\r\n    })\r\n) (HeaderContainer);","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { Home, Auth, User } from 'pages';\nimport HeaderContainer from 'containers/Base/HeaderContainer';\n\nimport storage from 'lib/storage';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as userActions from 'redux/modules/user';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css' \n\nclass App extends Component {\n\n    initializeUserInfo = async () => {\n        const loggedInfo = storage.get('loggedInfo');\n        if(!loggedInfo) return;\n\n        const {UserActions} = this.props;\n        UserActions.setLoggedInfo(loggedInfo);\n        try{\n            await UserActions.checkStatus();\n        } catch(e){\n            console.log(e);\n            storage.remove('loggedInfo');\n            \n            window.location.href = '/auth/login?expired'\n        }\n    }\n    componentDidMount(){\n        this.initializeUserInfo();\n    }\n\n    render() {\n        return (\n            <div>\n              <HeaderContainer/>\n                <Route exact path=\"/\" component={Home}/>\n                <Route path=\"/auth\" component={Auth}/>\n                <Route path=\"/@:username\" component={User}/>\n                <ToastContainer style={{zIndex: 20}} hideProgressBar={true} position=\"bottom-right\"/>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    (dispatch) => ({\n        UserActions: bindActionCreators(userActions, dispatch)\n    })\n)(App);","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst Root = ({store}) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <Route path=\"/\" component={App}/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport base from './base';\r\nimport auth from './auth';\r\nimport user from './user';\r\nimport userPage from './userPage';\r\n\r\nimport {penderReducer} from 'redux-pender';\r\nexport default combineReducers({\r\n    base,\r\n    auth,\r\n    user,\r\n    userPage,\r\n    pender: penderReducer\r\n});","import { createStore,applyMiddleware, compose } from 'redux';\r\nimport penderMiddleware from 'redux-pender';\r\nimport modules from './modules';\r\n\r\nconst isDevelopment = process.env.NODE_ENV === 'development';\r\nconst composeEnhancers = isDevelopment ? (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose) : compose;\r\n\r\nconst configureStore = (initialState) => {\r\n    const store = createStore(modules, initialState, composeEnhancers(\r\n        applyMiddleware(penderMiddleware())\r\n    ));\r\n    return store;\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from 'redux/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(<Root store={store}/>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}