{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Base\\\\UserMenuContainer.js\";\nimport React, { Component } from 'react';\nimport { UserMenuItem, UserMenu, Username } from '../../components/UserMenu';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as baseActions from '../../redux/modules/base';\nimport * as userActions from '../../redux/modules/user';\nimport * as postActions from '../../redux/modules/post';\nimport { handleLogout, setUserActions } from '../Function/SignModule';\nimport { PostPopup } from '../../components/Popup';\nimport PropTypes from 'prop-types';\n\nclass UserMenuContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      setUserActions(this.props.UserActions);\n    };\n\n    this.handleLogoutButtonClick = e => {\n      const PostActions = this.props.PostActions;\n      const id = e.target.id;\n      PostActions.setPostPopupDisplay('block');\n      PostActions.setPopupText('로그아웃하시겠습니까?');\n      console.log(e.target.id);\n    };\n\n    this.handleCancel = async () => {\n      const _this$props = this.props,\n            PostActions = _this$props.PostActions,\n            BaseActions = _this$props.BaseActions;\n      PostActions.setPostPopupDisplay('none');\n      BaseActions.setUserMenuVisibility('none');\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          visible = _this$props2.visible,\n          username = _this$props2.username,\n          BaseActions = _this$props2.BaseActions,\n          postPopupDisplay = _this$props2.postPopupDisplay,\n          popupText = _this$props2.popupText;\n    const handleLogoutButtonClick = this.handleLogoutButtonClick,\n          handleCancel = this.handleCancel;\n\n    if (visible === 'none') {\n      return null;\n    } else {\n      BaseActions.setFollowMenuVisible('none');\n      BaseActions.setAlarmMenuVisible('none');\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(UserMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Username, {\n      username: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(UserMenuItem, {\n      id: 'logout',\n      onClick: handleLogoutButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC544\\uC6C3\")), React.createElement(PostPopup, {\n      handleOk: handleLogout,\n      right: '40%',\n      handleCancel: handleCancel,\n      text: popupText,\n      display: postPopupDisplay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nUserMenuContainer.contextTypes = {\n  router: PropTypes.object\n};\nexport default connect(state => ({\n  visible: state.base.get('userMenuVisible'),\n  username: state.user.getIn(['loggedInfo', 'username']),\n  display: state.post.get('popupDisplay'),\n  postPopupDisplay: state.post.get('postPopupDisplay'),\n  popupText: state.post.get('popupText')\n}), dispatch => ({\n  BaseActions: bindActionCreators(baseActions, dispatch),\n  UserActions: bindActionCreators(userActions, dispatch),\n  PostActions: bindActionCreators(postActions, dispatch)\n}))(UserMenuContainer);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Base/UserMenuContainer.js"],"names":["React","Component","UserMenuItem","UserMenu","Username","connect","bindActionCreators","baseActions","userActions","postActions","handleLogout","setUserActions","PostPopup","PropTypes","UserMenuContainer","componentDidMount","props","UserActions","handleLogoutButtonClick","e","PostActions","id","target","setPostPopupDisplay","setPopupText","console","log","handleCancel","BaseActions","setUserMenuVisibility","render","visible","username","postPopupDisplay","popupText","setFollowMenuVisible","setAlarmMenuVisible","contextTypes","router","object","state","base","get","user","getIn","display","post","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,EAAqBC,QAArB,EAA+BC,QAA/B,QAA8C,2BAA9C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,SAAQC,YAAR,EAAqBC,cAArB,QAA0C,wBAA1C;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,MAAMC,iBAAN,SAAgCb,SAAhC,CAAyC;AAAA;AAAA;;AAAA,SAMrCc,iBANqC,GAMnB,MAAI;AAClBJ,MAAAA,cAAc,CAAC,KAAKK,KAAL,CAAWC,WAAZ,CAAd;AAEH,KAToC;;AAAA,SAUrCC,uBAVqC,GAUVC,CAAD,IAAO;AAAA,YACtBC,WADsB,GACP,KAAKJ,KADE,CACtBI,WADsB;AAAA,YAEvBC,EAFuB,GAEjBF,CAAC,CAACG,MAFe,CAEvBD,EAFuB;AAG7BD,MAAAA,WAAW,CAACG,mBAAZ,CAAgC,OAAhC;AACAH,MAAAA,WAAW,CAACI,YAAZ,CAAyB,aAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACG,MAAF,CAASD,EAArB;AACH,KAhBoC;;AAAA,SAmBrCM,YAnBqC,GAmBtB,YAAW;AAAA,0BACY,KAAKX,KADjB;AAAA,YACfI,WADe,eACfA,WADe;AAAA,YACHQ,WADG,eACHA,WADG;AAEtBR,MAAAA,WAAW,CAACG,mBAAZ,CAAgC,MAAhC;AACAK,MAAAA,WAAW,CAACC,qBAAZ,CAAkC,MAAlC;AACH,KAvBoC;AAAA;;AAyBrCC,EAAAA,MAAM,GAAE;AAAA,yBAC8D,KAAKd,KADnE;AAAA,UACEe,OADF,gBACEA,OADF;AAAA,UACWC,QADX,gBACWA,QADX;AAAA,UACoBJ,WADpB,gBACoBA,WADpB;AAAA,UACgCK,gBADhC,gBACgCA,gBADhC;AAAA,UACiDC,SADjD,gBACiDA,SADjD;AAAA,UAEGhB,uBAFH,GAE2C,IAF3C,CAEGA,uBAFH;AAAA,UAE2BS,YAF3B,GAE2C,IAF3C,CAE2BA,YAF3B;;AAIJ,QAAGI,OAAO,KAAK,MAAf,EAAsB;AAClB,aAAO,IAAP;AACH,KAFD,MAGK;AACDH,MAAAA,WAAW,CAACO,oBAAZ,CAAiC,MAAjC;AACAP,MAAAA,WAAW,CAACQ,mBAAZ,CAAgC,MAAhC;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEJ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAE,QAAlB;AAA4B,MAAA,OAAO,EAAEd,uBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,CADA,EAKA,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAER,YAArB;AAAmC,MAAA,KAAK,EAAE,KAA1C;AAAiD,MAAA,YAAY,EAAEiB,YAA/D;AACC,MAAA,IAAI,EAAEO,SADP;AACkB,MAAA,OAAO,EAAED,gBAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CADJ;AAUH;;AA9CoC;;AAAnCnB,iB,CAEKuB,Y,GAAe;AAClBC,EAAAA,MAAM,EAAEzB,SAAS,CAAC0B;AADA,C;AA+C1B,eAAelC,OAAO,CAEjBmC,KAAD,KAAY;AACRT,EAAAA,OAAO,EAAGS,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,iBAAf,CADF;AAERV,EAAAA,QAAQ,EAAEQ,KAAK,CAACG,IAAN,CAAWC,KAAX,CAAiB,CAAC,YAAD,EAAc,UAAd,CAAjB,CAFF;AAGRC,EAAAA,OAAO,EAAGL,KAAK,CAACM,IAAN,CAAWJ,GAAX,CAAe,cAAf,CAHF;AAIRT,EAAAA,gBAAgB,EAAGO,KAAK,CAACM,IAAN,CAAWJ,GAAX,CAAe,kBAAf,CAJX;AAKRR,EAAAA,SAAS,EAAGM,KAAK,CAACM,IAAN,CAAWJ,GAAX,CAAe,WAAf;AALJ,CAAZ,CAFkB,EASjBK,QAAD,KAAe;AACXnB,EAAAA,WAAW,EAAEtB,kBAAkB,CAACC,WAAD,EAAcwC,QAAd,CADpB;AAEX9B,EAAAA,WAAW,EAAEX,kBAAkB,CAACE,WAAD,EAAcuC,QAAd,CAFpB;AAGX3B,EAAAA,WAAW,EAAGd,kBAAkB,CAACG,WAAD,EAAcsC,QAAd;AAHrB,CAAf,CATkB,CAAP,CAcbjC,iBAda,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {UserMenuItem,UserMenu, Username} from '../../components/UserMenu';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as baseActions from '../../redux/modules/base';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport * as postActions from '../../redux/modules/post';\r\nimport {handleLogout,setUserActions} from '../Function/SignModule';\r\nimport {PostPopup} from '../../components/Popup';\r\nimport PropTypes from 'prop-types';\r\nclass UserMenuContainer extends Component{\r\n\r\n    static contextTypes = {\r\n        router: PropTypes.object\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        setUserActions(this.props.UserActions);\r\n\r\n    }\r\n    handleLogoutButtonClick = (e) => {\r\n        const {PostActions} = this.props;\r\n        const{id} = e.target;\r\n        PostActions.setPostPopupDisplay('block');\r\n        PostActions.setPopupText('로그아웃하시겠습니까?');\r\n        console.log(e.target.id);\r\n    }\r\n\r\n    \r\n    handleCancel = async() => {\r\n        const {PostActions,BaseActions} = this.props;\r\n        PostActions.setPostPopupDisplay('none');\r\n        BaseActions.setUserMenuVisibility('none');\r\n    }\r\n\r\n    render(){\r\n        const{visible, username,BaseActions,postPopupDisplay,popupText} = this.props;\r\n        const {handleLogoutButtonClick,handleCancel} = this;\r\n\r\n        if(visible === 'none'){\r\n            return null;\r\n        }\r\n        else {\r\n            BaseActions.setFollowMenuVisible('none');\r\n            BaseActions.setAlarmMenuVisible('none');\r\n        }\r\n        return (\r\n            <div>\r\n            <UserMenu>\r\n                <Username username={username}/>\r\n                <UserMenuItem id={'logout'} onClick={handleLogoutButtonClick}>로그아웃</UserMenuItem>\r\n                </UserMenu>\r\n            <PostPopup handleOk={handleLogout} right={'40%'} handleCancel={handleCancel}\r\n             text={popupText} display={postPopupDisplay} />\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n\r\n    (state) => ({\r\n        visible : state.base.get('userMenuVisible'),\r\n        username: state.user.getIn(['loggedInfo','username']),\r\n        display : state.post.get('popupDisplay'),\r\n        postPopupDisplay : state.post.get('postPopupDisplay'),\r\n        popupText : state.post.get('popupText')\r\n    }),\r\n    (dispatch) => ({\r\n        BaseActions: bindActionCreators(baseActions, dispatch),\r\n        UserActions: bindActionCreators(userActions, dispatch),\r\n        PostActions : bindActionCreators(postActions, dispatch)\r\n    })\r\n)(UserMenuContainer);"]},"metadata":{},"sourceType":"module"}