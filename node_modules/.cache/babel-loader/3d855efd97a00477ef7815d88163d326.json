{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Auth\\\\KakaoRegister.js\";\nimport React, { Component } from 'react';\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink, AuthError } from '../../components/Auth';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as authActions from '../../redux/modules/auth';\nimport { setError, checkEmailExists, validate, setAuthActions } from '../Function/ValidateModule';\nimport * as userActions from '../../redux/modules/user';\nimport * as postActions from '../../redux/modules/post';\nimport storage from '../../lib/storage';\n\nclass KakaoRegister extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = e => {\n      const AuthActions = this.props.AuthActions;\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      AuthActions.changeInput({\n        name,\n        value,\n        form: 'register'\n      });\n      if (name.indexOf('email') > -1) checkEmailExists(value);\n    };\n\n    this.handleLocalRegister = async () => {\n      const _this$props = this.props,\n            form = _this$props.form,\n            AuthActions = _this$props.AuthActions,\n            error = _this$props.error,\n            history = _this$props.history,\n            UserActions = _this$props.UserActions,\n            match = _this$props.match;\n      const id = match.params.id;\n\n      const _form$toJS = form.toJS(),\n            email = _form$toJS.email,\n            comment = _form$toJS.comment;\n\n      if (error) return; //현재 에러 있는 상태라면 진행 x\n\n      if (!validate['email'](email) || !validate['comment'](comment)) {\n        //하나라도 실패하면 진행 하지 않음\n        return;\n      }\n\n      try {\n        await AuthActions.kakaoRegister({\n          email,\n          id,\n          comment\n        });\n        const loggedInfo = this.props.result.toJS();\n        storage.set('loggedInfo', loggedInfo);\n        UserActions.setLoggedInfo(loggedInfo);\n        UserActions.setValidated(true);\n        history.push('/');\n      } catch (e) {\n        if (e.response.status === 411) setError('조건에 맞는 데이터를 입력해주세요.');\n        if (e.response.status === 409) setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');\n      }\n    };\n\n    this.enterRegister = () => {\n      if (window.event.keyCode === 13) this.handleLocalRegister();\n    };\n  }\n\n  componentDidMount() {\n    if (!storage.get('kakaologin')) return null;\n    storage.remove('kakaologin');\n    setAuthActions(this.props.AuthActions);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          error = _this$props2.error,\n          errorId = _this$props2.errorId;\n\n    const _this$props$form$toJS = this.props.form.toJS(),\n          email = _this$props$form$toJS.email,\n          comment = _this$props$form$toJS.comment;\n\n    const handleChange = this.handleChange,\n          handleLocalRegister = this.handleLocalRegister,\n          enterRegister = this.enterRegister,\n          handlePopupOk = this.handlePopupOk;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(AuthContent, {\n      title: \"SIGN UP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(InputWithLabel, {\n      label: \"\\uC774\\uBA54\\uC77C\",\n      name: \"email\",\n      placeholder: \"timeline@naver.com\",\n      enter: enterRegister,\n      value: email,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), errorId === 'email' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uCF54\\uBA58\\uD2B8\",\n      name: \"comment\",\n      placeholder: \"\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4.\",\n      value: comment,\n      onChange: handleChange,\n      enter: enterRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), errorId === 'comment' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, error), React.createElement(AuthButton, {\n      onClick: handleLocalRegister,\n      enter: enterRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(RightAlignedLink, {\n      to: \"/auth/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC778\")), React.createElement(Popup, {\n      handlePopupOk: handlePopupOk,\n      display: popupDisplay,\n      text: popupText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  form: state.auth.getIn(['register', 'form']),\n  error: state.auth.getIn(['register', 'error']),\n  errorId: state.auth.getIn(['register', 'errorId']),\n  result: state.auth.get('result'),\n  popupText: state.post.get('popupText'),\n  popupId: state.post.get('popupId'),\n  popupDisplay: state.post.get('popupDisplay')\n}), dispatch => ({\n  AuthActions: bindActionCreators(authActions, dispatch),\n  UserActions: bindActionCreators(userActions, dispatch),\n  PostActions: bindActionCreators(postActions, dispatch)\n}))(KakaoRegister);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Auth/KakaoRegister.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","AuthError","bindActionCreators","connect","authActions","setError","checkEmailExists","validate","setAuthActions","userActions","postActions","storage","KakaoRegister","handleChange","e","AuthActions","props","target","name","value","changeInput","form","indexOf","handleLocalRegister","error","history","UserActions","match","id","params","toJS","email","comment","kakaoRegister","loggedInfo","result","set","setLoggedInfo","setValidated","push","response","status","enterRegister","window","event","keyCode","componentDidMount","get","remove","render","errorId","handlePopupOk","popupDisplay","popupText","state","auth","getIn","post","popupId","dispatch","PostActions"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {AuthContent,InputWithLabel,AuthButton,RightAlignedLink,AuthError} from '../../components/Auth';\r\nimport { bindActionCreators } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as authActions from '../../redux/modules/auth';\r\nimport {setError,checkEmailExists,validate,setAuthActions} from '../Function/ValidateModule';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport * as postActions from '../../redux/modules/post';\r\nimport storage from '../../lib/storage';\r\n\r\nclass KakaoRegister extends Component{ \r\n    componentDidMount(){\r\n        if(!storage.get('kakaologin')) return null;\r\n        storage.remove('kakaologin');\r\n        setAuthActions(this.props.AuthActions);\r\n    }\r\n    handleChange = (e) =>{\r\n        const {AuthActions} = this.props;\r\n        const {name, value} = e.target;\r\n        AuthActions.changeInput({\r\n          name,\r\n          value,\r\n          form: 'register'  \r\n        });\r\n        if( name.indexOf('email') > -1)\r\n            checkEmailExists(value);\r\n    } \r\n    handleLocalRegister = async() => {\r\n        const{form, AuthActions, error, history,UserActions,match} = this.props;\r\n        const{id} = match.params;\r\n        const {email,comment} = form.toJS();\r\n    \r\n        if(error) return; //현재 에러 있는 상태라면 진행 x\r\n        if(!validate['email'](email)\r\n        || !validate['comment'](comment)\r\n        ){\r\n            //하나라도 실패하면 진행 하지 않음\r\n            return;\r\n        }\r\n        \r\n        try{\r\n             await AuthActions.kakaoRegister({\r\n                email,id,comment\r\n            });\r\n            const loggedInfo = this.props.result.toJS();\r\n            storage.set('loggedInfo', loggedInfo);\r\n            UserActions.setLoggedInfo(loggedInfo);\r\n            UserActions.setValidated(true);\r\n            history.push('/');\r\n        } catch(e){\r\n            if(e.response.status === 411)\r\n                setError('조건에 맞는 데이터를 입력해주세요.');\r\n            if(e.response.status === 409)\r\n                setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');\r\n        }\r\n        }\r\n        enterRegister = () => {\r\n            if(window.event.keyCode === 13)\r\n              this.handleLocalRegister();\r\n        }\r\nrender(){\r\n    const {error,errorId} = this.props;\r\n        const {email,comment} = this.props.form.toJS();\r\n        const {handleChange,handleLocalRegister,enterRegister,handlePopupOk} = this;\r\n    return(\r\n        <div>\r\n        <AuthContent title='SIGN UP'>\r\n                <InputWithLabel label = \"이메일\" name=\"email\" placeholder=\"timeline@naver.com\" enter = {enterRegister}\r\n                value = {email}\r\n                onChange={handleChange}/>\r\n                 {\r\n                    errorId === 'email' &&error && <AuthError>{error}</AuthError>\r\n                }               \r\n                <InputWithLabel label = \"코멘트\" name=\"comment\" placeholder=\"반갑습니다.\"\r\n                value = {comment} onChange={handleChange} enter = {enterRegister}/>\r\n                {\r\n                    errorId === 'comment' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <AuthButton onClick={handleLocalRegister} enter = {enterRegister}>회원가입</AuthButton>\r\n                <RightAlignedLink to=\"/auth/login\">로그인</RightAlignedLink>\r\n            </AuthContent>\r\n             <Popup handlePopupOk = {handlePopupOk} display={popupDisplay} text={popupText} />\r\n            </div>\r\n    );\r\n}\r\n}\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['register','form']),\r\n        error: state.auth.getIn(['register','error']),\r\n        errorId: state.auth.getIn(['register','errorId']),\r\n        result: state.auth.get('result'),\r\n        popupText : state.post.get('popupText'),\r\n        popupId : state.post.get('popupId'),\r\n        popupDisplay : state.post.get('popupDisplay')\r\n    }),\r\n    (dispatch)=>({\r\n        AuthActions : bindActionCreators(authActions,dispatch),\r\n        UserActions : bindActionCreators(userActions, dispatch),\r\n        PostActions : bindActionCreators(postActions,dispatch)\r\n    })\r\n)(KakaoRegister);"]},"metadata":{},"sourceType":"module"}