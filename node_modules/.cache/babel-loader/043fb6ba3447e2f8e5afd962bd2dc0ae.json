{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var _objectSpread2;import{createAction,handleActions}from'redux-actions';import{Map}from'immutable';import{pender}from'redux-pender';import*as AuthAPI from'../../lib/api/auth';var CHECK_EMAIL_EXISTS='auth/CHECK_EMAIL_EXISTS';var CHECK_ID_EXISTS='auth/CHECK_ID_EXISTS';var CHECK_PHONE_EXISTS='auth/CHECK_PHONE_EXISTS';var SET_ERROR='auth/SET_ERROR';var SET_ERROR_ID='auth/SET_ERROR_ID';var LOCAL_REGISTER='auth/LOCAL_REGISTER';var LOCAL_LOGIN='auth/LOCAL_LOGIN';var LOCAL_REGISTER_IMAGE='auth/LOCAL_REGISTER_IMAGE';var LOGOUT='auth/LOGOUT';var KAKAO_LOGIN='auth/KAKAO_LOGIN';var KAKAO_REGISTER='auth/KAKAO_REGISTER';var CHANGE_INPUT='auth/CHANGE_INPUT';// input 값 변경\nvar INITIALIZE_FORM='auth/INITIALIZE_FORM';// form 초기화\nexport var checkEmailExists=createAction(CHECK_EMAIL_EXISTS,AuthAPI.checkEmailExists);export var checkIdExists=createAction(CHECK_ID_EXISTS,AuthAPI.checkIdExists);export var checkPhoneExists=createAction(CHECK_PHONE_EXISTS,AuthAPI.checkPhoneExists);export var localRegister=createAction(LOCAL_REGISTER,AuthAPI.localRegister);export var localLogin=createAction(LOCAL_LOGIN,AuthAPI.localLogin);export var localRegisterImage=createAction(LOCAL_REGISTER_IMAGE,AuthAPI.localRegisterImage);export var kakaoLogin=createAction(KAKAO_LOGIN,AuthAPI.kakaoLogin);export var kakaoRegister=createAction(KAKAO_REGISTER,AuthAPI.kakaoRegister);export var logout=createAction(LOGOUT,AuthAPI.logout);export var changeInput=createAction(CHANGE_INPUT);// {form, name, value}\nexport var initializeForm=createAction(INITIALIZE_FORM);//form\nexport var setError=createAction(SET_ERROR);export var setErrorId=createAction(SET_ERROR_ID);var initialState=Map({register:Map({form:Map({id:'',password:'',passwordConfirm:'',email:'',phone:'',comment:'',birthday:'',name:'',gender:'',address:''}),error:null,errorId:''}),registerImage:Map({form:Map({image:null})}),login:Map({form:Map({id:'',password:''}),error:null}),result:Map({})});export default handleActions(_objectSpread((_objectSpread2={},_defineProperty(_objectSpread2,CHANGE_INPUT,function(state,action){var _action$payload=action.payload,form=_action$payload.form,name=_action$payload.name,value=_action$payload.value;return state.setIn([form,'form',name],value);}),_defineProperty(_objectSpread2,INITIALIZE_FORM,function(state,action){var initialForm=initialState.get(action.payload);return state.set(action.payload,initialForm);}),_defineProperty(_objectSpread2,SET_ERROR,function(state,action){var _action$payload2=action.payload,form=_action$payload2.form,message=_action$payload2.message;return state.setIn([form,'error'],message);}),_defineProperty(_objectSpread2,SET_ERROR_ID,function(state,action){var _action$payload3=action.payload,form=_action$payload3.form,id=_action$payload3.id;return state.setIn([form,'errorId'],id);}),_objectSpread2),pender({type:CHECK_EMAIL_EXISTS,onSuccess:function onSuccess(state,action){return state.set('result',Map(action.payload.data));}}),{},pender({type:CHECK_PHONE_EXISTS,onSuccess:function onSuccess(state,action){return state.set('result',Map(action.payload.data));}}),{},pender({type:CHECK_ID_EXISTS,onSuccess:function onSuccess(state,action){return state.set('result',Map(action.payload.data));}}),{},pender({type:LOCAL_REGISTER_IMAGE,onSuccess:function onSuccess(state,action){return state.set('result',Map(action.payload.data));}}),{},pender({type:LOCAL_LOGIN,onSuccess:function onSuccess(state,action){return state.set('result',Map(action.payload.data));}}),{},pender({type:LOCAL_REGISTER,onSuccess:function onSuccess(state,action){return state.set('result',Map(action.payload.data));}}),{},pender({type:KAKAO_LOGIN,onSuccess:function onSuccess(state,action){return state.set('result',Map(action.payload.data));}}),{},pender({type:KAKAO_REGISTER,onSuccess:function onSuccess(state,action){return state.set('result',Map(action.payload.data));}})),initialState);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/redux/modules/auth.js"],"names":["createAction","handleActions","Map","pender","AuthAPI","CHECK_EMAIL_EXISTS","CHECK_ID_EXISTS","CHECK_PHONE_EXISTS","SET_ERROR","SET_ERROR_ID","LOCAL_REGISTER","LOCAL_LOGIN","LOCAL_REGISTER_IMAGE","LOGOUT","KAKAO_LOGIN","KAKAO_REGISTER","CHANGE_INPUT","INITIALIZE_FORM","checkEmailExists","checkIdExists","checkPhoneExists","localRegister","localLogin","localRegisterImage","kakaoLogin","kakaoRegister","logout","changeInput","initializeForm","setError","setErrorId","initialState","register","form","id","password","passwordConfirm","email","phone","comment","birthday","name","gender","address","error","errorId","registerImage","image","login","result","state","action","payload","value","setIn","initialForm","get","set","message","type","onSuccess","data"],"mappings":"wUAAA,OAAQA,YAAR,CAAsBC,aAAtB,KAA0C,eAA1C,CACA,OAAQC,GAAR,KAAkB,WAAlB,CACA,OAAQC,MAAR,KAAqB,cAArB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,oBAAzB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,yBAA3B,CACA,GAAMC,CAAAA,eAAe,CAAG,sBAAxB,CACA,GAAMC,CAAAA,kBAAkB,CAAG,yBAA3B,CAEA,GAAMC,CAAAA,SAAS,CAAG,gBAAlB,CACA,GAAMC,CAAAA,YAAY,CAAG,mBAArB,CAEA,GAAMC,CAAAA,cAAc,CAAG,qBAAvB,CACA,GAAMC,CAAAA,WAAW,CAAG,kBAApB,CACA,GAAMC,CAAAA,oBAAoB,CAAG,2BAA7B,CACA,GAAMC,CAAAA,MAAM,CAAG,aAAf,CAEA,GAAMC,CAAAA,WAAW,CAAG,kBAApB,CACA,GAAMC,CAAAA,cAAc,CAAG,qBAAvB,CAEA,GAAMC,CAAAA,YAAY,CAAG,mBAArB,CAAyC;AACzC,GAAMC,CAAAA,eAAe,CAAG,sBAAxB,CAAgD;AAEhD,MAAO,IAAMC,CAAAA,gBAAgB,CAAGlB,YAAY,CAACK,kBAAD,CAAqBD,OAAO,CAACc,gBAA7B,CAArC,CACP,MAAO,IAAMC,CAAAA,aAAa,CAAGnB,YAAY,CAACM,eAAD,CAAiBF,OAAO,CAACe,aAAzB,CAAlC,CACP,MAAO,IAAMC,CAAAA,gBAAgB,CAAGpB,YAAY,CAACO,kBAAD,CAAqBH,OAAO,CAACgB,gBAA7B,CAArC,CAEP,MAAO,IAAMC,CAAAA,aAAa,CAAGrB,YAAY,CAACU,cAAD,CAAiBN,OAAO,CAACiB,aAAzB,CAAlC,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAGtB,YAAY,CAACW,WAAD,CAAaP,OAAO,CAACkB,UAArB,CAA/B,CACP,MAAO,IAAMC,CAAAA,kBAAkB,CAAGvB,YAAY,CAACY,oBAAD,CAAsBR,OAAO,CAACmB,kBAA9B,CAAvC,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAGxB,YAAY,CAACc,WAAD,CAAaV,OAAO,CAACoB,UAArB,CAA/B,CACP,MAAO,IAAMC,CAAAA,aAAa,CAAGzB,YAAY,CAACe,cAAD,CAAgBX,OAAO,CAACqB,aAAxB,CAAlC,CAEP,MAAO,IAAMC,CAAAA,MAAM,CAAG1B,YAAY,CAACa,MAAD,CAAST,OAAO,CAACsB,MAAjB,CAA3B,CAEP,MAAO,IAAMC,CAAAA,WAAW,CAAG3B,YAAY,CAACgB,YAAD,CAAhC,CAA+C;AACtD,MAAO,IAAMY,CAAAA,cAAc,CAAG5B,YAAY,CAACiB,eAAD,CAAnC,CAAsD;AAC7D,MAAO,IAAMY,CAAAA,QAAQ,CAAG7B,YAAY,CAACQ,SAAD,CAA7B,CACP,MAAO,IAAMsB,CAAAA,UAAU,CAAG9B,YAAY,CAACS,YAAD,CAA/B,CAEP,GAAMsB,CAAAA,YAAY,CAAG7B,GAAG,CAAC,CACrB8B,QAAQ,CAAE9B,GAAG,CAAC,CACV+B,IAAI,CAAE/B,GAAG,CAAC,CACNgC,EAAE,CAAG,EADC,CAENC,QAAQ,CAAE,EAFJ,CAGNC,eAAe,CAAG,EAHZ,CAINC,KAAK,CAAE,EAJD,CAKNC,KAAK,CAAE,EALD,CAMNC,OAAO,CAAE,EANH,CAONC,QAAQ,CAAG,EAPL,CAQNC,IAAI,CAAG,EARD,CASNC,MAAM,CAAG,EATH,CAUNC,OAAO,CAAG,EAVJ,CAAD,CADC,CAaVC,KAAK,CAAE,IAbG,CAcVC,OAAO,CAAG,EAdA,CAAD,CADQ,CAiBrBC,aAAa,CAAE5C,GAAG,CAAC,CACf+B,IAAI,CAAG/B,GAAG,CAAC,CACP6C,KAAK,CAAG,IADD,CAAD,CADK,CAAD,CAjBG,CAsBrBC,KAAK,CAAE9C,GAAG,CAAC,CACP+B,IAAI,CAAE/B,GAAG,CAAC,CACNgC,EAAE,CAAE,EADE,CAENC,QAAQ,CAAE,EAFJ,CAAD,CADF,CAKPS,KAAK,CAAE,IALA,CAAD,CAtBW,CA6BrBK,MAAM,CAAE/C,GAAG,CAAC,EAAD,CA7BU,CAAD,CAAxB,CAiCA,cAAeD,CAAAA,aAAa,iEACvBe,YADuB,CACT,SAACkC,KAAD,CAAQC,MAAR,CAAmB,qBACNA,MAAM,CAACC,OADD,CACvBnB,IADuB,iBACvBA,IADuB,CAClBQ,IADkB,iBAClBA,IADkB,CACbY,KADa,iBACbA,KADa,CAE9B,MAAOH,CAAAA,KAAK,CAACI,KAAN,CAAY,CAACrB,IAAD,CAAM,MAAN,CAAaQ,IAAb,CAAZ,CAAgCY,KAAhC,CAAP,CACH,CAJuB,iCAKvBpC,eALuB,CAKL,SAACiC,KAAD,CAAQC,MAAR,CAAmB,CAClC,GAAMI,CAAAA,WAAW,CAAGxB,YAAY,CAACyB,GAAb,CAAiBL,MAAM,CAACC,OAAxB,CAApB,CACA,MAAOF,CAAAA,KAAK,CAACO,GAAN,CAAUN,MAAM,CAACC,OAAjB,CAA0BG,WAA1B,CAAP,CACH,CARuB,iCASvB/C,SATuB,CASX,SAAC0C,KAAD,CAAQC,MAAR,CAAkB,sBACHA,MAAM,CAACC,OADJ,CACpBnB,IADoB,kBACpBA,IADoB,CACdyB,OADc,kBACdA,OADc,CAE3B,MAAOR,CAAAA,KAAK,CAACI,KAAN,CAAY,CAACrB,IAAD,CAAO,OAAP,CAAZ,CAA4ByB,OAA5B,CAAP,CACH,CAZuB,iCAavBjD,YAbuB,CAaP,SAACyC,KAAD,CAAOC,MAAP,CAAkB,sBACZA,MAAM,CAACC,OADK,CACxBnB,IADwB,kBACxBA,IADwB,CAClBC,EADkB,kBAClBA,EADkB,CAE/B,MAAOgB,CAAAA,KAAK,CAACI,KAAN,CAAY,CAACrB,IAAD,CAAO,SAAP,CAAZ,CAA8BC,EAA9B,CAAP,CACH,CAhBuB,kBAiBrB/B,MAAM,CAAC,CACNwD,IAAI,CAAEtD,kBADA,CAENuD,SAAS,CAAE,mBAACV,KAAD,CAAOC,MAAP,QAAkBD,CAAAA,KAAK,CAACO,GAAN,CAAU,QAAV,CAAoBvD,GAAG,CAACiD,MAAM,CAACC,OAAP,CAAeS,IAAhB,CAAvB,CAAlB,EAFL,CAAD,CAjBe,IAqBrB1D,MAAM,CAAC,CACNwD,IAAI,CAAEpD,kBADA,CAENqD,SAAS,CAAE,mBAACV,KAAD,CAAOC,MAAP,QAAkBD,CAAAA,KAAK,CAACO,GAAN,CAAU,QAAV,CAAoBvD,GAAG,CAACiD,MAAM,CAACC,OAAP,CAAeS,IAAhB,CAAvB,CAAlB,EAFL,CAAD,CArBe,IAyBrB1D,MAAM,CAAC,CACNwD,IAAI,CAAErD,eADA,CAENsD,SAAS,CAAE,mBAACV,KAAD,CAAOC,MAAP,QAAkBD,CAAAA,KAAK,CAACO,GAAN,CAAU,QAAV,CAAoBvD,GAAG,CAACiD,MAAM,CAACC,OAAP,CAAeS,IAAhB,CAAvB,CAAlB,EAFL,CAAD,CAzBe,IA6BrB1D,MAAM,CAAC,CACNwD,IAAI,CAAE/C,oBADA,CAENgD,SAAS,CAAE,mBAACV,KAAD,CAAQC,MAAR,QAAmBD,CAAAA,KAAK,CAACO,GAAN,CAAU,QAAV,CAAmBvD,GAAG,CAACiD,MAAM,CAACC,OAAP,CAAeS,IAAhB,CAAtB,CAAnB,EAFL,CAAD,CA7Be,IAiCrB1D,MAAM,CAAC,CACNwD,IAAI,CAAEhD,WADA,CAENiD,SAAS,CAAE,mBAACV,KAAD,CAAQC,MAAR,QAAmBD,CAAAA,KAAK,CAACO,GAAN,CAAU,QAAV,CAAmBvD,GAAG,CAACiD,MAAM,CAACC,OAAP,CAAeS,IAAhB,CAAtB,CAAnB,EAFL,CAAD,CAjCe,IAqCrB1D,MAAM,CAAC,CACNwD,IAAI,CAAEjD,cADA,CAENkD,SAAS,CAAE,mBAACV,KAAD,CAAOC,MAAP,QAAkBD,CAAAA,KAAK,CAACO,GAAN,CAAU,QAAV,CAAmBvD,GAAG,CAACiD,MAAM,CAACC,OAAP,CAAeS,IAAhB,CAAtB,CAAlB,EAFL,CAAD,CArCe,IAyCrB1D,MAAM,CAAC,CACNwD,IAAI,CAAE7C,WADA,CAEN8C,SAAS,CAAG,mBAACV,KAAD,CAAOC,MAAP,QAAkBD,CAAAA,KAAK,CAACO,GAAN,CAAU,QAAV,CAAmBvD,GAAG,CAACiD,MAAM,CAACC,OAAP,CAAeS,IAAhB,CAAtB,CAAlB,EAFN,CAAD,CAzCe,IA6CrB1D,MAAM,CAAC,CACNwD,IAAI,CAAE5C,cADA,CAEN6C,SAAS,CAAE,mBAACV,KAAD,CAAOC,MAAP,QAAkBD,CAAAA,KAAK,CAACO,GAAN,CAAU,QAAV,CAAmBvD,GAAG,CAACiD,MAAM,CAACC,OAAP,CAAeS,IAAhB,CAAtB,CAAlB,EAFL,CAAD,CA7Ce,EAiDzB9B,YAjDyB,CAA5B","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\r\nimport {Map} from 'immutable';\r\nimport {pender} from 'redux-pender';\r\nimport * as AuthAPI from '../../lib/api/auth';\r\n\r\nconst CHECK_EMAIL_EXISTS = 'auth/CHECK_EMAIL_EXISTS';\r\nconst CHECK_ID_EXISTS = 'auth/CHECK_ID_EXISTS';\r\nconst CHECK_PHONE_EXISTS = 'auth/CHECK_PHONE_EXISTS';\r\n\r\nconst SET_ERROR = 'auth/SET_ERROR';\r\nconst SET_ERROR_ID = 'auth/SET_ERROR_ID';\r\n\r\nconst LOCAL_REGISTER = 'auth/LOCAL_REGISTER';\r\nconst LOCAL_LOGIN = 'auth/LOCAL_LOGIN';\r\nconst LOCAL_REGISTER_IMAGE = 'auth/LOCAL_REGISTER_IMAGE';\r\nconst LOGOUT = 'auth/LOGOUT';\r\n\r\nconst KAKAO_LOGIN = 'auth/KAKAO_LOGIN';\r\nconst KAKAO_REGISTER = 'auth/KAKAO_REGISTER';\r\n\r\nconst CHANGE_INPUT = 'auth/CHANGE_INPUT';// input 값 변경\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM'; // form 초기화\r\n\r\nexport const checkEmailExists = createAction(CHECK_EMAIL_EXISTS, AuthAPI.checkEmailExists);\r\nexport const checkIdExists = createAction(CHECK_ID_EXISTS,AuthAPI.checkIdExists);\r\nexport const checkPhoneExists = createAction(CHECK_PHONE_EXISTS, AuthAPI.checkPhoneExists);\r\n\r\nexport const localRegister = createAction(LOCAL_REGISTER, AuthAPI.localRegister);\r\nexport const localLogin = createAction(LOCAL_LOGIN,AuthAPI.localLogin);\r\nexport const localRegisterImage = createAction(LOCAL_REGISTER_IMAGE,AuthAPI.localRegisterImage);\r\nexport const kakaoLogin = createAction(KAKAO_LOGIN,AuthAPI.kakaoLogin);\r\nexport const kakaoRegister = createAction(KAKAO_REGISTER,AuthAPI.kakaoRegister);\r\n\r\nexport const logout = createAction(LOGOUT, AuthAPI.logout);\r\n\r\nexport const changeInput = createAction(CHANGE_INPUT);// {form, name, value}\r\nexport const initializeForm = createAction(INITIALIZE_FORM); //form\r\nexport const setError = createAction(SET_ERROR);\r\nexport const setErrorId = createAction(SET_ERROR_ID);\r\n\r\nconst initialState = Map({\r\n    register: Map({\r\n        form: Map({\r\n            id : '',\r\n            password: '',\r\n            passwordConfirm : '',\r\n            email: '',\r\n            phone: '',\r\n            comment: '',\r\n            birthday : '',\r\n            name : '',\r\n            gender : '',\r\n            address : ''\r\n            }),\r\n        error: null,\r\n        errorId : ''\r\n    }),\r\n    registerImage: Map({\r\n        form : Map({\r\n            image : null\r\n        })\r\n    }),\r\n    login: Map({\r\n        form: Map({\r\n            id: '',\r\n            password: ''\r\n        }),\r\n        error: null\r\n    }),\r\n    result: Map({})\r\n});\r\n\r\n\r\nexport default handleActions({\r\n    [CHANGE_INPUT]:(state, action) => {\r\n        const {form,name,value}=action.payload;\r\n        return state.setIn([form,'form',name], value);\r\n    },\r\n    [INITIALIZE_FORM]: (state, action) => {\r\n        const initialForm = initialState.get(action.payload);\r\n        return state.set(action.payload, initialForm);\r\n    },\r\n    [SET_ERROR]: (state, action)=> {\r\n        const {form, message} = action.payload;\r\n        return state.setIn([form, 'error'],message);\r\n    },\r\n    [SET_ERROR_ID] : (state,action) => {\r\n        const {form, id} = action.payload;\r\n        return state.setIn([form, 'errorId'],id);\r\n    },\r\n    ...pender({\r\n        type: CHECK_EMAIL_EXISTS,\r\n        onSuccess: (state,action) => state.set('result', Map(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: CHECK_PHONE_EXISTS,\r\n        onSuccess: (state,action) => state.set('result', Map(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: CHECK_ID_EXISTS,\r\n        onSuccess: (state,action) => state.set('result', Map(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: LOCAL_REGISTER_IMAGE,\r\n        onSuccess: (state, action) => state.set('result',Map(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: LOCAL_LOGIN,\r\n        onSuccess: (state, action) => state.set('result',Map(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: LOCAL_REGISTER,\r\n        onSuccess: (state,action) => state.set('result',Map(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: KAKAO_LOGIN,\r\n        onSuccess : (state,action) => state.set('result',Map(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: KAKAO_REGISTER,\r\n        onSuccess: (state,action) => state.set('result',Map(action.payload.data))\r\n    })\r\n}, initialState);"]},"metadata":{},"sourceType":"module"}