{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Timeline\\\\TimelineContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PageWrapper from '../../components/PageWrapper';\nimport { FeedList } from '../../components/Timeline';\nimport { PostPopup, Popup } from '../../components/Popup';\nimport * as friendActions from '../../redux/modules/friend';\nimport * as timelineActions from '../../redux/modules/timeline';\nimport * as likeActions from '../../redux/modules/like';\nimport * as baseActions from '../../redux/modules/base';\nimport * as postActions from '../../redux/modules/post';\nimport storage from '../../lib/storage';\nimport * as commentActions from '../../redux/modules/comment';\nimport * as userPageActions from '../../redux/modules/userPage';\n\nclass TimelineContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleScroll = async e => {\n      const scrollTop = e.srcElement.scrollingElement.scrollTop;\n      const _window = window,\n            innerHeight = _window.innerHeight;\n      const scrollHeight = document.body.scrollHeight;\n\n      if (scrollTop + innerHeight > scrollHeight && this.props.isTruePost) {\n        this.getFeedList();\n        await this.props.TimelineActions.addPage();\n      }\n    };\n\n    this.getFeedList = async () => {\n      const _this$props = this.props,\n            TimelineActions = _this$props.TimelineActions,\n            page = _this$props.page,\n            isTruePost = _this$props.isTruePost,\n            userid = _this$props.userid;\n      var username = userid.substr(1);\n\n      if (isTruePost) {\n        try {\n          await TimelineActions.getTimelineInformation(username, page);\n        } catch (e) {\n          await TimelineActions.setFalsePost();\n        }\n      }\n    };\n\n    this.overHashTag = e => {\n      const TimelineActions = this.props.TimelineActions;\n      TimelineActions.setHashDisplay('block');\n      TimelineActions.setKey(e.target.id);\n    };\n\n    this.outHashTag = () => {\n      const TimelineActions = this.props.TimelineActions;\n      TimelineActions.setHashDisplay('none');\n    };\n\n    this.handleTimeline = async () => {\n      const _this$props2 = this.props,\n            TimelineActions = _this$props2.TimelineActions,\n            FriendActions = _this$props2.FriendActions,\n            userid = _this$props2.userid;\n      var id = userid.substr(1);\n\n      const _storage$get = storage.get('loggedInfo'),\n            username = _storage$get.username;\n\n      if (username === id) TimelineActions.setFollowDisplay('none');else TimelineActions.setFollowDisplay('block');\n\n      try {\n        await FriendActions.getOtherInfoNum(id);\n        await TimelineActions.getTimelinePostNum(id);\n        await FriendActions.notifyIsFollowUser(id);\n      } catch (e) {\n        console.log(e);\n      }\n\n      const result = this.props.result;\n      TimelineActions.setComment(result.comment);\n      TimelineActions.setThumbnail(result.thumbnail);\n      TimelineActions.setUsername(result.username);\n      TimelineActions.setNickname(result.nickname);\n    };\n\n    this.setTime = async () => {\n      const _this$props3 = this.props,\n            data = _this$props3.data,\n            TimelineActions = _this$props3.TimelineActions;\n      await Promise.all(data.map(async (feed, index) => {\n        let time = feed.get('timestamp');\n        let timestring = this.dateTimeToFormatted(time);\n        await TimelineActions.setTimelineTime({\n          timestring: timestring,\n          index: index\n        });\n      }));\n    };\n\n    this.setCommentTime = async id => {\n      const _this$props4 = this.props,\n            data = _this$props4.data,\n            TimelineActions = _this$props4.TimelineActions;\n      let index = data.findIndex(item => item.get('postId') === parseInt(id));\n      const comments = data.getIn([index, 'commentList']);\n      await Promise.all(comments.map(async (comment, commentIndex) => {\n        let time = comment.timestamp;\n        let timestring = this.dateTimeToFormatted(time);\n        await TimelineActions.setTimelineCommentTime({\n          timestring: timestring,\n          index: index,\n          commentIndex: commentIndex\n        });\n      }));\n    };\n\n    this.dateTimeToFormatted = dt => {\n      const min = 60 * 1000;\n      const c = new Date();\n      var d = new Date(dt);\n      var minsAgo = Math.floor((c - d) / min);\n      var result = {\n        'raw': d.getFullYear() + '-' + (d.getMonth() + 1 > 9 ? '' : '0') + (d.getMonth() + 1) + '-' + (d.getDate() > 9 ? '' : '0') + d.getDate() + ' ' + (d.getHours() > 9 ? '' : '0') + d.getHours() + ':' + (d.getMinutes() > 9 ? '' : '0') + d.getMinutes() + ':' + (d.getSeconds() > 9 ? '' : '0') + d.getSeconds(),\n        'month': d.getFullYear() + '-' + (d.getMonth() + 1 > 9 ? '' : '0') + (d.getMonth() + 1) + '-' + (d.getDate() > 9 ? '' : '0') + d.getDate(),\n        'formatted': ''\n      };\n\n      if (minsAgo < 60) {\n        // 1시간 내\n        result.formatted = minsAgo + '분 전';\n      } else if (minsAgo < 60 * 24) {\n        // 하루 내\n        result.formatted = Math.floor(minsAgo / 60) + '시간 전';\n      } else if (minsAgo < 60 * 24 * 30) {\n        // 하루 이상\n        result.formatted = Math.floor(minsAgo / 60 / 24) + '일 전';\n      } else {\n        result.formatted = result.month;\n      }\n\n      return result.formatted;\n    };\n\n    this.componentDidMount = async () => {\n      const handleTimeline = this.handleTimeline;\n      window.addEventListener(\"scroll\", this.handleScroll);\n      await this.getFeedList();\n      await this.props.TimelineActions.addPage();\n      await handleTimeline();\n    };\n\n    this.handleFollowClick = async () => {\n      const _this$props5 = this.props,\n            FriendActions = _this$props5.FriendActions,\n            isfollow = _this$props5.isfollow,\n            userid = _this$props5.userid;\n      const id = userid.substr(1);\n      if (isfollow === '팔로우') await FriendActions.follow(id);else await FriendActions.unfollow({\n        'friendId': id\n      });\n      await FriendActions.getOtherInfoNum(id);\n    };\n\n    this.handleLikeClick = async e => {\n      const _this$props6 = this.props,\n            LikeActions = _this$props6.LikeActions,\n            TimelineActions = _this$props6.TimelineActions;\n      const id = e.target.id;\n      await TimelineActions.setLikeKey(id);\n      await LikeActions.clickLike(id);\n      await TimelineActions.setTimelineLike('none');\n\n      try {\n        await LikeActions.getLikeAndUserList(id, 1);\n      } catch (e) {}\n\n      const totalNum = this.props.totalNum;\n      await TimelineActions.setTimelineLikeNum(totalNum);\n    };\n\n    this.handleCancelClick = async e => {\n      const _this$props7 = this.props,\n            LikeActions = _this$props7.LikeActions,\n            TimelineActions = _this$props7.TimelineActions;\n      const id = e.target.id;\n      await TimelineActions.setLikeKey(id);\n      await LikeActions.cancelLike(id);\n      await TimelineActions.setTimelineLike('block');\n\n      try {\n        await LikeActions.getLikeAndUserList(id, 1);\n      } catch (e) {}\n\n      const totalNum = this.props.totalNum;\n      await TimelineActions.setTimelineLikeNum(totalNum);\n    };\n\n    this.handleComment = async e => {\n      const _this$props8 = this.props,\n            CommentActions = _this$props8.CommentActions,\n            TimelineActions = _this$props8.TimelineActions,\n            data = _this$props8.data;\n      const id = e.target.id;\n      const category = e.target.dataset.category;\n      await TimelineActions.setCommentCategory(category);\n      await TimelineActions.setTimelineCommentDisplay(id);\n      const commentdisplay = this.props.commentdisplay;\n\n      if (commentdisplay === 'block') {\n        let index = data.findIndex(item => item.get('postId') === parseInt(id));\n        let page = data.getIn([index, 'commentPage']);\n        await CommentActions.showPostCommentList(id, page);\n        await TimelineActions.setTimelineCommentPage(id);\n        const _this$props9 = this.props,\n              commentList = _this$props9.commentList,\n              lastComment = _this$props9.lastComment;\n        if (lastComment) await TimelineActions.setTimelineCommentList({\n          'commentId': id,\n          'commentList': commentList,\n          'trueComment': false\n        });else await TimelineActions.setTimelineCommentList({\n          'commentId': id,\n          'commentList': commentList,\n          'trueComment': true\n        });\n        await this.setCommentTime(id);\n      }\n    };\n\n    this.handleCommentAdd = async e => {\n      const id = e.target.id;\n      const _this$props10 = this.props,\n            TimelineActions = _this$props10.TimelineActions,\n            CommentActions = _this$props10.CommentActions,\n            data = _this$props10.data;\n      const index = data.findIndex(item => item.get('postId') === parseInt(id));\n\n      if (data.getIn([index, 'trueComment'])) {\n        const page = data.getIn([index, 'commentPage']);\n\n        try {\n          await CommentActions.showPostCommentList(id, page);\n          await TimelineActions.setTimelineCommentPage(id);\n          const _this$props11 = this.props,\n                commentList = _this$props11.commentList,\n                lastComment = _this$props11.lastComment;\n          if (lastComment) await TimelineActions.setTimelineCommentList({\n            'commentId': id,\n            'commentList': commentList,\n            'trueComment': false\n          });else await TimelineActions.setTimelineCommentList({\n            'commentId': id,\n            'commentList': commentList,\n            'trueComment': true\n          });\n          await this.setCommentTime(id);\n        } catch (e) {\n          TimelineActions.setTimelineCommentFalse(id);\n        }\n      }\n    };\n\n    this.enterComment = async e => {\n      if (window.event.keyCode === 13) {\n        const _this$props12 = this.props,\n              CommentActions = _this$props12.CommentActions,\n              TimelineActions = _this$props12.TimelineActions;\n        const _e$target = e.target,\n              innerText = _e$target.innerText,\n              id = _e$target.id;\n        console.log(id);\n        var content = innerText;\n        content = content.replace(/\\r/g, \"\");\n        content = content.replace(/\\n/g, \"\");\n        await CommentActions.writeComment({\n          id,\n          content\n        });\n        await CommentActions.showPostCommentList(id, 1);\n        this.renewComment(id);\n\n        for (var i = 0; i < document.getElementsByName('^^comment').length; i++) {\n          if (parseInt(document.getElementsByName('^^comment')[i].id) === parseInt(id)) {\n            document.getElementsByName('^^comment')[i].textContent = '';\n            document.getElementsByName('^^comment')[i].blur();\n          }\n        }\n\n        await CommentActions.getCommentNum(id);\n        var commentNum = this.props.commentNum;\n        await TimelineActions.setTimelineCommentNum({\n          'commentNum': commentNum,\n          'commentId': id\n        });\n        await this.setCommentTime(id);\n      }\n    };\n\n    this.renewComment = id => setTimeout(async () => {\n      const _this$props13 = this.props,\n            presentComment = _this$props13.presentComment,\n            TimelineActions = _this$props13.TimelineActions;\n      await TimelineActions.renewTimelineComment({\n        'commentId': id,\n        'presentComment': presentComment\n      });\n      await this.setCommentTime(id);\n    }, 2000);\n\n    this.handleMenu = e => {\n      const _this$props14 = this.props,\n            data = _this$props14.data,\n            TimelineActions = _this$props14.TimelineActions,\n            BaseActions = _this$props14.BaseActions;\n      const id = e.target.id;\n      const index = data.findIndex(item => item.get('postId') === parseInt(id));\n      if (data.getIn([index, 'modifyVisible']) === 'block') return;\n\n      if (data.getIn([index, 'menuVisible']) === 'none') {\n        TimelineActions.setShowMenuVisible({\n          'index': index,\n          'visible': 'none'\n        });\n        BaseActions.setFollowMenuVisible('none');\n        BaseActions.setAlarmMenuVisible('none');\n        BaseActions.setUserMenuVisibility(false);\n        TimelineActions.setMenuVisible({\n          'index': index,\n          'visible': 'block'\n        });\n      } else {\n        TimelineActions.setMenuVisible({\n          'index': index,\n          'visible': 'none'\n        });\n      }\n    };\n\n    this.modifyClick = async e => {\n      const id = e.target.id;\n      const _this$props15 = this.props,\n            data = _this$props15.data,\n            TimelineActions = _this$props15.TimelineActions,\n            PostActions = _this$props15.PostActions;\n      const index = data.findIndex(item => item.get('postId') === parseInt(id));\n      await TimelineActions.setMenuVisible({\n        'index': index,\n        'visible': 'none'\n      });\n      await TimelineActions.setModifyVisible({\n        'index': index,\n        'visible': 'inline-block'\n      });\n    };\n\n    this.get = type => {\n      return {\n        'modify': '수정하시겠습니까?',\n        'delete': '삭제하시겠습니까?'\n      }[type];\n    };\n\n    this.buttonClick = e => {\n      const _this$props16 = this.props,\n            PostActions = _this$props16.PostActions,\n            TimelineActions = _this$props16.TimelineActions,\n            data = _this$props16.data;\n      const id = e.target.id;\n      const category = e.target.dataset.category;\n      const index = data.findIndex(item => item.get('postId') === parseInt(id));\n      TimelineActions.setMenuVisible({\n        'index': index,\n        'visible': 'none'\n      });\n      PostActions.setPopupId(id);\n      PostActions.setPostPopupDisplay('block');\n      PostActions.setPopupCategory(category);\n      PostActions.setPopupText(this.get(category));\n    };\n\n    this.deleteClick = async () => {\n      const _this$props17 = this.props,\n            PostActions = _this$props17.PostActions,\n            TimelineActions = _this$props17.TimelineActions,\n            data = _this$props17.data,\n            userid = _this$props17.userid,\n            popupId = _this$props17.popupId;\n      const index = data.findIndex(item => item.get('postId') === parseInt(popupId));\n      const userId = userid.substr(1);\n\n      try {\n        await PostActions.deleteFeed(popupId);\n        await TimelineActions.deleteFeed(index);\n        await TimelineActions.getTimelinePostNum(userId);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handleImageChange = async e => {\n      e.preventDefault();\n      const UserPageActions = this.props.UserPageActions;\n      let file = e.target.files[0];\n      var formdata = new FormData();\n      formdata.set('file', file);\n      await UserPageActions.modifyUserImage(formdata);\n      const userResult = this.props.userResult;\n      console.log(userResult.toJS());\n      storage.remove('loggedInfo');\n      storage.set('loggedInfo', userResult.toJS());\n      window.location.reload();\n    };\n\n    this.handleImage = e => {\n      const id = e.target.id;\n      const imageid = e.target.dataset.imageid;\n      this.props.history.push(`/feed/@:${id}/image/:${imageid}`);\n    };\n\n    this.unavailableModify = (index, id) => {\n      const _this$props18 = this.props,\n            TimelineActions = _this$props18.TimelineActions,\n            data = _this$props18.data;\n\n      for (var i = 0; i < document.getElementsByName('^^content').length; i++) {\n        if (parseInt(document.getElementsByName('^^content')[i].id) === parseInt(id)) {\n          document.getElementsByName('^^content')[i].textContent = data.getIn([index, 'content']);\n          document.getElementsByName('^^content')[i].blur();\n        }\n      }\n\n      TimelineActions.setModifyVisible({\n        'index': index,\n        'visible': 'none'\n      });\n    };\n\n    this.handleCancel = e => {\n      const id = e.target.id;\n      const _this$props19 = this.props,\n            TimelineActions = _this$props19.TimelineActions,\n            data = _this$props19.data,\n            PostActions = _this$props19.PostActions;\n      const index = data.findIndex(item => item.get('postId') === parseInt(id));\n      this.unavailableModify(index, id);\n    };\n\n    this.handleWrite = async () => {\n      const _this$props20 = this.props,\n            TimelineActions = _this$props20.TimelineActions,\n            data = _this$props20.data,\n            PostActions = _this$props20.PostActions,\n            popupId = _this$props20.popupId;\n      const index = data.findIndex(item => item.get('postId') === parseInt(popupId));\n      let showLevel = data.getIn([index, 'showLevel']);\n\n      try {\n        await PostActions.modifyFeedInformation({\n          'showLevel': showLevel,\n          'postId': popupId,\n          'content': data.getIn([index, 'modifyText'])\n        });\n      } catch (e) {\n        if (e.response.status === 409) {\n          PostActions.setPopupText('글은 1000자 이하여야 합니다. 다시 입력해주세요.');\n          PostActions.setPopupDisplay('block');\n          return;\n        }\n      }\n\n      this.unavailableModify(index, popupId);\n      TimelineActions.setFeedContext({\n        'index': index,\n        'text': data.getIn([index, 'modifyText'])\n      });\n    };\n\n    this.handleWriteInput = e => {\n      const _e$target2 = e.target,\n            id = _e$target2.id,\n            innerText = _e$target2.innerText;\n      const _this$props21 = this.props,\n            TimelineActions = _this$props21.TimelineActions,\n            data = _this$props21.data,\n            PostActions = _this$props21.PostActions;\n      const index = data.findIndex(item => item.get('postId') === parseInt(id));\n      TimelineActions.setModifyText({\n        'index': index,\n        'modifyText': innerText\n      });\n    };\n\n    this.handleViewChange = e => {\n      const id = e.target.id;\n      const _this$props22 = this.props,\n            TimelineActions = _this$props22.TimelineActions,\n            data = _this$props22.data,\n            BaseActions = _this$props22.BaseActions;\n      const index = data.findIndex(item => item.get('postId') === parseInt(id));\n\n      if (data.getIn([index, 'showMenuVisible']) === 'none') {\n        TimelineActions.setShowMenuVisible({\n          'index': index,\n          'visible': 'block'\n        });\n        BaseActions.setFollowMenuVisible('none');\n        BaseActions.setAlarmMenuVisible('none');\n        BaseActions.setUserMenuVisibility('none');\n        TimelineActions.setMenuVisible({\n          'index': index,\n          'visible': 'none'\n        });\n      } else {\n        TimelineActions.setShowMenuVisible({\n          'index': index,\n          'visible': 'none'\n        });\n      }\n    };\n\n    this.handleShowLevel = async e => {\n      const id = e.target.id;\n      const postid = e.target.dataset.postid;\n      console.log(postid);\n      const _this$props23 = this.props,\n            data = _this$props23.data,\n            PostActions = _this$props23.PostActions,\n            TimelineActions = _this$props23.TimelineActions;\n      const index = data.findIndex(item => item.get('postId') === parseInt(postid));\n\n      try {\n        await PostActions.modifyFeedInformation({\n          'showLevel': id,\n          'postId': postid,\n          'content': data.getIn([index, 'content'])\n        });\n      } catch (e) {}\n\n      TimelineActions.setFeedShowlevel({\n        'index': index,\n        'showLevel': id\n      });\n      TimelineActions.setShowMenuVisible({\n        'index': index,\n        'visible': 'none'\n      });\n    };\n\n    this.handleOk = () => {\n      const _this$props24 = this.props,\n            popupCategory = _this$props24.popupCategory,\n            PostActions = _this$props24.PostActions;\n      PostActions.setPostPopupDisplay('none');\n      if (popupCategory === 'modify') this.handleWrite();\n      if (popupCategory === 'delete') this.deleteClick();\n    };\n\n    this.handlePopupCancel = () => {\n      const PostActions = this.props.PostActions;\n      PostActions.setPostPopupDisplay('none');\n    };\n\n    this.handlePopupOk = () => {\n      const PostActions = this.props.PostActions;\n      PostActions.setPopupDisplay('none');\n    };\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    return prevProps.userid !== this.props.userid || prevProps.data !== this.props.data;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (snapshot && prevProps.userid !== this.props.userid) {\n      const handleTimeline = this.handleTimeline;\n      handleTimeline();\n    } else if (snapshot && prevProps.data !== this.props.data) {\n      this.setTime();\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.props.data !== nextProps.data || this.props.result !== nextProps.result || this.props.followDisplay !== nextProps.followDisplay || this.props.comment !== nextProps.comment || this.props.username !== nextProps.username || this.props.nickname !== nextProps.nickname || this.props.thumbnail !== nextProps.thumbnail || this.props.hashdisplay !== nextProps.hashdisplay || this.props.postNum !== nextProps.postNum || this.props.popupDisplay !== nextProps.popupDisplay || this.props.postPopupDisplay !== nextProps.postPopupDisplay;\n  }\n\n  render() {\n    const data = this.props.data;\n\n    if (!storage.get('loggedInfo')) {\n      return null;\n    }\n\n    const commentThumbnail = storage.get('loggedInfo').thumbnail;\n    const hostUser = storage.get('loggedInfo').username;\n    const _this$props25 = this.props,\n          hashdisplay = _this$props25.hashdisplay,\n          keyid = _this$props25.keyid,\n          totalNum = _this$props25.totalNum,\n          postPopupDisplay = _this$props25.postPopupDisplay,\n          popupText = _this$props25.popupText,\n          popupDisplay = _this$props25.popupDisplay;\n    const _this$props26 = this.props,\n          followNum = _this$props26.followNum,\n          followerNum = _this$props26.followerNum,\n          thumbnail = _this$props26.thumbnail,\n          comment = _this$props26.comment,\n          username = _this$props26.username,\n          nickname = _this$props26.nickname,\n          postNum = _this$props26.postNum,\n          followDisplay = _this$props26.followDisplay,\n          isfollow = _this$props26.isfollow,\n          commentCategory = _this$props26.commentCategory;\n    const handleFollowClick = this.handleFollowClick,\n          overHashTag = this.overHashTag,\n          outHashTag = this.outHashTag,\n          handleLikeClick = this.handleLikeClick,\n          handleCancelClick = this.handleCancelClick,\n          enterComment = this.enterComment,\n          handleCommentAdd = this.handleCommentAdd,\n          handleComment = this.handleComment,\n          handleMenu = this.handleMenu,\n          handleImageChange = this.handleImageChange,\n          handleImage = this.handleImage,\n          handleCancel = this.handleCancel,\n          modifyClick = this.modifyClick,\n          handlePopupOk = this.handlePopupOk,\n          handleWrite = this.handleWrite,\n          handleWriteInput = this.handleWriteInput,\n          handleViewChange = this.handleViewChange,\n          handleShowLevel = this.handleShowLevel,\n          handleOk = this.handleOk,\n          handlePopupCancel = this.handlePopupCancel,\n          buttonClick = this.buttonClick;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(PageWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(FeedList, {\n      hostUser: hostUser,\n      commentThumbnail: commentThumbnail,\n      change: handleImageChange,\n      thumbnail: thumbnail,\n      comment: comment,\n      username: username,\n      nickname: nickname,\n      followNum: followNum,\n      followerNum: followerNum,\n      followclick: handleFollowClick,\n      followdisplay: followDisplay,\n      postNum: postNum,\n      isfollow: isfollow,\n      like: handleLikeClick,\n      mainfeed: data,\n      hashdisplay: hashdisplay,\n      hover: overHashTag,\n      handleComment: handleComment,\n      nothover: outHashTag,\n      keyid: keyid,\n      cancel: handleCancelClick,\n      totalNum: totalNum,\n      enterComment: enterComment,\n      handleCommentAdd: handleCommentAdd,\n      commentCategory: commentCategory,\n      handleMenu: handleMenu,\n      modifyClick: modifyClick,\n      deleteClick: buttonClick,\n      handleImage: handleImage,\n      handleCancel: handleCancel,\n      handleWrite: buttonClick,\n      handleWriteInput: handleWriteInput,\n      handleViewChange: handleViewChange,\n      handleShowLevel: handleShowLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    })), React.createElement(PostPopup, {\n      handleOk: handleOk,\n      right: '40%',\n      handleCancel: handlePopupCancel,\n      text: popupText,\n      display: postPopupDisplay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }), React.createElement(Popup, {\n      handlePopupOk: handlePopupOk,\n      display: popupDisplay,\n      text: popupText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user.getIn(['loggedInfo', 'username']),\n  followNum: state.friend.get('followNum'),\n  result: state.friend.get('result'),\n  followerNum: state.friend.get('followerNum'),\n  thumbnail: state.timeline.get('thumbnail'),\n  comment: state.timeline.get('comment'),\n  username: state.timeline.get('username'),\n  nickname: state.timeline.get('nickname'),\n  postNum: state.timeline.get('postNum'),\n  followDisplay: state.timeline.get('followdisplay'),\n  isfollow: state.friend.get('isFollow'),\n  data: state.timeline.get('mainfeed'),\n  page: state.timeline.get('page'),\n  isTruePost: state.timeline.get('isTruePost'),\n  hashdisplay: state.timeline.get('hashdisplay'),\n  keyid: state.timeline.get('keyid'),\n  totalNum: state.like.get('totalNum'),\n  commentList: state.comment.get('commentList'),\n  commentNum: state.comment.get('commentNum'),\n  commentCategory: state.timeline.get('commentCategory'),\n  commentdisplay: state.timeline.get('commentdisplay'),\n  postId: state.post.get('postId'),\n  presentComment: state.comment.get('presentComment'),\n  lastComment: state.comment.get('lastComment'),\n  userResult: state.userPage.get('result'),\n  postPopupDisplay: state.post.get('postPopupDisplay'),\n  popupText: state.post.get('popupText'),\n  popupId: state.post.get('popupId'),\n  popupDisplay: state.post.get('popupDisplay'),\n  popupCategory: state.post.get('popupCategory')\n}), dispatch => ({\n  FriendActions: bindActionCreators(friendActions, dispatch),\n  TimelineActions: bindActionCreators(timelineActions, dispatch),\n  LikeActions: bindActionCreators(likeActions, dispatch),\n  CommentActions: bindActionCreators(commentActions, dispatch),\n  BaseActions: bindActionCreators(baseActions, dispatch),\n  PostActions: bindActionCreators(postActions, dispatch),\n  UserPageActions: bindActionCreators(userPageActions, dispatch)\n}))(TimelineContainer);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Timeline/TimelineContainer.js"],"names":["React","Component","connect","bindActionCreators","PageWrapper","FeedList","PostPopup","Popup","friendActions","timelineActions","likeActions","baseActions","postActions","storage","commentActions","userPageActions","TimelineContainer","handleScroll","e","scrollTop","srcElement","scrollingElement","window","innerHeight","scrollHeight","document","body","props","isTruePost","getFeedList","TimelineActions","addPage","page","userid","username","substr","getTimelineInformation","setFalsePost","overHashTag","setHashDisplay","setKey","target","id","outHashTag","handleTimeline","FriendActions","get","setFollowDisplay","getOtherInfoNum","getTimelinePostNum","notifyIsFollowUser","console","log","result","setComment","comment","setThumbnail","thumbnail","setUsername","setNickname","nickname","setTime","data","Promise","all","map","feed","index","time","timestring","dateTimeToFormatted","setTimelineTime","setCommentTime","findIndex","item","parseInt","comments","getIn","commentIndex","timestamp","setTimelineCommentTime","dt","min","c","Date","d","minsAgo","Math","floor","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","formatted","month","componentDidMount","addEventListener","handleFollowClick","isfollow","follow","unfollow","handleLikeClick","LikeActions","setLikeKey","clickLike","setTimelineLike","getLikeAndUserList","totalNum","setTimelineLikeNum","handleCancelClick","cancelLike","handleComment","CommentActions","category","dataset","setCommentCategory","setTimelineCommentDisplay","commentdisplay","showPostCommentList","setTimelineCommentPage","commentList","lastComment","setTimelineCommentList","handleCommentAdd","setTimelineCommentFalse","enterComment","event","keyCode","innerText","content","replace","writeComment","renewComment","i","getElementsByName","length","textContent","blur","getCommentNum","commentNum","setTimelineCommentNum","setTimeout","presentComment","renewTimelineComment","handleMenu","BaseActions","setShowMenuVisible","setFollowMenuVisible","setAlarmMenuVisible","setUserMenuVisibility","setMenuVisible","modifyClick","PostActions","setModifyVisible","type","buttonClick","setPopupId","setPostPopupDisplay","setPopupCategory","setPopupText","deleteClick","popupId","userId","deleteFeed","handleImageChange","preventDefault","UserPageActions","file","files","formdata","FormData","set","modifyUserImage","userResult","toJS","remove","location","reload","handleImage","imageid","history","push","unavailableModify","handleCancel","handleWrite","showLevel","modifyFeedInformation","response","status","setPopupDisplay","setFeedContext","handleWriteInput","setModifyText","handleViewChange","handleShowLevel","postid","setFeedShowlevel","handleOk","popupCategory","handlePopupCancel","handlePopupOk","getSnapshotBeforeUpdate","prevProps","prevState","componentDidUpdate","snapshot","shouldComponentUpdate","nextProps","nextState","followDisplay","hashdisplay","postNum","popupDisplay","postPopupDisplay","render","commentThumbnail","hostUser","keyid","popupText","followNum","followerNum","commentCategory","state","user","friend","timeline","like","postId","post","userPage","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,SAAQC,SAAR,EAAkBC,KAAlB,QAA8B,wBAA9B;AACA,OAAO,KAAKC,aAAZ,MAA+B,4BAA/B;AACA,OAAO,KAAKC,eAAZ,MAAiC,8BAAjC;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,KAAKC,cAAZ,MAAgC,6BAAhC;AACA,OAAO,KAAKC,eAAZ,MAAiC,8BAAjC;;AACA,MAAMC,iBAAN,SAAgCf,SAAhC,CAAyC;AAAA;AAAA;;AAAA,SAErCgB,YAFqC,GAEtB,MAAMC,CAAN,IAAY;AACvB,YAAMC,SAAS,GAAED,CAAC,CAACE,UAAF,CAAaC,gBAAb,CAA8BF,SAA/C;AADuB,sBAECG,MAFD;AAAA,YAEfC,WAFe,WAEfA,WAFe;AAAA,YAGjBC,YAHiB,GAGAC,QAAQ,CAACC,IAHT,CAGjBF,YAHiB;;AAKzB,UAAIL,SAAS,GAACI,WAAV,GAAuBC,YAAvB,IAAuC,KAAKG,KAAL,CAAWC,UAAtD,EAAmE;AAChE,aAAKC,WAAL;AACA,cAAM,KAAKF,KAAL,CAAWG,eAAX,CAA2BC,OAA3B,EAAN;AACA;AACJ,KAXoC;;AAAA,SAYnCF,WAZmC,GAYrB,YAAW;AAAA,0BACyB,KAAKF,KAD9B;AAAA,YACjBG,eADiB,eACjBA,eADiB;AAAA,YACDE,IADC,eACDA,IADC;AAAA,YACIJ,UADJ,eACIA,UADJ;AAAA,YACeK,MADf,eACeA,MADf;AAEvB,UAAIC,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,CAAd,CAAf;;AACA,UAAGP,UAAH,EAAc;AACV,YAAG;AACE,gBAAME,eAAe,CAACM,sBAAhB,CAAuCF,QAAvC,EAAgDF,IAAhD,CAAN;AACJ,SAFD,CAEC,OAAMd,CAAN,EAAQ;AACL,gBAAMY,eAAe,CAACO,YAAhB,EAAN;AACH;AAGJ;AACJ,KAxBoC;;AAAA,SAyBrCC,WAzBqC,GAyBtBpB,CAAD,IAAM;AAAA,YACTY,eADS,GACU,KAAKH,KADf,CACTG,eADS;AAEhBA,MAAAA,eAAe,CAACS,cAAhB,CAA+B,OAA/B;AACAT,MAAAA,eAAe,CAACU,MAAhB,CAAuBtB,CAAC,CAACuB,MAAF,CAASC,EAAhC;AACH,KA7BoC;;AAAA,SA8BrCC,UA9BqC,GA8BxB,MAAK;AAAA,YACPb,eADO,GACY,KAAKH,KADjB,CACPG,eADO;AAEdA,MAAAA,eAAe,CAACS,cAAhB,CAA+B,MAA/B;AACH,KAjCoC;;AAAA,SAmCrCK,cAnCqC,GAmCrB,YAAS;AAAA,2BAC0B,KAAKjB,KAD/B;AAAA,YACdG,eADc,gBACdA,eADc;AAAA,YACEe,aADF,gBACEA,aADF;AAAA,YACgBZ,MADhB,gBACgBA,MADhB;AAErB,UAAIS,EAAE,GAAGT,MAAM,CAACE,MAAP,CAAc,CAAd,CAAT;;AAFqB,2BAGFtB,OAAO,CAACiC,GAAR,CAAY,YAAZ,CAHE;AAAA,YAGdZ,QAHc,gBAGdA,QAHc;;AAIrB,UAAGA,QAAQ,KAAKQ,EAAhB,EAAmBZ,eAAe,CAACiB,gBAAhB,CAAiC,MAAjC,EAAnB,KACKjB,eAAe,CAACiB,gBAAhB,CAAiC,OAAjC;;AACL,UAAG;AACH,cAAMF,aAAa,CAACG,eAAd,CAA8BN,EAA9B,CAAN;AACA,cAAMZ,eAAe,CAACmB,kBAAhB,CAAmCP,EAAnC,CAAN;AACA,cAAMG,aAAa,CAACK,kBAAd,CAAiCR,EAAjC,CAAN;AACC,OAJD,CAIC,OAAMxB,CAAN,EAAQ;AACLiC,QAAAA,OAAO,CAACC,GAAR,CAAYlC,CAAZ;AAEH;;AAboB,YAcfmC,MAde,GAcL,KAAK1B,KAdA,CAcf0B,MAde;AAerBvB,MAAAA,eAAe,CAACwB,UAAhB,CAA2BD,MAAM,CAACE,OAAlC;AACAzB,MAAAA,eAAe,CAAC0B,YAAhB,CAA6BH,MAAM,CAACI,SAApC;AACA3B,MAAAA,eAAe,CAAC4B,WAAhB,CAA4BL,MAAM,CAACnB,QAAnC;AACAJ,MAAAA,eAAe,CAAC6B,WAAhB,CAA4BN,MAAM,CAACO,QAAnC;AAGH,KAxDoC;;AAAA,SA0DrCC,OA1DqC,GA0D3B,YAAW;AAAA,2BACa,KAAKlC,KADlB;AAAA,YACXmC,IADW,gBACXA,IADW;AAAA,YACNhC,eADM,gBACNA,eADM;AAET,YAAMiC,OAAO,CAACC,GAAR,CACFF,IAAI,CAACG,GAAL,CACI,OAAMC,IAAN,EAAWC,KAAX,KAAqB;AACjB,YAAIC,IAAI,GAAGF,IAAI,CAACpB,GAAL,CAAS,WAAT,CAAX;AACA,YAAIuB,UAAU,GAAG,KAAKC,mBAAL,CAAyBF,IAAzB,CAAjB;AACA,cAAMtC,eAAe,CAACyC,eAAhB,CAAgC;AAACF,UAAAA,UAAU,EAACA,UAAZ;AAAuBF,UAAAA,KAAK,EAAGA;AAA/B,SAAhC,CAAN;AACH,OALL,CADE,CAAN;AASX,KArEoC;;AAAA,SAsErCK,cAtEqC,GAsEpB,MAAM9B,EAAN,IAAa;AAAA,2BACI,KAAKf,KADT;AAAA,YACpBmC,IADoB,gBACpBA,IADoB;AAAA,YACfhC,eADe,gBACfA,eADe;AAE1B,UAAIqC,KAAK,GAAGL,IAAI,CAACW,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAAC5B,GAAL,CAAS,QAAT,MAAqB6B,QAAQ,CAACjC,EAAD,CAApD,CAAZ;AACA,YAAMkC,QAAQ,GAAGd,IAAI,CAACe,KAAL,CAAW,CAACV,KAAD,EAAO,aAAP,CAAX,CAAjB;AACQ,YAAMJ,OAAO,CAACC,GAAR,CACFY,QAAQ,CAACX,GAAT,CACI,OAAMV,OAAN,EAAcuB,YAAd,KAA+B;AAC3B,YAAIV,IAAI,GAAGb,OAAO,CAACwB,SAAnB;AACA,YAAIV,UAAU,GAAG,KAAKC,mBAAL,CAAyBF,IAAzB,CAAjB;AACA,cAAMtC,eAAe,CAACkD,sBAAhB,CAAuC;AAACX,UAAAA,UAAU,EAACA,UAAZ;AAAuBF,UAAAA,KAAK,EAAGA,KAA/B;AAAqCW,UAAAA,YAAY,EAACA;AAAlD,SAAvC,CAAN;AACH,OALL,CADE,CAAN;AASX,KAnFoC;;AAAA,SAoFrCR,mBApFqC,GAoFhBW,EAAD,IAAO;AAC7B,YAAMC,GAAG,GAAG,KAAK,IAAjB;AACA,YAAMC,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACA,UAAIC,CAAC,GAAG,IAAID,IAAJ,CAASH,EAAT,CAAR;AACA,UAAIK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACL,CAAC,GAAGE,CAAL,IAAWH,GAAtB,CAAd;AAEA,UAAI7B,MAAM,GAAG;AACH,eAAOgC,CAAC,CAACI,WAAF,KAAkB,GAAlB,IAAyBJ,CAAC,CAACK,QAAF,KAAe,CAAf,GAAmB,CAAnB,GAAuB,EAAvB,GAA4B,GAArD,KAA6DL,CAAC,CAACK,QAAF,KAAe,CAA5E,IACL,GADK,IACEL,CAAC,CAACM,OAAF,KAAc,CAAd,GAAkB,EAAlB,GAAuB,GADzB,IACiCN,CAAC,CAACM,OAAF,EADjC,GAC+C,GAD/C,IACsDN,CAAC,CAACO,QAAF,KAAe,CAAf,GAAmB,EAAnB,GAAwB,GAD9E,IAEJP,CAAC,CAACO,QAAF,EAFI,GAEW,GAFX,IAEkBP,CAAC,CAACQ,UAAF,KAAiB,CAAjB,GAAqB,EAArB,GAA0B,GAF5C,IAEoDR,CAAC,CAACQ,UAAF,EAFpD,GAEqE,GAFrE,IAGJR,CAAC,CAACS,UAAF,KAAiB,CAAjB,GAAqB,EAArB,GAA0B,GAHtB,IAG8BT,CAAC,CAACS,UAAF,EAJlC;AAKH,iBAAUT,CAAC,CAACI,WAAF,KAAkB,GAAlB,IAAyBJ,CAAC,CAACK,QAAF,KAAe,CAAf,GAAmB,CAAnB,GAAuB,EAAvB,GAA4B,GAArD,KAA6DL,CAAC,CAACK,QAAF,KAAe,CAA5E,IACR,GADQ,IACDL,CAAC,CAACM,OAAF,KAAc,CAAd,GAAkB,EAAlB,GAAuB,GADtB,IAC8BN,CAAC,CAACM,OAAF,EANrC;AAOZ,qBAAa;AAPD,OAAb;;AAUA,UAAIL,OAAO,GAAG,EAAd,EAAkB;AAAE;AACnBjC,QAAAA,MAAM,CAAC0C,SAAP,GAAmBT,OAAO,GAAG,KAA7B;AACA,OAFD,MAEO,IAAIA,OAAO,GAAG,KAAK,EAAnB,EAAuB;AAAE;AAC/BjC,QAAAA,MAAM,CAAC0C,SAAP,GAAmBR,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,EAArB,IAA2B,MAA9C;AACA,OAFM,MAEA,IAAGA,OAAO,GAAG,KAAK,EAAL,GAAU,EAAvB,EAA2B;AAAE;AACnCjC,QAAAA,MAAM,CAAC0C,SAAP,GAAmBR,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,EAAV,GAAe,EAA1B,IAAgC,KAAnD;AACA,OAFM,MAED;AACIjC,QAAAA,MAAM,CAAC0C,SAAP,GAAmB1C,MAAM,CAAC2C,KAA1B;AACH;;AACP,aAAO3C,MAAM,CAAC0C,SAAd;AACA,KA9GuC;;AAAA,SA6HrCE,iBA7HqC,GA6HnB,YAAS;AAAA,YAChBrD,cADgB,GACE,IADF,CAChBA,cADgB;AAEvBtB,MAAAA,MAAM,CAAC4E,gBAAP,CAAwB,QAAxB,EAAkC,KAAKjF,YAAvC;AACA,YAAM,KAAKY,WAAL,EAAN;AACA,YAAM,KAAKF,KAAL,CAAWG,eAAX,CAA2BC,OAA3B,EAAN;AACA,YAAMa,cAAc,EAApB;AACH,KAnIoC;;AAAA,SAoIrCuD,iBApIqC,GAoIlB,YAAS;AAAA,2BACgB,KAAKxE,KADrB;AAAA,YACjBkB,aADiB,gBACjBA,aADiB;AAAA,YACHuD,QADG,gBACHA,QADG;AAAA,YACMnE,MADN,gBACMA,MADN;AAExB,YAAMS,EAAE,GAAGT,MAAM,CAACE,MAAP,CAAc,CAAd,CAAX;AACA,UAAGiE,QAAQ,KAAK,KAAhB,EACI,MAAMvD,aAAa,CAACwD,MAAd,CAAqB3D,EAArB,CAAN,CADJ,KAGI,MAAMG,aAAa,CAACyD,QAAd,CAAuB;AAAC,oBAAY5D;AAAb,OAAvB,CAAN;AACJ,YAAMG,aAAa,CAACG,eAAd,CAA8BN,EAA9B,CAAN;AACH,KA5IoC;;AAAA,SA6IrC6D,eA7IqC,GA6InB,MAAMrF,CAAN,IAAW;AAAA,2BACa,KAAKS,KADlB;AAAA,YAClB6E,WADkB,gBAClBA,WADkB;AAAA,YACN1E,eADM,gBACNA,eADM;AAEzB,YAAMY,EAAE,GAAGxB,CAAC,CAACuB,MAAF,CAASC,EAApB;AACA,YAAMZ,eAAe,CAAC2E,UAAhB,CAA2B/D,EAA3B,CAAN;AACA,YAAM8D,WAAW,CAACE,SAAZ,CAAsBhE,EAAtB,CAAN;AACA,YAAMZ,eAAe,CAAC6E,eAAhB,CAAgC,MAAhC,CAAN;;AACA,UAAG;AACH,cAAMH,WAAW,CAACI,kBAAZ,CAA+BlE,EAA/B,EAAkC,CAAlC,CAAN;AACC,OAFD,CAEC,OAAMxB,CAAN,EAAQ,CAAE;;AARc,YASlB2F,QATkB,GASN,KAAKlF,KATC,CASlBkF,QATkB;AAUzB,YAAM/E,eAAe,CAACgF,kBAAhB,CAAmCD,QAAnC,CAAN;AAEH,KAzJoC;;AAAA,SA0JrCE,iBA1JqC,GA0JlB,MAAM7F,CAAN,IAAY;AAAA,2BACW,KAAKS,KADhB;AAAA,YACpB6E,WADoB,gBACpBA,WADoB;AAAA,YACR1E,eADQ,gBACRA,eADQ;AAE3B,YAAMY,EAAE,GAAGxB,CAAC,CAACuB,MAAF,CAASC,EAApB;AACA,YAAMZ,eAAe,CAAC2E,UAAhB,CAA2B/D,EAA3B,CAAN;AACA,YAAM8D,WAAW,CAACQ,UAAZ,CAAuBtE,EAAvB,CAAN;AACA,YAAMZ,eAAe,CAAC6E,eAAhB,CAAgC,OAAhC,CAAN;;AACA,UAAG;AACH,cAAMH,WAAW,CAACI,kBAAZ,CAA+BlE,EAA/B,EAAkC,CAAlC,CAAN;AACC,OAFD,CAEC,OAAMxB,CAAN,EAAQ,CAAE;;AARgB,YASpB2F,QAToB,GASR,KAAKlF,KATG,CASpBkF,QAToB;AAU3B,YAAM/E,eAAe,CAACgF,kBAAhB,CAAmCD,QAAnC,CAAN;AACH,KArKoC;;AAAA,SAsKrCI,aAtKqC,GAsKtB,MAAM/F,CAAN,IAAU;AAAA,2BACyB,KAAKS,KAD9B;AAAA,YACduF,cADc,gBACdA,cADc;AAAA,YACCpF,eADD,gBACCA,eADD;AAAA,YACiBgC,IADjB,gBACiBA,IADjB;AAAA,YAEdpB,EAFc,GAERxB,CAAC,CAACuB,MAFM,CAEdC,EAFc;AAAA,YAGdyE,QAHc,GAGFjG,CAAC,CAACuB,MAAF,CAAS2E,OAHP,CAGdD,QAHc;AAIrB,YAAMrF,eAAe,CAACuF,kBAAhB,CAAmCF,QAAnC,CAAN;AACA,YAAMrF,eAAe,CAACwF,yBAAhB,CAA0C5E,EAA1C,CAAN;AALqB,YAMf6E,cANe,GAMG,KAAK5F,KANR,CAMf4F,cANe;;AAOrB,UAAGA,cAAc,KAAK,OAAtB,EAA8B;AAC1B,YAAIpD,KAAK,GAAGL,IAAI,CAACW,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAAC5B,GAAL,CAAS,QAAT,MAAqB6B,QAAQ,CAACjC,EAAD,CAApD,CAAZ;AACA,YAAIV,IAAI,GAAG8B,IAAI,CAACe,KAAL,CAAW,CAACV,KAAD,EAAO,aAAP,CAAX,CAAX;AACA,cAAM+C,cAAc,CAACM,mBAAf,CAAmC9E,EAAnC,EAAsCV,IAAtC,CAAN;AACA,cAAMF,eAAe,CAAC2F,sBAAhB,CAAuC/E,EAAvC,CAAN;AAJ0B,6BAKK,KAAKf,KALV;AAAA,cAKpB+F,WALoB,gBAKpBA,WALoB;AAAA,cAKRC,WALQ,gBAKRA,WALQ;AAM1B,YAAGA,WAAH,EACA,MAAM7F,eAAe,CAAC8F,sBAAhB,CAAuC;AAAC,uBAAclF,EAAf;AAAkB,yBAAcgF,WAAhC;AAA4C,yBAAe;AAA3D,SAAvC,CAAN,CADA,KAGA,MAAM5F,eAAe,CAAC8F,sBAAhB,CAAuC;AAAC,uBAAclF,EAAf;AAAkB,yBAAcgF,WAAhC;AAA4C,yBAAe;AAA3D,SAAvC,CAAN;AACA,cAAM,KAAKlD,cAAL,CAAoB9B,EAApB,CAAN;AACH;AACJ,KAzLoC;;AAAA,SA0LrCmF,gBA1LqC,GA0LlB,MAAM3G,CAAN,IAAW;AAAA,YACnBwB,EADmB,GACbxB,CAAC,CAACuB,MADW,CACnBC,EADmB;AAAA,4BAEoB,KAAKf,KAFzB;AAAA,YAEnBG,eAFmB,iBAEnBA,eAFmB;AAAA,YAEHoF,cAFG,iBAEHA,cAFG;AAAA,YAEYpD,IAFZ,iBAEYA,IAFZ;AAG1B,YAAMK,KAAK,GAAGL,IAAI,CAACW,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAAC5B,GAAL,CAAS,QAAT,MAAsB6B,QAAQ,CAACjC,EAAD,CAArD,CAAd;;AACA,UAAGoB,IAAI,CAACe,KAAL,CAAW,CAACV,KAAD,EAAO,aAAP,CAAX,CAAH,EAAqC;AAEjC,cAAMnC,IAAI,GAAG8B,IAAI,CAACe,KAAL,CAAW,CAACV,KAAD,EAAO,aAAP,CAAX,CAAb;;AACA,YAAG;AACC,gBAAM+C,cAAc,CAACM,mBAAf,CAAmC9E,EAAnC,EAAsCV,IAAtC,CAAN;AACA,gBAAMF,eAAe,CAAC2F,sBAAhB,CAAuC/E,EAAvC,CAAN;AAFD,gCAGgC,KAAKf,KAHrC;AAAA,gBAGO+F,WAHP,iBAGOA,WAHP;AAAA,gBAGmBC,WAHnB,iBAGmBA,WAHnB;AAIH,cAAGA,WAAH,EACA,MAAM7F,eAAe,CAAC8F,sBAAhB,CAAuC;AAAC,yBAAYlF,EAAb;AAAgB,2BAAcgF,WAA9B;AAA0C,2BAAe;AAAzD,WAAvC,CAAN,CADA,KAGA,MAAM5F,eAAe,CAAC8F,sBAAhB,CAAuC;AAAC,yBAAYlF,EAAb;AAAgB,2BAAcgF,WAA9B;AAA0C,2BAAe;AAAzD,WAAvC,CAAN;AACA,gBAAM,KAAKlD,cAAL,CAAoB9B,EAApB,CAAN;AACC,SATD,CASC,OAAMxB,CAAN,EAAQ;AACLY,UAAAA,eAAe,CAACgG,uBAAhB,CAAwCpF,EAAxC;AACH;AACJ;AACJ,KA9MoC;;AAAA,SA+MrCqF,YA/MqC,GA+MtB,MAAM7G,CAAN,IAAW;AACtB,UAAGI,MAAM,CAAC0G,KAAP,CAAaC,OAAb,KAAyB,EAA5B,EAA+B;AAAA,8BACc,KAAKtG,KADnB;AAAA,cACpBuF,cADoB,iBACpBA,cADoB;AAAA,cACLpF,eADK,iBACLA,eADK;AAAA,0BAEJZ,CAAC,CAACuB,MAFE;AAAA,cAEpByF,SAFoB,aAEpBA,SAFoB;AAAA,cAEVxF,EAFU,aAEVA,EAFU;AAG3BS,QAAAA,OAAO,CAACC,GAAR,CAAYV,EAAZ;AACA,YAAIyF,OAAO,GAAGD,SAAd;AACAC,QAAAA,OAAO,GAAGA,OAAO,CAACC,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAV;AACAD,QAAAA,OAAO,GAAGA,OAAO,CAACC,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAV;AACA,cAAMlB,cAAc,CAACmB,YAAf,CAA4B;AAAC3F,UAAAA,EAAD;AAAIyF,UAAAA;AAAJ,SAA5B,CAAN;AACA,cAAMjB,cAAc,CAACM,mBAAf,CAAmC9E,EAAnC,EAAsC,CAAtC,CAAN;AACA,aAAK4F,YAAL,CAAkB5F,EAAlB;;AACA,aAAI,IAAI6F,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG9G,QAAQ,CAAC+G,iBAAT,CAA2B,WAA3B,EAAwCC,MAA3D,EAAmEF,CAAC,EAApE,EAAuE;AACnE,cAAG5D,QAAQ,CAAClD,QAAQ,CAAC+G,iBAAT,CAA2B,WAA3B,EAAwCD,CAAxC,EAA2C7F,EAA5C,CAAR,KAA4DiC,QAAQ,CAACjC,EAAD,CAAvE,EAA4E;AACxEjB,YAAAA,QAAQ,CAAC+G,iBAAT,CAA2B,WAA3B,EAAwCD,CAAxC,EAA2CG,WAA3C,GAAyD,EAAzD;AACAjH,YAAAA,QAAQ,CAAC+G,iBAAT,CAA2B,WAA3B,EAAwCD,CAAxC,EAA2CI,IAA3C;AACH;AACJ;;AACD,cAAMzB,cAAc,CAAC0B,aAAf,CAA6BlG,EAA7B,CAAN;AAhB2B,YAiBtBmG,UAjBsB,GAiBR,KAAKlH,KAjBG,CAiBtBkH,UAjBsB;AAkB3B,cAAM/G,eAAe,CAACgH,qBAAhB,CAAsC;AAAC,wBAAaD,UAAd;AAAyB,uBAAYnG;AAArC,SAAtC,CAAN;AACA,cAAM,KAAK8B,cAAL,CAAoB9B,EAApB,CAAN;AAEH;AACJ,KAtOoC;;AAAA,SAuOrC4F,YAvOqC,GAuOvB5F,EAAD,IACTqG,UAAU,CAAC,YAAS;AAAA,4BACyB,KAAKpH,KAD9B;AAAA,YACTqH,cADS,iBACTA,cADS;AAAA,YACMlH,eADN,iBACMA,eADN;AAEhB,YAAMA,eAAe,CAACmH,oBAAhB,CAAqC;AAAC,qBAAcvG,EAAf;AAAkB,0BAAiBsG;AAAnC,OAArC,CAAN;AACA,YAAM,KAAKxE,cAAL,CAAoB9B,EAApB,CAAN;AACH,KAJS,EAIR,IAJQ,CAxOuB;;AAAA,SAuPrCwG,UAvPqC,GAuPvBhI,CAAD,IAAO;AAAA,4BAC2B,KAAKS,KADhC;AAAA,YACTmC,IADS,iBACTA,IADS;AAAA,YACJhC,eADI,iBACJA,eADI;AAAA,YACYqH,WADZ,iBACYA,WADZ;AAAA,YAETzG,EAFS,GAEHxB,CAAC,CAACuB,MAFC,CAETC,EAFS;AAGhB,YAAMyB,KAAK,GAAGL,IAAI,CAACW,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAAC5B,GAAL,CAAS,QAAT,MAAqB6B,QAAQ,CAACjC,EAAD,CAApD,CAAd;AACA,UAAGoB,IAAI,CAACe,KAAL,CAAW,CAACV,KAAD,EAAO,eAAP,CAAX,MAAwC,OAA3C,EAAoD;;AACpD,UAAGL,IAAI,CAACe,KAAL,CAAW,CAACV,KAAD,EAAO,aAAP,CAAX,MAAsC,MAAzC,EAAgD;AAC5CrC,QAAAA,eAAe,CAACsH,kBAAhB,CAAmC;AAAC,mBAAQjF,KAAT;AAAgB,qBAAU;AAA1B,SAAnC;AACAgF,QAAAA,WAAW,CAACE,oBAAZ,CAAiC,MAAjC;AACAF,QAAAA,WAAW,CAACG,mBAAZ,CAAgC,MAAhC;AACAH,QAAAA,WAAW,CAACI,qBAAZ,CAAkC,KAAlC;AACAzH,QAAAA,eAAe,CAAC0H,cAAhB,CAA+B;AAAC,mBAAQrF,KAAT;AAAgB,qBAAU;AAA1B,SAA/B;AACH,OAND,MAOI;AACArC,QAAAA,eAAe,CAAC0H,cAAhB,CAA+B;AAAC,mBAAQrF,KAAT;AAAgB,qBAAU;AAA1B,SAA/B;AACH;AAEJ,KAvQoC;;AAAA,SAyQrCsF,WAzQqC,GAyQvB,MAAMvI,CAAN,IAAY;AAAA,YACfwB,EADe,GACTxB,CAAC,CAACuB,MADO,CACfC,EADe;AAAA,4BAEqB,KAAKf,KAF1B;AAAA,YAEfmC,IAFe,iBAEfA,IAFe;AAAA,YAEVhC,eAFU,iBAEVA,eAFU;AAAA,YAEM4H,WAFN,iBAEMA,WAFN;AAGtB,YAAMvF,KAAK,GAAGL,IAAI,CAACW,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAAC5B,GAAL,CAAS,QAAT,MAAqB6B,QAAQ,CAACjC,EAAD,CAApD,CAAd;AAEA,YAAMZ,eAAe,CAAC0H,cAAhB,CAA+B;AAAC,iBAAQrF,KAAT;AAAgB,mBAAU;AAA1B,OAA/B,CAAN;AACA,YAAMrC,eAAe,CAAC6H,gBAAhB,CAAiC;AAAC,iBAAUxF,KAAX;AAAiB,mBAAY;AAA7B,OAAjC,CAAN;AACH,KAhRoC;;AAAA,SAiRrCrB,GAjRqC,GAiR9B8G,IAAD,IAAU;AACZ,aAAO;AACH,kBAAW,WADR;AAEH,kBAAW;AAFR,QAGLA,IAHK,CAAP;AAIH,KAtRoC;;AAAA,SAuRrCC,WAvRqC,GAuRtB3I,CAAD,IAAO;AAAA,4BAC0B,KAAKS,KAD/B;AAAA,YACV+H,WADU,iBACVA,WADU;AAAA,YACE5H,eADF,iBACEA,eADF;AAAA,YACkBgC,IADlB,iBACkBA,IADlB;AAAA,YAEVpB,EAFU,GAEJxB,CAAC,CAACuB,MAFE,CAEVC,EAFU;AAAA,YAGVyE,QAHU,GAGEjG,CAAC,CAACuB,MAAF,CAAS2E,OAHX,CAGVD,QAHU;AAIjB,YAAMhD,KAAK,GAAGL,IAAI,CAACW,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAAC5B,GAAL,CAAS,QAAT,MAAqB6B,QAAQ,CAACjC,EAAD,CAApD,CAAd;AACAZ,MAAAA,eAAe,CAAC0H,cAAhB,CAA+B;AAAC,iBAAQrF,KAAT;AAAgB,mBAAU;AAA1B,OAA/B;AACAuF,MAAAA,WAAW,CAACI,UAAZ,CAAuBpH,EAAvB;AACAgH,MAAAA,WAAW,CAACK,mBAAZ,CAAgC,OAAhC;AACAL,MAAAA,WAAW,CAACM,gBAAZ,CAA6B7C,QAA7B;AACAuC,MAAAA,WAAW,CAACO,YAAZ,CAAyB,KAAKnH,GAAL,CAASqE,QAAT,CAAzB;AACH,KAjSoC;;AAAA,SAkSrC+C,WAlSqC,GAkSvB,YAAW;AAAA,4BACqC,KAAKvI,KAD1C;AAAA,YACd+H,WADc,iBACdA,WADc;AAAA,YACF5H,eADE,iBACFA,eADE;AAAA,YACcgC,IADd,iBACcA,IADd;AAAA,YACmB7B,MADnB,iBACmBA,MADnB;AAAA,YAC0BkI,OAD1B,iBAC0BA,OAD1B;AAErB,YAAMhG,KAAK,GAAGL,IAAI,CAACW,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAAC5B,GAAL,CAAS,QAAT,MAAqB6B,QAAQ,CAACwF,OAAD,CAApD,CAAd;AACA,YAAMC,MAAM,GAAGnI,MAAM,CAACE,MAAP,CAAc,CAAd,CAAf;;AACA,UAAG;AACC,cAAMuH,WAAW,CAACW,UAAZ,CAAuBF,OAAvB,CAAN;AACA,cAAMrI,eAAe,CAACuI,UAAhB,CAA2BlG,KAA3B,CAAN;AACA,cAAMrC,eAAe,CAACmB,kBAAhB,CAAmCmH,MAAnC,CAAN;AACH,OAJD,CAIC,OAAMlJ,CAAN,EAAQ;AACLiC,QAAAA,OAAO,CAACC,GAAR,CAAYlC,CAAZ;AACH;AACJ,KA7SoC;;AAAA,SA+SrCoJ,iBA/SqC,GA+SjB,MAAMpJ,CAAN,IAAY;AAC5BA,MAAAA,CAAC,CAACqJ,cAAF;AAD4B,YAErBC,eAFqB,GAEF,KAAK7I,KAFH,CAErB6I,eAFqB;AAG5B,UAAIC,IAAI,GAAGvJ,CAAC,CAACuB,MAAF,CAASiI,KAAT,CAAe,CAAf,CAAX;AACA,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,MAAAA,QAAQ,CAACE,GAAT,CAAa,MAAb,EAAoBJ,IAApB;AACA,YAAMD,eAAe,CAACM,eAAhB,CAAgCH,QAAhC,CAAN;AAN4B,YAOrBI,UAPqB,GAOP,KAAKpJ,KAPE,CAOrBoJ,UAPqB;AAQ5B5H,MAAAA,OAAO,CAACC,GAAR,CAAY2H,UAAU,CAACC,IAAX,EAAZ;AACAnK,MAAAA,OAAO,CAACoK,MAAR,CAAe,YAAf;AACApK,MAAAA,OAAO,CAACgK,GAAR,CAAY,YAAZ,EAAyBE,UAAU,CAACC,IAAX,EAAzB;AACA1J,MAAAA,MAAM,CAAC4J,QAAP,CAAgBC,MAAhB;AACD,KA3TkC;;AAAA,SA6TnCC,WA7TmC,GA6TrBlK,CAAD,IAAM;AAAA,YACVwB,EADU,GACJxB,CAAC,CAACuB,MADE,CACVC,EADU;AAAA,YAEV2I,OAFU,GAECnK,CAAC,CAACuB,MAAF,CAAS2E,OAFV,CAEViE,OAFU;AAGjB,WAAK1J,KAAL,CAAW2J,OAAX,CAAmBC,IAAnB,CAAyB,WAAU7I,EAAG,WAAU2I,OAAQ,EAAxD;AACH,KAjUoC;;AAAA,SAkUrCG,iBAlUqC,GAkUlB,CAACrH,KAAD,EAAOzB,EAAP,KAAc;AAAA,4BACE,KAAKf,KADP;AAAA,YACtBG,eADsB,iBACtBA,eADsB;AAAA,YACNgC,IADM,iBACNA,IADM;;AAE7B,WAAI,IAAIyE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG9G,QAAQ,CAAC+G,iBAAT,CAA2B,WAA3B,EAAwCC,MAA3D,EAAmEF,CAAC,EAApE,EAAuE;AACnE,YAAG5D,QAAQ,CAAClD,QAAQ,CAAC+G,iBAAT,CAA2B,WAA3B,EAAwCD,CAAxC,EAA2C7F,EAA5C,CAAR,KAA4DiC,QAAQ,CAACjC,EAAD,CAAvE,EAA4E;AACxEjB,UAAAA,QAAQ,CAAC+G,iBAAT,CAA2B,WAA3B,EAAwCD,CAAxC,EAA2CG,WAA3C,GAAyD5E,IAAI,CAACe,KAAL,CAAW,CAACV,KAAD,EAAO,SAAP,CAAX,CAAzD;AACA1C,UAAAA,QAAQ,CAAC+G,iBAAT,CAA2B,WAA3B,EAAwCD,CAAxC,EAA2CI,IAA3C;AACH;AACJ;;AACD7G,MAAAA,eAAe,CAAC6H,gBAAhB,CAAiC;AAAC,iBAAUxF,KAAX;AAAiB,mBAAY;AAA7B,OAAjC;AACH,KA3UoC;;AAAA,SA4UrCsH,YA5UqC,GA4UrBvK,CAAD,IAAO;AAAA,YACXwB,EADW,GACLxB,CAAC,CAACuB,MADG,CACXC,EADW;AAAA,4BAEyB,KAAKf,KAF9B;AAAA,YAEXG,eAFW,iBAEXA,eAFW;AAAA,YAEKgC,IAFL,iBAEKA,IAFL;AAAA,YAEU4F,WAFV,iBAEUA,WAFV;AAGlB,YAAMvF,KAAK,GAAGL,IAAI,CAACW,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAAC5B,GAAL,CAAS,QAAT,MAAqB6B,QAAQ,CAACjC,EAAD,CAApD,CAAd;AACA,WAAK8I,iBAAL,CAAuBrH,KAAvB,EAA6BzB,EAA7B;AACH,KAjVoC;;AAAA,SAkVrCgJ,WAlVqC,GAkVvB,YAAW;AAAA,4BAC8B,KAAK/J,KADnC;AAAA,YACdG,eADc,iBACdA,eADc;AAAA,YACEgC,IADF,iBACEA,IADF;AAAA,YACO4F,WADP,iBACOA,WADP;AAAA,YACmBS,OADnB,iBACmBA,OADnB;AAErB,YAAMhG,KAAK,GAAGL,IAAI,CAACW,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAAC5B,GAAL,CAAS,QAAT,MAAqB6B,QAAQ,CAACwF,OAAD,CAApD,CAAd;AACA,UAAIwB,SAAS,GAAG7H,IAAI,CAACe,KAAL,CAAW,CAACV,KAAD,EAAO,WAAP,CAAX,CAAhB;;AACA,UAAG;AACH,cAAMuF,WAAW,CAACkC,qBAAZ,CAAkC;AAAC,uBAAcD,SAAf;AAA0B,oBAAWxB,OAArC;AAA8C,qBAAYrG,IAAI,CAACe,KAAL,CAAW,CAACV,KAAD,EAAO,YAAP,CAAX;AAA1D,SAAlC,CAAN;AACC,OAFD,CAEC,OAAMjD,CAAN,EAAQ;AACL,YAAGA,CAAC,CAAC2K,QAAF,CAAWC,MAAX,KAAsB,GAAzB,EAA6B;AACzBpC,UAAAA,WAAW,CAACO,YAAZ,CAAyB,+BAAzB;AACAP,UAAAA,WAAW,CAACqC,eAAZ,CAA4B,OAA5B;AACA;AACH;AACJ;;AACD,WAAKP,iBAAL,CAAuBrH,KAAvB,EAA6BgG,OAA7B;AACArI,MAAAA,eAAe,CAACkK,cAAhB,CAA+B;AAAC,iBAAS7H,KAAV;AAAgB,gBAAQL,IAAI,CAACe,KAAL,CAAW,CAACV,KAAD,EAAO,YAAP,CAAX;AAAxB,OAA/B;AACC,KAjWgC;;AAAA,SAkWjC8H,gBAlWiC,GAkWb/K,CAAD,IAAO;AAAA,yBACCA,CAAC,CAACuB,MADH;AAAA,YACfC,EADe,cACfA,EADe;AAAA,YACZwF,SADY,cACZA,SADY;AAAA,4BAEqB,KAAKvG,KAF1B;AAAA,YAEfG,eAFe,iBAEfA,eAFe;AAAA,YAECgC,IAFD,iBAECA,IAFD;AAAA,YAEM4F,WAFN,iBAEMA,WAFN;AAGtB,YAAMvF,KAAK,GAAGL,IAAI,CAACW,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAAC5B,GAAL,CAAS,QAAT,MAAqB6B,QAAQ,CAACjC,EAAD,CAApD,CAAd;AACAZ,MAAAA,eAAe,CAACoK,aAAhB,CAA8B;AAAC,iBAAU/H,KAAX;AAAkB,sBAAe+D;AAAjC,OAA9B;AACH,KAvWgC;;AAAA,SAyWjCiE,gBAzWiC,GAyWbjL,CAAD,IAAO;AAAA,YACfwB,EADe,GACTxB,CAAC,CAACuB,MADO,CACfC,EADe;AAAA,4BAEqB,KAAKf,KAF1B;AAAA,YAEfG,eAFe,iBAEfA,eAFe;AAAA,YAECgC,IAFD,iBAECA,IAFD;AAAA,YAEMqF,WAFN,iBAEMA,WAFN;AAGtB,YAAMhF,KAAK,GAAGL,IAAI,CAACW,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAAC5B,GAAL,CAAS,QAAT,MAAqB6B,QAAQ,CAACjC,EAAD,CAApD,CAAd;;AACJ,UAAGoB,IAAI,CAACe,KAAL,CAAW,CAACV,KAAD,EAAO,iBAAP,CAAX,MAA0C,MAA7C,EAAoD;AAChDrC,QAAAA,eAAe,CAACsH,kBAAhB,CAAmC;AAAC,mBAAQjF,KAAT;AAAgB,qBAAU;AAA1B,SAAnC;AACAgF,QAAAA,WAAW,CAACE,oBAAZ,CAAiC,MAAjC;AACAF,QAAAA,WAAW,CAACG,mBAAZ,CAAgC,MAAhC;AACAH,QAAAA,WAAW,CAACI,qBAAZ,CAAkC,MAAlC;AACAzH,QAAAA,eAAe,CAAC0H,cAAhB,CAA+B;AAAC,mBAAQrF,KAAT;AAAgB,qBAAU;AAA1B,SAA/B;AACH,OAND,MAOI;AACArC,QAAAA,eAAe,CAACsH,kBAAhB,CAAmC;AAAC,mBAAQjF,KAAT;AAAgB,qBAAU;AAA1B,SAAnC;AACH;AACA,KAvXgC;;AAAA,SAwXjCiI,eAxXiC,GAwXf,MAAMlL,CAAN,IAAY;AAAA,YACnBwB,EADmB,GACbxB,CAAC,CAACuB,MADW,CACnBC,EADmB;AAAA,YAEnB2J,MAFmB,GAETnL,CAAC,CAACuB,MAAF,CAAS2E,OAFA,CAEnBiF,MAFmB;AAG1BlJ,MAAAA,OAAO,CAACC,GAAR,CAAYiJ,MAAZ;AAH0B,4BAIiB,KAAK1K,KAJtB;AAAA,YAInBmC,IAJmB,iBAInBA,IAJmB;AAAA,YAId4F,WAJc,iBAIdA,WAJc;AAAA,YAIF5H,eAJE,iBAIFA,eAJE;AAK1B,YAAMqC,KAAK,GAAGL,IAAI,CAACW,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAAC5B,GAAL,CAAS,QAAT,MAAqB6B,QAAQ,CAAC0H,MAAD,CAApD,CAAd;;AACA,UAAG;AACH,cAAM3C,WAAW,CAACkC,qBAAZ,CAAkC;AAAC,uBAAclJ,EAAf;AAAmB,oBAAW2J,MAA9B;AAAsC,qBAAYvI,IAAI,CAACe,KAAL,CAAW,CAACV,KAAD,EAAO,SAAP,CAAX;AAAlD,SAAlC,CAAN;AACC,OAFD,CAEC,OAAMjD,CAAN,EAAQ,CAER;;AACDY,MAAAA,eAAe,CAACwK,gBAAhB,CAAiC;AAAC,iBAAQnI,KAAT;AAAe,qBAAYzB;AAA3B,OAAjC;AACAZ,MAAAA,eAAe,CAACsH,kBAAhB,CAAmC;AAAC,iBAAQjF,KAAT;AAAgB,mBAAU;AAA1B,OAAnC;AACH,KArYgC;;AAAA,SAuYjCoI,QAvYiC,GAuYtB,MAAM;AAAA,4BACuB,KAAK5K,KAD5B;AAAA,YACN6K,aADM,iBACNA,aADM;AAAA,YACQ9C,WADR,iBACQA,WADR;AAEbA,MAAAA,WAAW,CAACK,mBAAZ,CAAgC,MAAhC;AACA,UAAGyC,aAAa,KAAK,QAArB,EACI,KAAKd,WAAL;AAEJ,UAAGc,aAAa,KAAK,QAArB,EACI,KAAKtC,WAAL;AACP,KA/YgC;;AAAA,SAgZjCuC,iBAhZiC,GAgZb,MAAM;AAAA,YACnB/C,WADmB,GACJ,KAAK/H,KADD,CACnB+H,WADmB;AAE1BA,MAAAA,WAAW,CAACK,mBAAZ,CAAgC,MAAhC;AACC,KAnZgC;;AAAA,SAoZjC2C,aApZiC,GAoZjB,MAAM;AAAA,YACXhD,WADW,GACI,KAAK/H,KADT,CACX+H,WADW;AAEtBA,MAAAA,WAAW,CAACqC,eAAZ,CAA4B,MAA5B;AACC,KAvZgC;AAAA;;AA+GrCY,EAAAA,uBAAuB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,WAAOD,SAAS,CAAC3K,MAAV,KAAqB,KAAKN,KAAL,CAAWM,MAAhC,IAA0C2K,SAAS,CAAC9I,IAAV,KAAmB,KAAKnC,KAAL,CAAWmC,IAA/E;AACH;;AACFgJ,EAAAA,kBAAkB,CAACF,SAAD,EAAYC,SAAZ,EAAuBE,QAAvB,EAAgC;AAE7C,QAAGA,QAAQ,IAAIH,SAAS,CAAC3K,MAAV,KAAqB,KAAKN,KAAL,CAAWM,MAA/C,EAAsD;AAAA,YAC/CW,cAD+C,GAC7B,IAD6B,CAC/CA,cAD+C;AAEtDA,MAAAA,cAAc;AACb,KAHD,MAIK,IAAGmK,QAAQ,IAAIH,SAAS,CAAC9I,IAAV,KAAmB,KAAKnC,KAAL,CAAWmC,IAA7C,EAAkD;AACnD,WAAKD,OAAL;AACH;AACJ;;AAmHDmJ,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,WAAO,KAAKvL,KAAL,CAAWmC,IAAX,KAAoBmJ,SAAS,CAACnJ,IAA9B,IAAsC,KAAKnC,KAAL,CAAW0B,MAAX,KAAsB4J,SAAS,CAAC5J,MAAtE,IACP,KAAK1B,KAAL,CAAWwL,aAAX,KAA6BF,SAAS,CAACE,aADhC,IACiD,KAAKxL,KAAL,CAAW4B,OAAX,KAAuB0J,SAAS,CAAC1J,OADlF,IAEP,KAAK5B,KAAL,CAAWO,QAAX,KAAwB+K,SAAS,CAAC/K,QAF3B,IAEuC,KAAKP,KAAL,CAAWiC,QAAX,KAAwBqJ,SAAS,CAACrJ,QAFzE,IAGP,KAAKjC,KAAL,CAAW8B,SAAX,KAAyBwJ,SAAS,CAACxJ,SAH5B,IAGyC,KAAK9B,KAAL,CAAWyL,WAAX,KAA2BH,SAAS,CAACG,WAH9E,IAIJ,KAAKzL,KAAL,CAAW0L,OAAX,KAAuBJ,SAAS,CAACI,OAJ7B,IAIwC,KAAK1L,KAAL,CAAW2L,YAAX,KAA4BL,SAAS,CAACK,YAJ9E,IAKN,KAAK3L,KAAL,CAAW4L,gBAAX,KAAgCN,SAAS,CAACM,gBAL3C;AAMH;;AAoKDC,EAAAA,MAAM,GAAE;AAAA,UAEG1J,IAFH,GAEW,KAAKnC,KAFhB,CAEGmC,IAFH;;AAGJ,QAAG,CAACjD,OAAO,CAACiC,GAAR,CAAY,YAAZ,CAAJ,EAA+B;AAE3B,aAAO,IAAP;AACH;;AACD,UAAM2K,gBAAgB,GAAG5M,OAAO,CAACiC,GAAR,CAAY,YAAZ,EAA0BW,SAAnD;AACA,UAAMiK,QAAQ,GAAG7M,OAAO,CAACiC,GAAR,CAAY,YAAZ,EAA0BZ,QAA3C;AARI,0BASyE,KAAKP,KAT9E;AAAA,UASGyL,WATH,iBASGA,WATH;AAAA,UASeO,KATf,iBASeA,KATf;AAAA,UASqB9G,QATrB,iBASqBA,QATrB;AAAA,UAS8B0G,gBAT9B,iBAS8BA,gBAT9B;AAAA,UAS+CK,SAT/C,iBAS+CA,SAT/C;AAAA,UASyDN,YATzD,iBASyDA,YATzD;AAAA,0BAU+G,KAAK3L,KAVpH;AAAA,UAUGkM,SAVH,iBAUGA,SAVH;AAAA,UAUaC,WAVb,iBAUaA,WAVb;AAAA,UAUyBrK,SAVzB,iBAUyBA,SAVzB;AAAA,UAUmCF,OAVnC,iBAUmCA,OAVnC;AAAA,UAU2CrB,QAV3C,iBAU2CA,QAV3C;AAAA,UAUoD0B,QAVpD,iBAUoDA,QAVpD;AAAA,UAU6DyJ,OAV7D,iBAU6DA,OAV7D;AAAA,UAUqEF,aAVrE,iBAUqEA,aAVrE;AAAA,UAUmF/G,QAVnF,iBAUmFA,QAVnF;AAAA,UAU4F2H,eAV5F,iBAU4FA,eAV5F;AAAA,UAWG5H,iBAXH,GAaoG,IAbpG,CAWGA,iBAXH;AAAA,UAWqB7D,WAXrB,GAaoG,IAbpG,CAWqBA,WAXrB;AAAA,UAWiCK,UAXjC,GAaoG,IAbpG,CAWiCA,UAXjC;AAAA,UAW4C4D,eAX5C,GAaoG,IAbpG,CAW4CA,eAX5C;AAAA,UAW4DQ,iBAX5D,GAaoG,IAbpG,CAW4DA,iBAX5D;AAAA,UAW8EgB,YAX9E,GAaoG,IAbpG,CAW8EA,YAX9E;AAAA,UAW2FF,gBAX3F,GAaoG,IAbpG,CAW2FA,gBAX3F;AAAA,UAYCZ,aAZD,GAaoG,IAbpG,CAYCA,aAZD;AAAA,UAYeiC,UAZf,GAaoG,IAbpG,CAYeA,UAZf;AAAA,UAY0BoB,iBAZ1B,GAaoG,IAbpG,CAY0BA,iBAZ1B;AAAA,UAY4Cc,WAZ5C,GAaoG,IAbpG,CAY4CA,WAZ5C;AAAA,UAYwDK,YAZxD,GAaoG,IAbpG,CAYwDA,YAZxD;AAAA,UAYqEhC,WAZrE,GAaoG,IAbpG,CAYqEA,WAZrE;AAAA,UAYiFiD,aAZjF,GAaoG,IAbpG,CAYiFA,aAZjF;AAAA,UAaJhB,WAbI,GAaoG,IAbpG,CAaJA,WAbI;AAAA,UAaQO,gBAbR,GAaoG,IAbpG,CAaQA,gBAbR;AAAA,UAayBE,gBAbzB,GAaoG,IAbpG,CAayBA,gBAbzB;AAAA,UAa0CC,eAb1C,GAaoG,IAbpG,CAa0CA,eAb1C;AAAA,UAa0DG,QAb1D,GAaoG,IAbpG,CAa0DA,QAb1D;AAAA,UAamEE,iBAbnE,GAaoG,IAbpG,CAamEA,iBAbnE;AAAA,UAaqF5C,WAbrF,GAaoG,IAbpG,CAaqFA,WAbrF;AAcJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE6D,QAApB;AAA8B,MAAA,gBAAgB,EAAID,gBAAlD;AAAoE,MAAA,MAAM,EAAInD,iBAA9E;AACA,MAAA,SAAS,EAAI7G,SADb;AACwB,MAAA,OAAO,EAAGF,OADlC;AAC2C,MAAA,QAAQ,EAAErB,QADrD;AAC+D,MAAA,QAAQ,EAAE0B,QADzE;AAEA,MAAA,SAAS,EAAIiK,SAFb;AAEwB,MAAA,WAAW,EAAIC,WAFvC;AAEqD,MAAA,WAAW,EAAE3H,iBAFlE;AAGC,MAAA,aAAa,EAAGgH,aAHjB;AAGgC,MAAA,OAAO,EAAEE,OAHzC;AAGkD,MAAA,QAAQ,EAAIjH,QAH9D;AAGwE,MAAA,IAAI,EAAIG,eAHhF;AAIC,MAAA,QAAQ,EAAEzC,IAJX;AAIiB,MAAA,WAAW,EAAIsJ,WAJhC;AAI6C,MAAA,KAAK,EAAI9K,WAJtD;AAImE,MAAA,aAAa,EAAI2E,aAJpF;AAKC,MAAA,QAAQ,EAAEtE,UALX;AAKuB,MAAA,KAAK,EAAIgL,KALhC;AAKuC,MAAA,MAAM,EAAI5G,iBALjD;AAKoE,MAAA,QAAQ,EAAIF,QALhF;AAMC,MAAA,YAAY,EAAIkB,YANjB;AAM+B,MAAA,gBAAgB,EAAEF,gBANjD;AAMmE,MAAA,eAAe,EAAEkG,eANpF;AAOC,MAAA,UAAU,EAAI7E,UAPf;AAO2B,MAAA,WAAW,EAAEO,WAPxC;AAOqD,MAAA,WAAW,EAAII,WAPpE;AAOiF,MAAA,WAAW,EAAEuB,WAP9F;AAQC,MAAA,YAAY,EAAIK,YARjB;AAQ+B,MAAA,WAAW,EAAE5B,WAR5C;AAQyD,MAAA,gBAAgB,EAAEoC,gBAR3E;AASC,MAAA,gBAAgB,EAAIE,gBATrB;AASuC,MAAA,eAAe,EAAEC,eATxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,EAaF,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAEG,QAArB;AAA+B,MAAA,KAAK,EAAE,KAAtC;AAA6C,MAAA,YAAY,EAAEE,iBAA3D;AACG,MAAA,IAAI,EAAEmB,SADT;AACoB,MAAA,OAAO,EAAEL,gBAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbE,EAeC,oBAAC,KAAD;AAAO,MAAA,aAAa,EAAIb,aAAxB;AAAuC,MAAA,OAAO,EAAEY,YAAhD;AAA8D,MAAA,IAAI,EAAEM,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfD,CADJ;AAmBH;;AA1boC;;AA4bzC,eAAe1N,OAAO,CACjB8N,KAAD,KAAY;AACRC,EAAAA,IAAI,EAAGD,KAAK,CAACC,IAAN,CAAWpJ,KAAX,CAAiB,CAAC,YAAD,EAAc,UAAd,CAAjB,CADC;AAERgJ,EAAAA,SAAS,EAAGG,KAAK,CAACE,MAAN,CAAapL,GAAb,CAAiB,WAAjB,CAFJ;AAGRO,EAAAA,MAAM,EAAG2K,KAAK,CAACE,MAAN,CAAapL,GAAb,CAAiB,QAAjB,CAHD;AAIRgL,EAAAA,WAAW,EAAGE,KAAK,CAACE,MAAN,CAAapL,GAAb,CAAiB,aAAjB,CAJN;AAKRW,EAAAA,SAAS,EAAGuK,KAAK,CAACG,QAAN,CAAerL,GAAf,CAAmB,WAAnB,CALJ;AAMRS,EAAAA,OAAO,EAAGyK,KAAK,CAACG,QAAN,CAAerL,GAAf,CAAmB,SAAnB,CANF;AAORZ,EAAAA,QAAQ,EAAG8L,KAAK,CAACG,QAAN,CAAerL,GAAf,CAAmB,UAAnB,CAPH;AAQRc,EAAAA,QAAQ,EAAGoK,KAAK,CAACG,QAAN,CAAerL,GAAf,CAAmB,UAAnB,CARH;AASRuK,EAAAA,OAAO,EAAGW,KAAK,CAACG,QAAN,CAAerL,GAAf,CAAmB,SAAnB,CATF;AAURqK,EAAAA,aAAa,EAAGa,KAAK,CAACG,QAAN,CAAerL,GAAf,CAAmB,eAAnB,CAVR;AAWRsD,EAAAA,QAAQ,EAAG4H,KAAK,CAACE,MAAN,CAAapL,GAAb,CAAiB,UAAjB,CAXH;AAYRgB,EAAAA,IAAI,EAAGkK,KAAK,CAACG,QAAN,CAAerL,GAAf,CAAmB,UAAnB,CAZC;AAaRd,EAAAA,IAAI,EAAGgM,KAAK,CAACG,QAAN,CAAerL,GAAf,CAAmB,MAAnB,CAbC;AAcRlB,EAAAA,UAAU,EAAGoM,KAAK,CAACG,QAAN,CAAerL,GAAf,CAAmB,YAAnB,CAdL;AAeRsK,EAAAA,WAAW,EAAGY,KAAK,CAACG,QAAN,CAAerL,GAAf,CAAmB,aAAnB,CAfN;AAgBR6K,EAAAA,KAAK,EAAGK,KAAK,CAACG,QAAN,CAAerL,GAAf,CAAmB,OAAnB,CAhBA;AAiBR+D,EAAAA,QAAQ,EAAGmH,KAAK,CAACI,IAAN,CAAWtL,GAAX,CAAe,UAAf,CAjBH;AAkBR4E,EAAAA,WAAW,EAAGsG,KAAK,CAACzK,OAAN,CAAcT,GAAd,CAAkB,aAAlB,CAlBN;AAmBR+F,EAAAA,UAAU,EAAGmF,KAAK,CAACzK,OAAN,CAAcT,GAAd,CAAkB,YAAlB,CAnBL;AAoBRiL,EAAAA,eAAe,EAAGC,KAAK,CAACG,QAAN,CAAerL,GAAf,CAAmB,iBAAnB,CApBV;AAqBRyE,EAAAA,cAAc,EAAGyG,KAAK,CAACG,QAAN,CAAerL,GAAf,CAAmB,gBAAnB,CArBT;AAsBRuL,EAAAA,MAAM,EAAGL,KAAK,CAACM,IAAN,CAAWxL,GAAX,CAAe,QAAf,CAtBD;AAuBRkG,EAAAA,cAAc,EAAGgF,KAAK,CAACzK,OAAN,CAAcT,GAAd,CAAkB,gBAAlB,CAvBT;AAwBR6E,EAAAA,WAAW,EAAGqG,KAAK,CAACzK,OAAN,CAAcT,GAAd,CAAkB,aAAlB,CAxBN;AAyBRiI,EAAAA,UAAU,EAAGiD,KAAK,CAACO,QAAN,CAAezL,GAAf,CAAmB,QAAnB,CAzBL;AA0BRyK,EAAAA,gBAAgB,EAAGS,KAAK,CAACM,IAAN,CAAWxL,GAAX,CAAe,kBAAf,CA1BX;AA2BR8K,EAAAA,SAAS,EAAGI,KAAK,CAACM,IAAN,CAAWxL,GAAX,CAAe,WAAf,CA3BJ;AA4BRqH,EAAAA,OAAO,EAAG6D,KAAK,CAACM,IAAN,CAAWxL,GAAX,CAAe,SAAf,CA5BF;AA6BRwK,EAAAA,YAAY,EAAGU,KAAK,CAACM,IAAN,CAAWxL,GAAX,CAAe,cAAf,CA7BP;AA8BR0J,EAAAA,aAAa,EAAGwB,KAAK,CAACM,IAAN,CAAWxL,GAAX,CAAe,eAAf;AA9BR,CAAZ,CADkB,EAkCjB0L,QAAD,KAAe;AACX3L,EAAAA,aAAa,EAAE1C,kBAAkB,CAACK,aAAD,EAAgBgO,QAAhB,CADtB;AAEX1M,EAAAA,eAAe,EAAG3B,kBAAkB,CAACM,eAAD,EAAiB+N,QAAjB,CAFzB;AAGXhI,EAAAA,WAAW,EAAGrG,kBAAkB,CAACO,WAAD,EAAa8N,QAAb,CAHrB;AAIXtH,EAAAA,cAAc,EAAG/G,kBAAkB,CAACW,cAAD,EAAgB0N,QAAhB,CAJxB;AAKXrF,EAAAA,WAAW,EAAGhJ,kBAAkB,CAACQ,WAAD,EAAa6N,QAAb,CALrB;AAMX9E,EAAAA,WAAW,EAAGvJ,kBAAkB,CAACS,WAAD,EAAa4N,QAAb,CANrB;AAOXhE,EAAAA,eAAe,EAAGrK,kBAAkB,CAACY,eAAD,EAAiByN,QAAjB;AAPzB,CAAf,CAlCkB,CAAP,CA4CbxN,iBA5Ca,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport PageWrapper from '../../components/PageWrapper';\r\nimport {FeedList} from '../../components/Timeline';\r\nimport {PostPopup,Popup} from '../../components/Popup';\r\nimport * as friendActions from '../../redux/modules/friend';\r\nimport * as timelineActions from '../../redux/modules/timeline';\r\nimport * as likeActions from '../../redux/modules/like';\r\nimport * as baseActions from '../../redux/modules/base';\r\nimport * as postActions from '../../redux/modules/post';\r\nimport storage from '../../lib/storage';\r\nimport * as commentActions from '../../redux/modules/comment';\r\nimport * as userPageActions from '../../redux/modules/userPage';\r\nclass TimelineContainer extends Component{\r\n    \r\n    handleScroll = async(e) => {\r\n        const scrollTop =e.srcElement.scrollingElement.scrollTop;\r\n        const { innerHeight } = window;\r\n      const { scrollHeight } = document.body;\r\n    \r\n      if (scrollTop+innerHeight >scrollHeight && this.props.isTruePost ) {\r\n         this.getFeedList();\r\n         await this.props.TimelineActions.addPage();\r\n        }\r\n    }\r\n      getFeedList = async() => {\r\n        const{TimelineActions,page,isTruePost,userid} = this.props;\r\n        var username = userid.substr(1);\r\n        if(isTruePost){\r\n            try{\r\n                 await TimelineActions.getTimelineInformation(username,page);\r\n            }catch(e){\r\n                await TimelineActions.setFalsePost();\r\n            }\r\n            \r\n            \r\n        }\r\n    }\r\n    overHashTag = (e) =>{\r\n        const {TimelineActions} = this.props;\r\n        TimelineActions.setHashDisplay('block');\r\n        TimelineActions.setKey(e.target.id);\r\n    }\r\n    outHashTag = () =>{\r\n        const {TimelineActions} = this.props;\r\n        TimelineActions.setHashDisplay('none');\r\n    }\r\n\r\n    handleTimeline =async()=>{\r\n        const {TimelineActions,FriendActions,userid} = this.props;\r\n        var id = userid.substr(1);\r\n        const {username} = storage.get('loggedInfo');\r\n        if(username === id)TimelineActions.setFollowDisplay('none');\r\n        else TimelineActions.setFollowDisplay('block');\r\n        try{\r\n        await FriendActions.getOtherInfoNum(id);\r\n        await TimelineActions.getTimelinePostNum(id);\r\n        await FriendActions.notifyIsFollowUser(id);\r\n        }catch(e){\r\n            console.log(e);\r\n            \r\n        }\r\n        const{result} = this.props;\r\n        TimelineActions.setComment(result.comment);\r\n        TimelineActions.setThumbnail(result.thumbnail);\r\n        TimelineActions.setUsername(result.username);\r\n        TimelineActions.setNickname(result.nickname);\r\n        \r\n\r\n    }\r\n\r\n    setTime = async() => {\r\n        const{data,TimelineActions} = this.props;\r\n                await Promise.all(\r\n                    data.map(\r\n                        async(feed,index) => {\r\n                            let time = feed.get('timestamp');\r\n                            let timestring = this.dateTimeToFormatted(time);\r\n                            await TimelineActions.setTimelineTime({timestring:timestring,index : index});\r\n                        }\r\n                    )\r\n                );\r\n    }\r\n    setCommentTime = async(id) => {\r\n        const{data,TimelineActions} = this.props;\r\n        let index = data.findIndex(item => item.get('postId')===parseInt(id));\r\n        const comments = data.getIn([index,'commentList']);\r\n                await Promise.all(\r\n                    comments.map(\r\n                        async(comment,commentIndex) => {\r\n                            let time = comment.timestamp;\r\n                            let timestring = this.dateTimeToFormatted(time);\r\n                            await TimelineActions.setTimelineCommentTime({timestring:timestring,index : index,commentIndex:commentIndex});\r\n                        }\r\n                    )\r\n                );\r\n    }\r\n    dateTimeToFormatted=(dt)=> {\r\n\t\tconst min = 60 * 1000;\r\n\t\tconst c = new Date();\r\n\t\tvar d = new Date(dt);\r\n\t\tvar minsAgo = Math.floor((c - d) / (min));\r\n\r\n\t\tvar result = {\r\n            'raw': d.getFullYear() + '-' + (d.getMonth() + 1 > 9 ? '' : '0') + (d.getMonth() + 1) \r\n            + '-' + (d.getDate() > 9 ? '' : '0') +  d.getDate() + ' ' + (d.getHours() > 9 ? '' : '0') \r\n            +  d.getHours() + ':' + (d.getMinutes() > 9 ? '' : '0') +  d.getMinutes() + ':'  \r\n            + (d.getSeconds() > 9 ? '' : '0') +  d.getSeconds(),\r\n            'month' : d.getFullYear() + '-' + (d.getMonth() + 1 > 9 ? '' : '0') + (d.getMonth() + 1) \r\n            + '-' + (d.getDate() > 9 ? '' : '0') +  d.getDate(),\r\n\t\t\t'formatted': ''\r\n\t\t};\r\n\r\n\t\tif (minsAgo < 60) { // 1시간 내\r\n\t\t\tresult.formatted = minsAgo + '분 전';\r\n\t\t} else if (minsAgo < 60 * 24) { // 하루 내\r\n\t\t\tresult.formatted = Math.floor(minsAgo / 60) + '시간 전';\r\n\t\t} else if(minsAgo < 60 * 24 * 30) { // 하루 이상\r\n\t\t\tresult.formatted = Math.floor(minsAgo / 60 / 24) + '일 전';\r\n\t\t} else{\r\n            result.formatted = result.month;\r\n        }\r\n\t\treturn result.formatted;\r\n\t};\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        return prevProps.userid !== this.props.userid || prevProps.data !== this.props.data;\r\n    }\r\n   componentDidUpdate(prevProps, prevState, snapshot){\r\n        \r\n        if(snapshot && prevProps.userid !== this.props.userid){\r\n        const {handleTimeline} = this;\r\n        handleTimeline();\r\n        }\r\n        else if(snapshot && prevProps.data !== this.props.data){\r\n            this.setTime();\r\n        }\r\n    }\r\n    \r\n    componentDidMount=async()=>{\r\n        const {handleTimeline} = this;\r\n        window.addEventListener(\"scroll\", this.handleScroll);\r\n        await this.getFeedList();\r\n        await this.props.TimelineActions.addPage();\r\n        await handleTimeline();\r\n    }\r\n    handleFollowClick =async()=>{\r\n        const {FriendActions,isfollow,userid} = this.props;\r\n        const id = userid.substr(1);\r\n        if(isfollow === '팔로우')\r\n            await FriendActions.follow(id);\r\n        else\r\n            await FriendActions.unfollow({'friendId': id});\r\n        await FriendActions.getOtherInfoNum(id);\r\n    }\r\n    handleLikeClick = async(e) =>{\r\n        const {LikeActions,TimelineActions} = this.props;\r\n        const id = e.target.id;\r\n        await TimelineActions.setLikeKey(id);\r\n        await LikeActions.clickLike(id);\r\n        await TimelineActions.setTimelineLike('none');\r\n        try{\r\n        await LikeActions.getLikeAndUserList(id,1);\r\n        }catch(e){}\r\n        const {totalNum} = this.props;\r\n        await TimelineActions.setTimelineLikeNum(totalNum);\r\n           \r\n    }\r\n    handleCancelClick =async(e) => {\r\n        const {LikeActions,TimelineActions} = this.props;\r\n        const id = e.target.id;\r\n        await TimelineActions.setLikeKey(id);\r\n        await LikeActions.cancelLike(id);\r\n        await TimelineActions.setTimelineLike('block');\r\n        try{\r\n        await LikeActions.getLikeAndUserList(id,1);\r\n        }catch(e){}\r\n        const {totalNum} = this.props;\r\n        await TimelineActions.setTimelineLikeNum(totalNum);\r\n    }\r\n    handleComment =async(e)=>{\r\n        const {CommentActions,TimelineActions,data} = this.props;\r\n        const {id} = e.target;\r\n        const {category} = e.target.dataset;\r\n        await TimelineActions.setCommentCategory(category);\r\n        await TimelineActions.setTimelineCommentDisplay(id);\r\n        const{commentdisplay} = this.props;\r\n        if(commentdisplay === 'block'){\r\n            let index = data.findIndex(item => item.get('postId')===parseInt(id));\r\n            let page = data.getIn([index,'commentPage']);\r\n            await CommentActions.showPostCommentList(id,page);\r\n            await TimelineActions.setTimelineCommentPage(id);\r\n            const{commentList,lastComment}=this.props;\r\n            if(lastComment)\r\n            await TimelineActions.setTimelineCommentList({'commentId' : id,'commentList':commentList,'trueComment' :false});\r\n            else\r\n            await TimelineActions.setTimelineCommentList({'commentId' : id,'commentList':commentList,'trueComment' :true});\r\n            await this.setCommentTime(id);\r\n        }\r\n    }\r\n    handleCommentAdd = async(e) =>{\r\n        const {id} = e.target;\r\n        const {TimelineActions,CommentActions,data} = this.props;\r\n        const index = data.findIndex(item => item.get('postId') ===parseInt(id));\r\n        if(data.getIn([index,'trueComment'])){\r\n            \r\n            const page = data.getIn([index,'commentPage']);\r\n            try{\r\n                await CommentActions.showPostCommentList(id,page);\r\n                await TimelineActions.setTimelineCommentPage(id);\r\n                const{commentList,lastComment}=this.props;\r\n            if(lastComment)\r\n            await TimelineActions.setTimelineCommentList({'commentId':id,'commentList':commentList,'trueComment' :false});\r\n            else\r\n            await TimelineActions.setTimelineCommentList({'commentId':id,'commentList':commentList,'trueComment' :true});\r\n            await this.setCommentTime(id);\r\n            }catch(e){\r\n                TimelineActions.setTimelineCommentFalse(id);\r\n            }\r\n        } \r\n    }\r\n    enterComment = async(e) =>{\r\n        if(window.event.keyCode === 13){\r\n            const {CommentActions,TimelineActions} = this.props;\r\n            const {innerText,id} = e.target;\r\n            console.log(id);\r\n            var content = innerText;\r\n            content = content.replace(/\\r/g, \"\");\r\n            content = content.replace(/\\n/g, \"\");\r\n            await CommentActions.writeComment({id,content});\r\n            await CommentActions.showPostCommentList(id,1);\r\n            this.renewComment(id);\r\n            for(var i = 0; i < document.getElementsByName('^^comment').length; i++){\r\n                if(parseInt(document.getElementsByName('^^comment')[i].id) === parseInt(id)){\r\n                    document.getElementsByName('^^comment')[i].textContent = '';\r\n                    document.getElementsByName('^^comment')[i].blur();\r\n                }\r\n            }\r\n            await CommentActions.getCommentNum(id);\r\n            var {commentNum} = this.props;\r\n            await TimelineActions.setTimelineCommentNum({'commentNum':commentNum,'commentId':id});\r\n            await this.setCommentTime(id);\r\n            \r\n        }\r\n    }\r\n    renewComment=(id)=>\r\n        setTimeout(async()=>{\r\n            const {presentComment,TimelineActions} = this.props;\r\n            await TimelineActions.renewTimelineComment({'commentId' : id,'presentComment':presentComment});\r\n            await this.setCommentTime(id);\r\n        },2000);\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props.data !== nextProps.data || this.props.result !== nextProps.result || \r\n        this.props.followDisplay !== nextProps.followDisplay || this.props.comment !== nextProps.comment ||\r\n        this.props.username !== nextProps.username || this.props.nickname !== nextProps.nickname || \r\n        this.props.thumbnail !== nextProps.thumbnail || this.props.hashdisplay !== nextProps.hashdisplay\r\n        || this.props.postNum !== nextProps.postNum || this.props.popupDisplay !== nextProps.popupDisplay ||\r\n         this.props.postPopupDisplay !== nextProps.postPopupDisplay;\r\n    }\r\n\r\n    handleMenu = (e) => {\r\n        const {data,TimelineActions,BaseActions} = this.props;\r\n        const {id} = e.target;\r\n        const index = data.findIndex(item => item.get('postId')===parseInt(id));\r\n        if(data.getIn([index,'modifyVisible']) === 'block') return;\r\n        if(data.getIn([index,'menuVisible']) === 'none'){\r\n            TimelineActions.setShowMenuVisible({'index':index, 'visible':'none'});\r\n            BaseActions.setFollowMenuVisible('none');\r\n            BaseActions.setAlarmMenuVisible('none');\r\n            BaseActions.setUserMenuVisibility(false);\r\n            TimelineActions.setMenuVisible({'index':index, 'visible':'block'});\r\n        }\r\n        else{\r\n            TimelineActions.setMenuVisible({'index':index, 'visible':'none'});\r\n        }\r\n        \r\n    }\r\n\r\n    modifyClick = async(e) => {\r\n        const {id} = e.target;\r\n        const {data,TimelineActions,PostActions} = this.props;\r\n        const index = data.findIndex(item => item.get('postId')===parseInt(id));\r\n        \r\n        await TimelineActions.setMenuVisible({'index':index, 'visible':'none'});\r\n        await TimelineActions.setModifyVisible({'index' : index,'visible' : 'inline-block'});\r\n    }\r\n    get = (type) => {\r\n        return {\r\n            'modify' : '수정하시겠습니까?',\r\n            'delete' : '삭제하시겠습니까?'\r\n        }[type];\r\n    }\r\n    buttonClick = (e) => {\r\n        const {PostActions,TimelineActions,data} = this.props;\r\n        const {id} = e.target;\r\n        const {category} = e.target.dataset;\r\n        const index = data.findIndex(item => item.get('postId')===parseInt(id));\r\n        TimelineActions.setMenuVisible({'index':index, 'visible':'none'});\r\n        PostActions.setPopupId(id);\r\n        PostActions.setPostPopupDisplay('block');\r\n        PostActions.setPopupCategory(category);\r\n        PostActions.setPopupText(this.get(category));\r\n    }\r\n    deleteClick = async() => {\r\n        const {PostActions,TimelineActions,data,userid,popupId} = this.props;\r\n        const index = data.findIndex(item => item.get('postId')===parseInt(popupId));\r\n        const userId = userid.substr(1);\r\n        try{\r\n            await PostActions.deleteFeed(popupId);\r\n            await TimelineActions.deleteFeed(index);\r\n            await TimelineActions.getTimelinePostNum(userId);\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    handleImageChange = async(e) => {\r\n        e.preventDefault();\r\n        const {UserPageActions} = this.props;\r\n        let file = e.target.files[0];\r\n        var formdata = new FormData();\r\n        formdata.set('file',file);\r\n        await UserPageActions.modifyUserImage(formdata);\r\n        const {userResult} = this.props;\r\n        console.log(userResult.toJS());\r\n        storage.remove('loggedInfo');\r\n        storage.set('loggedInfo',userResult.toJS());\r\n        window.location.reload();\r\n      }\r\n\r\n      handleImage =(e) =>{\r\n        const {id} = e.target;\r\n        const {imageid} = e.target.dataset;\r\n        this.props.history.push(`/feed/@:${id}/image/:${imageid}`);\r\n    }\r\n    unavailableModify =(index,id) => {\r\n        const {TimelineActions,data} = this.props;\r\n        for(var i = 0; i < document.getElementsByName('^^content').length; i++){\r\n            if(parseInt(document.getElementsByName('^^content')[i].id) === parseInt(id)){\r\n                document.getElementsByName('^^content')[i].textContent = data.getIn([index,'content']);\r\n                document.getElementsByName('^^content')[i].blur();\r\n            }\r\n        }\r\n        TimelineActions.setModifyVisible({'index' : index,'visible' : 'none'});\r\n    }\r\n    handleCancel = (e) => {\r\n        const {id} = e.target;\r\n        const {TimelineActions,data,PostActions} = this.props;\r\n        const index = data.findIndex(item => item.get('postId')===parseInt(id));\r\n        this.unavailableModify(index,id);\r\n    }\r\n    handleWrite = async() => {\r\n        const {TimelineActions,data,PostActions,popupId} = this.props;\r\n        const index = data.findIndex(item => item.get('postId')===parseInt(popupId));\r\n        let showLevel = data.getIn([index,'showLevel']);\r\n        try{\r\n        await PostActions.modifyFeedInformation({'showLevel' : showLevel, 'postId' : popupId, 'content' : data.getIn([index,'modifyText'])});\r\n        }catch(e){\r\n            if(e.response.status === 409){\r\n                PostActions.setPopupText('글은 1000자 이하여야 합니다. 다시 입력해주세요.');\r\n                PostActions.setPopupDisplay('block');\r\n                return;\r\n            }\r\n        }\r\n        this.unavailableModify(index,popupId);\r\n        TimelineActions.setFeedContext({'index': index,'text': data.getIn([index,'modifyText'])});\r\n        }\r\n        handleWriteInput = (e) => {\r\n            const {id,innerText} = e.target;\r\n            const {TimelineActions,data,PostActions} = this.props;\r\n            const index = data.findIndex(item => item.get('postId')===parseInt(id));\r\n            TimelineActions.setModifyText({'index' : index, 'modifyText' : innerText});\r\n        }\r\n        \r\n        handleViewChange = (e) => {\r\n            const {id} = e.target;\r\n            const {TimelineActions,data,BaseActions} = this.props;\r\n            const index = data.findIndex(item => item.get('postId')===parseInt(id));\r\n        if(data.getIn([index,'showMenuVisible']) === 'none'){\r\n            TimelineActions.setShowMenuVisible({'index':index, 'visible':'block'});\r\n            BaseActions.setFollowMenuVisible('none');\r\n            BaseActions.setAlarmMenuVisible('none');\r\n            BaseActions.setUserMenuVisibility('none');\r\n            TimelineActions.setMenuVisible({'index':index, 'visible':'none'});\r\n        }\r\n        else{\r\n            TimelineActions.setShowMenuVisible({'index':index, 'visible':'none'});\r\n        }\r\n        }\r\n        handleShowLevel = async(e) => {\r\n            const {id} = e.target;\r\n            const {postid} = e.target.dataset;\r\n            console.log(postid);\r\n            const {data,PostActions,TimelineActions} = this.props;\r\n            const index = data.findIndex(item => item.get('postId')===parseInt(postid));\r\n            try{\r\n            await PostActions.modifyFeedInformation({'showLevel' : id, 'postId' : postid, 'content' : data.getIn([index,'content'])});\r\n            }catch(e){\r\n\r\n            }\r\n            TimelineActions.setFeedShowlevel({'index':index,'showLevel':id});\r\n            TimelineActions.setShowMenuVisible({'index':index, 'visible':'none'});\r\n        }\r\n\r\n        handleOk = () => {\r\n            const {popupCategory,PostActions} = this.props;\r\n            PostActions.setPostPopupDisplay('none');\r\n            if(popupCategory === 'modify')\r\n                this.handleWrite();\r\n\r\n            if(popupCategory === 'delete')\r\n                this.deleteClick();\r\n        }\r\n        handlePopupCancel = () => {\r\n        const {PostActions} = this.props;\r\n        PostActions.setPostPopupDisplay('none');\r\n        }\r\n        handlePopupOk = () => {\r\n            const {PostActions} = this.props;\r\n        PostActions.setPopupDisplay('none');\r\n        }\r\n\r\n    render(){\r\n        \r\n        const {data} = this.props;\r\n        if(!storage.get('loggedInfo')) {\r\n            \r\n            return null;\r\n        }\r\n        const commentThumbnail = storage.get('loggedInfo').thumbnail; \r\n        const hostUser = storage.get('loggedInfo').username;\r\n        const {hashdisplay,keyid,totalNum,postPopupDisplay,popupText,popupDisplay} = this.props;\r\n        const {followNum,followerNum,thumbnail,comment,username,nickname,postNum,followDisplay,isfollow,commentCategory} = this.props;\r\n        const {handleFollowClick,overHashTag,outHashTag,handleLikeClick,handleCancelClick,enterComment,handleCommentAdd\r\n            ,handleComment,handleMenu,handleImageChange,handleImage,handleCancel,modifyClick,handlePopupOk,\r\n        handleWrite,handleWriteInput,handleViewChange,handleShowLevel,handleOk,handlePopupCancel,buttonClick} = this;\r\n        return(\r\n            <div>\r\n            <PageWrapper>\r\n            <FeedList hostUser={hostUser} commentThumbnail = {commentThumbnail} change = {handleImageChange}\r\n            thumbnail = {thumbnail} comment ={comment} username={username} nickname={nickname}\r\n            followNum = {followNum} followerNum = {followerNum}  followclick={handleFollowClick}\r\n             followdisplay ={followDisplay} postNum={postNum} isfollow = {isfollow} like = {handleLikeClick}\r\n             mainfeed={data} hashdisplay = {hashdisplay} hover = {overHashTag} handleComment = {handleComment}\r\n             nothover={outHashTag} keyid = {keyid} cancel = {handleCancelClick} totalNum = {totalNum}\r\n             enterComment = {enterComment} handleCommentAdd={handleCommentAdd} commentCategory={commentCategory}\r\n             handleMenu = {handleMenu} modifyClick={modifyClick} deleteClick = {buttonClick} handleImage={handleImage}\r\n             handleCancel = {handleCancel} handleWrite={buttonClick} handleWriteInput={handleWriteInput} \r\n             handleViewChange = {handleViewChange} handleShowLevel={handleShowLevel}/>\r\n          </PageWrapper>\r\n          <PostPopup handleOk={handleOk} right={'40%'} handleCancel={handlePopupCancel}\r\n             text={popupText} display={postPopupDisplay} />\r\n             <Popup handlePopupOk = {handlePopupOk} display={popupDisplay} text={popupText} />\r\n          </div>\r\n            );\r\n    }\r\n}\r\nexport default connect(\r\n    (state) => ({\r\n        user : state.user.getIn(['loggedInfo','username']),\r\n        followNum : state.friend.get('followNum'),\r\n        result : state.friend.get('result'),\r\n        followerNum : state.friend.get('followerNum'),\r\n        thumbnail : state.timeline.get('thumbnail'),\r\n        comment : state.timeline.get('comment'),\r\n        username : state.timeline.get('username'),\r\n        nickname : state.timeline.get('nickname'),\r\n        postNum : state.timeline.get('postNum'),\r\n        followDisplay : state.timeline.get('followdisplay'),\r\n        isfollow : state.friend.get('isFollow'),\r\n        data : state.timeline.get('mainfeed'),\r\n        page : state.timeline.get('page'),\r\n        isTruePost : state.timeline.get('isTruePost'),\r\n        hashdisplay : state.timeline.get('hashdisplay'),\r\n        keyid : state.timeline.get('keyid'),\r\n        totalNum : state.like.get('totalNum'),\r\n        commentList : state.comment.get('commentList'),\r\n        commentNum : state.comment.get('commentNum'),\r\n        commentCategory : state.timeline.get('commentCategory'),\r\n        commentdisplay : state.timeline.get('commentdisplay'),\r\n        postId : state.post.get('postId'),\r\n        presentComment : state.comment.get('presentComment'),\r\n        lastComment : state.comment.get('lastComment'),\r\n        userResult : state.userPage.get('result'),\r\n        postPopupDisplay : state.post.get('postPopupDisplay'),\r\n        popupText : state.post.get('popupText'),\r\n        popupId : state.post.get('popupId'),\r\n        popupDisplay : state.post.get('popupDisplay'),\r\n        popupCategory : state.post.get('popupCategory')\r\n\r\n    }),\r\n    (dispatch) => ({\r\n        FriendActions: bindActionCreators(friendActions, dispatch),\r\n        TimelineActions : bindActionCreators(timelineActions,dispatch),\r\n        LikeActions : bindActionCreators(likeActions,dispatch),\r\n        CommentActions : bindActionCreators(commentActions,dispatch),\r\n        BaseActions : bindActionCreators(baseActions,dispatch),\r\n        PostActions : bindActionCreators(postActions,dispatch),\r\n        UserPageActions : bindActionCreators(userPageActions,dispatch)\r\n\r\n    })\r\n)(TimelineContainer);"]},"metadata":{},"sourceType":"module"}