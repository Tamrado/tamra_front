{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{Map,List,fromJS}from'immutable';import{handleActions,createAction}from'redux-actions';import{pender}from'redux-pender';import*as FriendAPI from'../../lib/api/friend';var GET_FRIENDLIST_INFO='friend/GET_FRIENDLIST_INFO';var GET_FRIEND_ALARM_INFO='friend/GET_FRIEND_ALARM_INFO';var DELETE_FRIEND_ALARM_NOTIFICATION='friend/DELETE_FRIEND_ALARM_NOTIFICATION';var FOLLOW='friend/FOLLOW';var GET_MY_INFO_NUM='friend/GET_MY_INFO_NUM';var GET_OTHER_INFO_NUM='friend/GET_OTHER_INFO_NUM';var NOTIFY_IS_FOLLOW_USER='friend/NOTIFY_IS_FOLLOW_USER';var UNFOLLOW='friend/UNFOLLOW';export var unfollow=createAction(UNFOLLOW,FriendAPI.unfollow);export var notifyIsFollowUser=createAction(NOTIFY_IS_FOLLOW_USER,FriendAPI.notifyIsFollowUser);export var getFriendAlarmInfo=createAction(GET_FRIEND_ALARM_INFO,FriendAPI.getFriendAlarmInfo);export var getFriendListInfo=createAction(GET_FRIENDLIST_INFO,FriendAPI.getFriendListInfo);export var deleteFriendAlarmNotification=createAction(DELETE_FRIEND_ALARM_NOTIFICATION,FriendAPI.deleteFriendAlarmNotification);export var follow=createAction(FOLLOW,FriendAPI.follow);export var getMyInfoNum=createAction(GET_MY_INFO_NUM,FriendAPI.getMyfInfoNum);export var getOtherInfoNum=createAction(GET_OTHER_INFO_NUM,FriendAPI.getOtherInfoNum);var initialState=Map({friend:List(),alarm:List(),result:Map({}),friendRequestNum:0,alarmRequestNum:0,followNum:0,followerNum:0,isFollow:''});export default handleActions(_objectSpread({},pender({type:NOTIFY_IS_FOLLOW_USER,onSuccess:function onSuccess(state,action){return state.set('isFollow','팔로잉');},onFailure:function onFailure(state,action){return state.set('isFollow','팔로우');}}),{},pender({type:FOLLOW,onSuccess:function onSuccess(state,action){return state.set('isFollow','팔로잉');}}),{},pender({type:UNFOLLOW,onSuccess:function onSuccess(state,action){return state.set('isFollow','팔로우');}}),{},pender({type:GET_MY_INFO_NUM,onSuccess:function onSuccess(state,action){return state.set('followNum',action.payload.data.followNum).set('followerNum',action.payload.data.followerNum);}}),{},pender({type:GET_OTHER_INFO_NUM,onSuccess:function onSuccess(state,action){return state.set('followNum',action.payload.data.followInfo.followNum).set('followerNum',action.payload.data.followInfo.followerNum).set('result',action.payload.data.userInfo);}}),{},pender({type:GET_FRIEND_ALARM_INFO,onSuccess:function onSuccess(state,action){return state.set('alarm',fromJS(action.payload.data)).set('friendRequestNum',fromJS(action.payload.data).size);},onFailure:function onFailure(state,action){return state.set('alarm',List()).set('friendRequestNum',0);}}),{},pender({type:GET_FRIENDLIST_INFO,onSuccess:function onSuccess(state,action){return state.set('friend',fromJS(action.payload.data));}}),{},pender({type:DELETE_FRIEND_ALARM_NOTIFICATION,onSuccess:function onSuccess(state,action){return state.set('result',fromJS(action.payload.data));}})),initialState);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/redux/modules/friend.js"],"names":["Map","List","fromJS","handleActions","createAction","pender","FriendAPI","GET_FRIENDLIST_INFO","GET_FRIEND_ALARM_INFO","DELETE_FRIEND_ALARM_NOTIFICATION","FOLLOW","GET_MY_INFO_NUM","GET_OTHER_INFO_NUM","NOTIFY_IS_FOLLOW_USER","UNFOLLOW","unfollow","notifyIsFollowUser","getFriendAlarmInfo","getFriendListInfo","deleteFriendAlarmNotification","follow","getMyInfoNum","getMyfInfoNum","getOtherInfoNum","initialState","friend","alarm","result","friendRequestNum","alarmRequestNum","followNum","followerNum","isFollow","type","onSuccess","state","action","set","onFailure","payload","data","followInfo","userInfo","size"],"mappings":"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","sourcesContent":["import { Map,List,fromJS } from 'immutable';\r\nimport { handleActions, createAction } from 'redux-actions';\r\nimport {pender} from 'redux-pender';\r\nimport * as FriendAPI from '../../lib/api/friend';\r\n\r\nconst GET_FRIENDLIST_INFO= 'friend/GET_FRIENDLIST_INFO';\r\nconst GET_FRIEND_ALARM_INFO = 'friend/GET_FRIEND_ALARM_INFO';\r\nconst DELETE_FRIEND_ALARM_NOTIFICATION = 'friend/DELETE_FRIEND_ALARM_NOTIFICATION';\r\nconst FOLLOW = 'friend/FOLLOW';\r\nconst GET_MY_INFO_NUM = 'friend/GET_MY_INFO_NUM';\r\nconst GET_OTHER_INFO_NUM = 'friend/GET_OTHER_INFO_NUM';\r\nconst NOTIFY_IS_FOLLOW_USER = 'friend/NOTIFY_IS_FOLLOW_USER';\r\nconst UNFOLLOW = 'friend/UNFOLLOW';\r\n\r\nexport const unfollow = createAction(UNFOLLOW,FriendAPI.unfollow);\r\nexport const notifyIsFollowUser = createAction(NOTIFY_IS_FOLLOW_USER,FriendAPI.notifyIsFollowUser);\r\nexport const getFriendAlarmInfo = createAction(GET_FRIEND_ALARM_INFO,FriendAPI.getFriendAlarmInfo);\r\nexport const getFriendListInfo = createAction(GET_FRIENDLIST_INFO,FriendAPI.getFriendListInfo);\r\nexport const deleteFriendAlarmNotification = createAction(DELETE_FRIEND_ALARM_NOTIFICATION,FriendAPI.deleteFriendAlarmNotification);\r\nexport const follow = createAction(FOLLOW,FriendAPI.follow);\r\nexport const getMyInfoNum = createAction(GET_MY_INFO_NUM,FriendAPI.getMyfInfoNum);\r\nexport const getOtherInfoNum = createAction(GET_OTHER_INFO_NUM,FriendAPI.getOtherInfoNum);\r\nconst initialState = Map({\r\n    friend : List(),\r\n    alarm : List(),\r\n    result: Map({}),\r\n    friendRequestNum : 0,\r\n    alarmRequestNum : 0,\r\n    followNum : 0,\r\n    followerNum : 0,\r\n    isFollow : ''\r\n});\r\n\r\nexport default handleActions({\r\n    ...pender({\r\n        type : NOTIFY_IS_FOLLOW_USER,\r\n        onSuccess : (state,action) => state.set('isFollow','팔로잉'),\r\n        onFailure : (state,action) => state.set('isFollow','팔로우')\r\n        }),\r\n    ...pender({\r\n        type : FOLLOW,\r\n        onSuccess : (state,action) => state.set('isFollow','팔로잉')\r\n    }),\r\n    ...pender({\r\n        type : UNFOLLOW,\r\n        onSuccess : (state,action) => state.set('isFollow','팔로우')\r\n    }),\r\n    ...pender({\r\n        type : GET_MY_INFO_NUM,\r\n        onSuccess: (state,action) => state.set('followNum',action.payload.data.followNum)\r\n        .set('followerNum',action.payload.data.followerNum)\r\n    }),\r\n    ...pender({\r\n        type : GET_OTHER_INFO_NUM,\r\n        onSuccess: (state,action) => state.set('followNum',action.payload.data.followInfo.followNum)\r\n        .set('followerNum',action.payload.data.followInfo.followerNum).set('result',action.payload.data.userInfo)\r\n    }),\r\n    ...pender({\r\n        type: GET_FRIEND_ALARM_INFO,\r\n        onSuccess: (state,action) => state.set('alarm',fromJS(action.payload.data))\r\n        .set('friendRequestNum',fromJS(action.payload.data).size),\r\n        onFailure : (state,action) => state.set('alarm',List()).set('friendRequestNum',0)\r\n    }),\r\n    ...pender({\r\n        type: GET_FRIENDLIST_INFO,\r\n        onSuccess: (state,action) =>{ return state.set('friend',fromJS(action.payload.data));}\r\n    }),\r\n    ...pender({\r\n        type : DELETE_FRIEND_ALARM_NOTIFICATION,\r\n        onSuccess: (state,action) => {return state.set('result',fromJS(action.payload.data));}\r\n    })\r\n    }, initialState);"]},"metadata":{},"sourceType":"module"}