{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Auth\\\\KakaoRegister.js\";\nimport React, { Component } from 'react';\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink, AuthError, Label } from '../../components/Auth';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as authActions from '../../redux/modules/auth';\nimport { isEmail, isAlphanumeric, isLength } from 'validator';\nimport debounce from 'lodash/debounce';\nimport * as userActions from '../../redux/modules/user';\nimport storage from '../../lib/storage';\n\nclass KakaoRegister extends Component {\n  render() {\n    const _this$props = this.props,\n          error = _this$props.error,\n          errorId = _this$props.errorId;\n\n    const _this$props$form$toJS = this.props.form.toJS(),\n          email = _this$props$form$toJS.email,\n          comment = _this$props$form$toJS.comment;\n\n    const handleChange = this.handleChange,\n          handleLocalRegister = this.handleLocalRegister,\n          enterRegister = this.enterRegister;\n    return React.createElement(AuthContent, {\n      title: \"SIGN UP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(InputWithLabel, {\n      label: \"\\uC774\\uBA54\\uC77C\",\n      name: \"email\",\n      placeholder: \"timeline@naver.com\",\n      enter: enterRegister,\n      value: email,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), errorId === 'email' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uCF54\\uBA58\\uD2B8\",\n      name: \"comment\",\n      placeholder: \"\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4.\",\n      enter: enterRegister,\n      value: comment,\n      onChange: handleChange,\n      enter: enterRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), errorId === 'comment' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, error), React.createElement(AuthButton, {\n      onClick: handleLocalRegister,\n      enter: enterRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(RightAlignedLink, {\n      to: \"/auth/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC778\"));\n  }\n\n}\n\nexport default connect(state => ({\n  form: state.auth.getIn(['register', 'form']),\n  error: state.auth.getIn(['register', 'error']),\n  errorId: state.auth.getIn(['register', 'errorId']),\n  result: state.auth.get('result')\n}), dispatch => ({\n  AuthActions: bindActionCreators(authActions, dispatch),\n  UserActions: bindActionCreators(userActions, dispatch)\n}))(Register);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Auth/KakaoRegister.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","AuthError","Label","bindActionCreators","connect","authActions","isEmail","isAlphanumeric","isLength","debounce","userActions","storage","KakaoRegister","render","props","error","errorId","form","toJS","email","comment","handleChange","handleLocalRegister","enterRegister","state","auth","getIn","result","get","dispatch","AuthActions","UserActions","Register"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {AuthContent,InputWithLabel,AuthButton,RightAlignedLink,AuthError,Label} from '../../components/Auth';\r\nimport { bindActionCreators } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as authActions from '../../redux/modules/auth';\r\nimport {isEmail,isAlphanumeric,isLength} from 'validator';\r\nimport debounce from 'lodash/debounce';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport storage from '../../lib/storage';\r\n\r\nclass KakaoRegister extends Component{  \r\n    \r\nrender(){\r\n    const {error,errorId} = this.props;\r\n        const {email,comment} = this.props.form.toJS();\r\n        const {handleChange,handleLocalRegister,enterRegister} = this;\r\n    return(\r\n        <AuthContent title='SIGN UP'>\r\n                <InputWithLabel label = \"이메일\" name=\"email\" placeholder=\"timeline@naver.com\" enter = {enterRegister}\r\n                value = {email}\r\n                onChange={handleChange}/>\r\n                 {\r\n                    errorId === 'email' &&error && <AuthError>{error}</AuthError>\r\n                }               \r\n                <InputWithLabel label = \"코멘트\" name=\"comment\" placeholder=\"반갑습니다.\" enter = {enterRegister}\r\n                value = {comment} onChange={handleChange} enter = {enterRegister}/>\r\n                {\r\n                    errorId === 'comment' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <AuthButton onClick={handleLocalRegister} enter = {enterRegister}>회원가입</AuthButton>\r\n                <RightAlignedLink to=\"/auth/login\">로그인</RightAlignedLink>\r\n            </AuthContent>\r\n    );\r\n}\r\n}\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['register','form']),\r\n        error: state.auth.getIn(['register','error']),\r\n        errorId: state.auth.getIn(['register','errorId']),\r\n        result: state.auth.get('result')\r\n    }),\r\n    (dispatch)=>({\r\n        AuthActions : bindActionCreators(authActions,dispatch),\r\n        UserActions : bindActionCreators(userActions, dispatch)\r\n    })\r\n)(Register);"]},"metadata":{},"sourceType":"module"}