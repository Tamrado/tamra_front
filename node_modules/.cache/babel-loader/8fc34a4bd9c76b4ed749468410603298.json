{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _classCallCheck from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import{WithList}from'../../components/Post';import{bindActionCreators}from'redux';import*as postActions from'../../redux/modules/post';var WithListContainer=/*#__PURE__*/function(_Component){_inherits(WithListContainer,_Component);function WithListContainer(){var _getPrototypeOf2;var _this;_classCallCheck(this,WithListContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(WithListContainer)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={opacity:0.8};_this.closeWithBox=function(){_this.props.PostActions.setWithFriendDisplay('none');};_this.handleScroll=function(e){var scrollTop=e.srcElement.scrollingElement.scrollTop;_this.setState({opacity:0.8-scrollTop/800});if(_this.state.opacity<0){_this.closeWithBox();}};_this.handleFriendCancel=function _callee(e){var PostActions,id,count,withData;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:PostActions=_this.props.PostActions;id=e.target.id;count=0;_context.next=5;return _regeneratorRuntime.awrap(PostActions.removeFriend(id));case 5:withData=_this.props.withData;_context.next=8;return _regeneratorRuntime.awrap(withData.toJS().forEach(function(item){return count++;}));case 8:if(count>1){PostActions.setWithFriend(withData.toJS()[0].nickname+'님 외 '+String(count-1)+'명과 함께');}else if(count>0){PostActions.setWithFriend(withData.toJS()[0].nickname+'님과 함께');}else{PostActions.setWithDisplay('none');PostActions.setWithFriendDisplay('none');}case 9:case\"end\":return _context.stop();}}});};return _this;}_createClass(WithListContainer,[{key:\"componentDidMount\",value:function componentDidMount(){window.addEventListener(\"scroll\",this.handleScroll);}},{key:\"render\",value:function render(){var _this$props=this.props,withData=_this$props.withData,withfriendDisplay=_this$props.withfriendDisplay;var opacity=this.state.opacity;var closeWithBox=this.closeWithBox,handleFriendCancel=this.handleFriendCancel;return React.createElement(WithList,{friend:withData,opacity:opacity,display:withfriendDisplay,cancel:handleFriendCancel,close:closeWithBox});}}]);return WithListContainer;}(Component);export default connect(function(state){return{withData:state.post.get('friendInfo'),withfriendDisplay:state.post.get('withFriendDisplay')};},function(dispatch){return{PostActions:bindActionCreators(postActions,dispatch)};})(WithListContainer);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Base/WithListContainer.js"],"names":["React","Component","connect","WithList","bindActionCreators","postActions","WithListContainer","state","opacity","closeWithBox","props","PostActions","setWithFriendDisplay","handleScroll","e","scrollTop","srcElement","scrollingElement","setState","handleFriendCancel","id","target","count","removeFriend","withData","toJS","forEach","item","setWithFriend","nickname","String","setWithDisplay","window","addEventListener","withfriendDisplay","post","get","dispatch"],"mappings":"i6BAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,QAAR,KAAuB,uBAAvB,CACA,OAAQC,kBAAR,KAAiC,OAAjC,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,0BAA7B,C,GAEMC,CAAAA,iB,2aACFC,K,CAAS,CACLC,OAAO,CAAG,GADL,C,OAIPC,Y,CAAe,UAAM,CACjB,MAAKC,KAAL,CAAWC,WAAX,CAAuBC,oBAAvB,CAA4C,MAA5C,EAEH,C,OAKDC,Y,CAAe,SAACC,CAAD,CAAO,CACpB,GAAMC,CAAAA,SAAS,CAAED,CAAC,CAACE,UAAF,CAAaC,gBAAb,CAA8BF,SAA/C,CAEA,MAAKG,QAAL,CAAc,CACVV,OAAO,CAAG,IAAMO,SAAS,CAAG,GADlB,CAAd,EAGA,GAAG,MAAKR,KAAL,CAAWC,OAAX,CAAqB,CAAxB,CAA0B,CACvB,MAAKC,YAAL,GACF,CAEF,C,OAEHU,kB,CAAqB,iBAAML,CAAN,qJACXH,WADW,CACI,MAAKD,KADT,CACXC,WADW,CAEVS,EAFU,CAEJN,CAAC,CAACO,MAFE,CAEVD,EAFU,CAGbE,KAHa,CAGL,CAHK,kDAIXX,WAAW,CAACY,YAAZ,CAAyBH,EAAzB,CAJW,SAKXI,QALW,CAKC,MAAKd,KALN,CAKXc,QALW,kDAMXA,QAAQ,CAACC,IAAT,GAAgBC,OAAhB,CAAwB,SAAAC,IAAI,QAAIL,CAAAA,KAAK,EAAT,EAA5B,CANW,SAQjB,GAAGA,KAAK,CAAG,CAAX,CAAa,CACTX,WAAW,CAACiB,aAAZ,CAA0BJ,QAAQ,CAACC,IAAT,GAAgB,CAAhB,EAAmBI,QAAnB,CAA4B,MAA5B,CAAmCC,MAAM,CAACR,KAAK,CAAC,CAAP,CAAzC,CAAmD,OAA7E,EACH,CAFD,IAGK,IAAGA,KAAK,CAAG,CAAX,CAAa,CACdX,WAAW,CAACiB,aAAZ,CAA0BJ,QAAQ,CAACC,IAAT,GAAgB,CAAhB,EAAmBI,QAAnB,CAA4B,OAAtD,EACH,CAFI,IAGD,CACAlB,WAAW,CAACoB,cAAZ,CAA2B,MAA3B,EACApB,WAAW,CAACC,oBAAZ,CAAiC,MAAjC,EAEP,CAlBoB,8C,0GAfD,CAChBoB,MAAM,CAACC,gBAAP,CAAwB,QAAxB,CAAkC,KAAKpB,YAAvC,EACD,C,uCAkCK,iBACiC,KAAKH,KADtC,CACGc,QADH,aACGA,QADH,CACYU,iBADZ,aACYA,iBADZ,IAEG1B,CAAAA,OAFH,CAEc,KAAKD,KAFnB,CAEGC,OAFH,IAGGC,CAAAA,YAHH,CAGsC,IAHtC,CAGGA,YAHH,CAGgBU,kBAHhB,CAGsC,IAHtC,CAGgBA,kBAHhB,CAIJ,MACI,qBAAC,QAAD,EAAU,MAAM,CAAIK,QAApB,CAA8B,OAAO,CAAIhB,OAAzC,CAAkD,OAAO,CAAI0B,iBAA7D,CACC,MAAM,CAAIf,kBADX,CAC+B,KAAK,CAAEV,YADtC,EADJ,CAIH,C,+BAtD2BR,S,EAyDhC,cAAeC,CAAAA,OAAO,CAClB,SAACK,KAAD,QAAY,CACRiB,QAAQ,CAAGjB,KAAK,CAAC4B,IAAN,CAAWC,GAAX,CAAe,YAAf,CADH,CAERF,iBAAiB,CAAE3B,KAAK,CAAC4B,IAAN,CAAWC,GAAX,CAAe,mBAAf,CAFX,CAAZ,EADkB,CAKlB,SAACC,QAAD,QAAe,CACX1B,WAAW,CAAEP,kBAAkB,CAACC,WAAD,CAAcgC,QAAd,CADpB,CAAf,EALkB,CAAP,CASb/B,iBATa,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {WithList} from '../../components/Post';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as postActions from '../../redux/modules/post';\r\n\r\nclass WithListContainer extends Component{\r\n    state  = {\r\n        opacity : 0.8\r\n    };\r\n    \r\n      closeWithBox = () => {\r\n          this.props.PostActions.setWithFriendDisplay('none');\r\n          \r\n      }\r\n      \r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.handleScroll);\r\n      }\r\n      handleScroll = (e) => {\r\n        const scrollTop =e.srcElement.scrollingElement.scrollTop;\r\n        \r\n        this.setState({\r\n            opacity : 0.8 - scrollTop / 800\r\n        });\r\n        if(this.state.opacity < 0){\r\n           this.closeWithBox();\r\n        }\r\n     \r\n      }\r\n    \r\n    handleFriendCancel = async(e) => {\r\n        const{PostActions} = this.props;\r\n        const {id} = e.target;\r\n        let count = 0;\r\n        await PostActions.removeFriend(id);\r\n        const{withData} = this.props;\r\n        await withData.toJS().forEach(item => count++);\r\n       \r\n        if(count > 1){\r\n            PostActions.setWithFriend(withData.toJS()[0].nickname+'님 외 '+String(count-1)+'명과 함께');\r\n        }\r\n        else if(count > 0){\r\n            PostActions.setWithFriend(withData.toJS()[0].nickname+'님과 함께');\r\n        }\r\n        else{\r\n            PostActions.setWithDisplay('none'); \r\n            PostActions.setWithFriendDisplay('none');\r\n            \r\n    }\r\n    }\r\n\r\n    render(){\r\n        const {withData,withfriendDisplay} = this.props;\r\n        const {opacity} = this.state;\r\n        const {closeWithBox,handleFriendCancel} = this;\r\n        return(\r\n            <WithList friend = {withData} opacity = {opacity} display = {withfriendDisplay}\r\n             cancel = {handleFriendCancel} close={closeWithBox} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        withData : state.post.get('friendInfo'),\r\n        withfriendDisplay :state.post.get('withFriendDisplay')\r\n    }),\r\n    (dispatch) => ({\r\n        PostActions: bindActionCreators(postActions, dispatch)\r\n\r\n    })\r\n)(WithListContainer);"]},"metadata":{},"sourceType":"module"}