{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Base\\\\UserMenuContainer.js\";\nimport React, { Component } from 'react';\nimport { UserMenuItem, UserMenu, Username } from '../../components/UserMenu';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as baseActions from '../../redux/modules/base';\nimport * as userActions from '../../redux/modules/user';\nimport * as postActions from '../../redux/modules/post';\nimport { PostPopup } from '../../components/Popup';\nimport PropTypes from 'prop-types';\nimport storage from '../../lib/storage';\n\nclass UserMenuContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogoutButtonClick = () => {\n      const _this$props = this.props,\n            PostActions = _this$props.PostActions,\n            BaseActions = _this$props.BaseActions;\n      PostActions.setPostPopupDisplay('block');\n      PostActions.setPopupText('로그아웃하시겠습니까?');\n    };\n\n    this.handleLogout = async () => {\n      const UserActions = this.props.UserActions;\n\n      try {\n        await UserActions.logout();\n      } catch (e) {\n        console.log(e);\n      }\n\n      storage.remove('loggedInfo');\n      window.location.href = '/auth/Login';\n    };\n\n    this.handleCancel = async () => {\n      const _this$props2 = this.props,\n            PostActions = _this$props2.PostActions,\n            BaseActions = _this$props2.BaseActions;\n      PostActions.setPostPopupDisplay('none');\n      BaseActions.setUserMenuVisibility('none');\n    };\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          visible = _this$props3.visible,\n          username = _this$props3.username,\n          BaseActions = _this$props3.BaseActions,\n          postPopupDisplay = _this$props3.postPopupDisplay,\n          popupText = _this$props3.popupText;\n    const handleLogout = this.handleLogout,\n          handleLogoutButtonClick = this.handleLogoutButtonClick,\n          handleCancel = this.handleCancel;\n\n    if (visible === 'none') {\n      return null;\n    } else {\n      BaseActions.setFollowMenuVisible('none');\n      BaseActions.setAlarmMenuVisible('none');\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(UserMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Username, {\n      username: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(UserMenuItem, {\n      onClick: handleLogoutButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC544\\uC6C3\")), React.createElement(PostPopup, {\n      handleOk: handleLogout,\n      right: '40%',\n      handleCancel: handleCancel,\n      text: popupText,\n      display: postPopupDisplay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nUserMenuContainer.contextTypes = {\n  router: PropTypes.object\n};\nexport default connect(state => ({\n  visible: state.base.get('userMenuVisible'),\n  username: state.user.getIn(['loggedInfo', 'username']),\n  display: state.post.get('popupDisplay'),\n  postPopupDisplay: state.post.get('postPopupDisplay'),\n  popupText: state.post.get('popupText')\n}), dispatch => ({\n  BaseActions: bindActionCreators(baseActions, dispatch),\n  UserActions: bindActionCreators(userActions, dispatch),\n  PostActions: bindActionCreators(postActions, dispatch)\n}))(UserMenuContainer);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Base/UserMenuContainer.js"],"names":["React","Component","UserMenuItem","UserMenu","Username","connect","bindActionCreators","baseActions","userActions","postActions","PostPopup","PropTypes","storage","UserMenuContainer","handleLogoutButtonClick","props","PostActions","BaseActions","setPostPopupDisplay","setPopupText","handleLogout","UserActions","logout","e","console","log","remove","window","location","href","handleCancel","setUserMenuVisibility","render","visible","username","postPopupDisplay","popupText","setFollowMenuVisible","setAlarmMenuVisible","contextTypes","router","object","state","base","get","user","getIn","display","post","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {UserMenuItem,UserMenu, Username} from '../../components/UserMenu';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as baseActions from '../../redux/modules/base';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport * as postActions from '../../redux/modules/post';\r\nimport {PostPopup} from '../../components/Popup';\r\nimport PropTypes from 'prop-types';\r\nimport storage from '../../lib/storage';\r\nclass UserMenuContainer extends Component{\r\n\r\n    static contextTypes = {\r\n        router: PropTypes.object\r\n    }\r\n\r\n    handleLogoutButtonClick = () => {\r\n        const {PostActions,BaseActions} = this.props;\r\n        PostActions.setPostPopupDisplay('block');\r\n        PostActions.setPopupText('로그아웃하시겠습니까?');\r\n    }\r\n\r\n    handleLogout = async()=> {\r\n        const {UserActions} = this.props;\r\n\r\n        try{\r\n            await UserActions.logout();\r\n        }catch (e){\r\n            console.log(e);\r\n        }\r\n\r\n        storage.remove('loggedInfo');\r\n        window.location.href='/auth/Login';\r\n    }\r\n    handleCancel = async() => {\r\n        const {PostActions,BaseActions} = this.props;\r\n        PostActions.setPostPopupDisplay('none');\r\n        BaseActions.setUserMenuVisibility('none');\r\n    }\r\n\r\n    render(){\r\n        const{visible, username,BaseActions,postPopupDisplay,popupText} = this.props;\r\n        const {handleLogout,handleLogoutButtonClick,handleCancel} = this;\r\n\r\n        if(visible === 'none'){\r\n            return null;\r\n        }\r\n        else {\r\n            BaseActions.setFollowMenuVisible('none');\r\n            BaseActions.setAlarmMenuVisible('none');\r\n        }\r\n        return (\r\n            <div>\r\n            <UserMenu>\r\n                <Username username={username}/>\r\n                <UserMenuItem onClick={handleLogoutButtonClick}>로그아웃</UserMenuItem>\r\n                </UserMenu>\r\n            <PostPopup handleOk={handleLogout} right={'40%'} handleCancel={handleCancel}\r\n             text={popupText} display={postPopupDisplay} />\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n\r\n    (state) => ({\r\n        visible : state.base.get('userMenuVisible'),\r\n        username: state.user.getIn(['loggedInfo','username']),\r\n        display : state.post.get('popupDisplay'),\r\n        postPopupDisplay : state.post.get('postPopupDisplay'),\r\n        popupText : state.post.get('popupText')\r\n    }),\r\n    (dispatch) => ({\r\n        BaseActions: bindActionCreators(baseActions, dispatch),\r\n        UserActions: bindActionCreators(userActions, dispatch),\r\n        PostActions : bindActionCreators(postActions, dispatch)\r\n    })\r\n)(UserMenuContainer);"]},"metadata":{},"sourceType":"module"}