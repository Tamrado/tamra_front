{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Base\\\\WithListContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { WithList } from '../../components/Post';\nimport { bindActionCreators } from 'redux';\nimport * as postActions from '../../redux/modules/post';\n\nclass WithListContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      opacity: 0.8\n    };\n\n    this.closeWithBox = () => {\n      this.props.PostActions.setWithFriendDisplay('none');\n    };\n\n    this.handleScroll = e => {\n      const scrollTop = e.srcElement.scrollingElement.scrollTop;\n      this.setState({\n        opacity: 0.8 - scrollTop / 800\n      });\n\n      if (this.state.opacity < 0) {\n        this.closeWithBox();\n      }\n    };\n\n    this.handleFriendCancel = async e => {\n      const PostActions = this.props.PostActions;\n      const id = e.target.id;\n      let count = 0;\n      await PostActions.removeFriend(id);\n      const withData = this.props.withData;\n      await withData.toJS().forEach(item => count++);\n\n      if (count > 1) {\n        PostActions.setWithFriend(withData.toJS()[0].nickname + '님 외 ' + String(count - 1) + '명과 함께');\n      } else if (count > 0) {\n        PostActions.setWithFriend(withData.toJS()[0].nickname + '님과 함께');\n      } else {\n        PostActions.setWithDisplay('none');\n        PostActions.setWithFriendDisplay('none');\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  render() {\n    const _this$props = this.props,\n          withData = _this$props.withData,\n          withfriendDisplay = _this$props.withfriendDisplay;\n    const opacity = this.state.opacity;\n    const closeWithBox = this.closeWithBox,\n          handleFriendCancel = this.handleFriendCancel;\n    return React.createElement(WithList, {\n      friend: withData,\n      opacity: opacity,\n      display: withfriendDisplay,\n      cancel: handleFriendCancel,\n      close: closeWithBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default connect(state => ({\n  withData: state.post.get('friendInfo'),\n  withfriendDisplay: state.post.get('withFriendDisplay')\n}), dispatch => ({\n  PostActions: bindActionCreators(postActions, dispatch)\n}))(WithListContainer);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Base/WithListContainer.js"],"names":["React","Component","connect","WithList","bindActionCreators","postActions","WithListContainer","state","opacity","closeWithBox","props","PostActions","setWithFriendDisplay","handleScroll","e","scrollTop","srcElement","scrollingElement","setState","handleFriendCancel","id","target","count","removeFriend","withData","toJS","forEach","item","setWithFriend","nickname","String","setWithDisplay","componentDidMount","window","addEventListener","render","withfriendDisplay","post","get","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {WithList} from '../../components/Post';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as postActions from '../../redux/modules/post';\r\n\r\nclass WithListContainer extends Component{\r\n    state  = {\r\n        opacity : 0.8\r\n    };\r\n    \r\n      closeWithBox = () => {\r\n          this.props.PostActions.setWithFriendDisplay('none');\r\n          \r\n      }\r\n      \r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.handleScroll);\r\n      }\r\n      handleScroll = (e) => {\r\n        const scrollTop =e.srcElement.scrollingElement.scrollTop;\r\n        \r\n        this.setState({\r\n            opacity : 0.8 - scrollTop / 800\r\n        });\r\n        if(this.state.opacity < 0){\r\n           this.closeWithBox();\r\n        }\r\n     \r\n      }\r\n    \r\n    handleFriendCancel = async(e) => {\r\n        const{PostActions} = this.props;\r\n        const {id} = e.target;\r\n        let count = 0;\r\n        await PostActions.removeFriend(id);\r\n        const{withData} = this.props;\r\n        await withData.toJS().forEach(item => count++);\r\n       \r\n        if(count > 1){\r\n            PostActions.setWithFriend(withData.toJS()[0].nickname+'님 외 '+String(count-1)+'명과 함께');\r\n        }\r\n        else if(count > 0){\r\n            PostActions.setWithFriend(withData.toJS()[0].nickname+'님과 함께');\r\n        }\r\n        else{\r\n            PostActions.setWithDisplay('none'); \r\n            PostActions.setWithFriendDisplay('none');\r\n            \r\n    }\r\n    }\r\n\r\n    render(){\r\n        const {withData,withfriendDisplay} = this.props;\r\n        const {opacity} = this.state;\r\n        const {closeWithBox,handleFriendCancel} = this;\r\n        return(\r\n            <WithList friend = {withData} opacity = {opacity} display = {withfriendDisplay}\r\n             cancel = {handleFriendCancel} close={closeWithBox} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        withData : state.post.get('friendInfo'),\r\n        withfriendDisplay :state.post.get('withFriendDisplay')\r\n    }),\r\n    (dispatch) => ({\r\n        PostActions: bindActionCreators(postActions, dispatch)\r\n\r\n    })\r\n)(WithListContainer);"]},"metadata":{},"sourceType":"module"}