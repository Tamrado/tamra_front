{"ast":null,"code":"import { Map } from 'immutable';\nimport { handleActions, createAction } from 'redux-actions';\nconst SET_HEADER_VISIBILITY = 'base/SET_HEADER_VISIBILITY'; // 헤더 렌더링 여부 설정\n\nconst SET_USER_MENU_VISIBILITY = 'base/SET_USER_MENU_VISIBILITY';\nconst SET_FOLLOW_MENU_VISIBLE = 'base/SET_FOLLOW_MENU_VISIBLE';\nconst SET_ALARM_MENU_VISIBLE = 'base/SET_ALARM_MENU_VISIBLE';\nexport const setFollowMenuVisible = createAction(SET_FOLLOW_MENU_VISIBLE);\nexport const setAlarmMenuVisible = createAction(SET_ALARM_MENU_VISIBLE);\nexport const setHeaderVisibility = createAction(SET_HEADER_VISIBILITY); // visible\n\nexport const setUserMenuVisibility = createAction(SET_USER_MENU_VISIBILITY);\nconst initialState = Map({\n  header: Map({\n    visible: true\n  }),\n  userMenuVisible: 'none',\n  followMenuVisible: 'none',\n  alarmMenuVisible: 'none'\n});\nexport default handleActions({\n  [SET_FOLLOW_MENU_VISIBLE]: (state, action) => state.set('followMenuVisible', action.payload),\n  [SET_ALARM_MENU_VISIBLE]: (state, action) => state.set('alarmMenuVisible', action.payload),\n  [SET_HEADER_VISIBILITY]: (state, action) => state.setIn(['header', 'visible'], action.payload),\n  [SET_USER_MENU_VISIBILITY]: (state, action) => state.setIn(['userMenu', 'visible'], action.payload)\n}, initialState);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/redux/modules/base.js"],"names":["Map","handleActions","createAction","SET_HEADER_VISIBILITY","SET_USER_MENU_VISIBILITY","SET_FOLLOW_MENU_VISIBLE","SET_ALARM_MENU_VISIBLE","setFollowMenuVisible","setAlarmMenuVisible","setHeaderVisibility","setUserMenuVisibility","initialState","header","visible","userMenuVisible","followMenuVisible","alarmMenuVisible","state","action","set","payload","setIn"],"mappings":"AAAA,SAASA,GAAT,QAAoB,WAApB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,eAA5C;AAEA,MAAMC,qBAAqB,GAAG,4BAA9B,C,CAA4D;;AAC5D,MAAMC,wBAAwB,GAAG,+BAAjC;AACA,MAAMC,uBAAuB,GAAG,8BAAhC;AACA,MAAMC,sBAAsB,GAAG,6BAA/B;AAEA,OAAO,MAAMC,oBAAoB,GAAGL,YAAY,CAACG,uBAAD,CAAzC;AACP,OAAO,MAAMG,mBAAmB,GAAGN,YAAY,CAACI,sBAAD,CAAxC;AACP,OAAO,MAAMG,mBAAmB,GAAGP,YAAY,CAACC,qBAAD,CAAxC,C,CAAiE;;AACxE,OAAO,MAAMO,qBAAqB,GAAGR,YAAY,CAACE,wBAAD,CAA1C;AAEP,MAAMO,YAAY,GAAGX,GAAG,CAAC;AACrBY,EAAAA,MAAM,EAAEZ,GAAG,CAAC;AACRa,IAAAA,OAAO,EAAE;AADD,GAAD,CADU;AAIrBC,EAAAA,eAAe,EAAG,MAJG;AAKrBC,EAAAA,iBAAiB,EAAG,MALC;AAMrBC,EAAAA,gBAAgB,EAAG;AANE,CAAD,CAAxB;AASA,eAAef,aAAa,CAAC;AACzB,GAACI,uBAAD,GAA4B,CAACY,KAAD,EAAOC,MAAP,KAAkBD,KAAK,CAACE,GAAN,CAAU,mBAAV,EAA8BD,MAAM,CAACE,OAArC,CADrB;AAEzB,GAACd,sBAAD,GAA2B,CAACW,KAAD,EAAOC,MAAP,KAAkBD,KAAK,CAACE,GAAN,CAAU,kBAAV,EAA6BD,MAAM,CAACE,OAApC,CAFpB;AAGzB,GAACjB,qBAAD,GAAyB,CAACc,KAAD,EAAQC,MAAR,KAAmBD,KAAK,CAACI,KAAN,CAAY,CAAC,QAAD,EAAW,SAAX,CAAZ,EAAmCH,MAAM,CAACE,OAA1C,CAHnB;AAIzB,GAAChB,wBAAD,GAA4B,CAACa,KAAD,EAAOC,MAAP,KAAkBD,KAAK,CAACI,KAAN,CAAY,CAAC,UAAD,EAAY,SAAZ,CAAZ,EAAoCH,MAAM,CAACE,OAA3C;AAJrB,CAAD,EAKzBT,YALyB,CAA5B","sourcesContent":["import { Map } from 'immutable';\r\nimport { handleActions, createAction } from 'redux-actions';\r\n\r\nconst SET_HEADER_VISIBILITY = 'base/SET_HEADER_VISIBILITY'; // 헤더 렌더링 여부 설정\r\nconst SET_USER_MENU_VISIBILITY = 'base/SET_USER_MENU_VISIBILITY';\r\nconst SET_FOLLOW_MENU_VISIBLE = 'base/SET_FOLLOW_MENU_VISIBLE';\r\nconst SET_ALARM_MENU_VISIBLE = 'base/SET_ALARM_MENU_VISIBLE';\r\n\r\nexport const setFollowMenuVisible = createAction(SET_FOLLOW_MENU_VISIBLE);\r\nexport const setAlarmMenuVisible = createAction(SET_ALARM_MENU_VISIBLE);\r\nexport const setHeaderVisibility = createAction(SET_HEADER_VISIBILITY); // visible\r\nexport const setUserMenuVisibility = createAction(SET_USER_MENU_VISIBILITY);\r\n\r\nconst initialState = Map({\r\n    header: Map({\r\n        visible: true\r\n    }),\r\n    userMenuVisible : 'none',\r\n    followMenuVisible : 'none',\r\n    alarmMenuVisible : 'none'\r\n});\r\n\r\nexport default handleActions({\r\n    [SET_FOLLOW_MENU_VISIBLE] : (state,action) => state.set('followMenuVisible',action.payload),\r\n    [SET_ALARM_MENU_VISIBLE] : (state,action) => state.set('alarmMenuVisible',action.payload),\r\n    [SET_HEADER_VISIBILITY]: (state, action) => state.setIn(['header', 'visible'], action.payload),\r\n    [SET_USER_MENU_VISIBILITY]: (state,action) => state.setIn(['userMenu','visible'], action.payload)\r\n}, initialState);"]},"metadata":{},"sourceType":"module"}