{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Auth\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink, AuthError, Label } from '../../components/Auth';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as authActions from '../../redux/modules/auth';\nimport { isEmail, isAlphanumeric, isLength } from 'validator';\nimport debounce from 'lodash/debounce';\nimport * as userActions from '../../redux/modules/user';\nimport storage from '../../lib/storage';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setError = (message, id) => {\n      const AuthActions = this.props.AuthActions;\n      AuthActions.setError({\n        form: 'register',\n        message\n      });\n      AuthActions.setErrorId({\n        form: 'register',\n        id\n      });\n    };\n\n    this.checkEmailExists = debounce(async email => {\n      const AuthActions = this.props.AuthActions;\n\n      try {\n        await AuthActions.checkEmailExists(email, 'null');\n        this.setError(null, 'email');\n      } catch (e) {\n        this.setError('이미 존재하는 이메일입니다.', 'email');\n      }\n    }, 300);\n    this.checkIdExists = debounce(async id => {\n      const AuthActions = this.props.AuthActions;\n\n      try {\n        await AuthActions.checkIdExists(id);\n        this.setError(null, 'id');\n      } catch (e) {\n        this.setError('이미 존재하는 아이디입니다.', 'id');\n      }\n    }, 300);\n    this.checkPhoneExists = debounce(async phone => {\n      const AuthActions = this.props.AuthActions;\n\n      try {\n        await AuthActions.checkPhoneExists(phone, 'null');\n        this.setError(null, 'phone');\n      } catch (e) {\n        this.setError('이미 존재하는 핸드폰 번호입니다.', 'phone');\n      }\n    }, 300);\n    this.validate = {\n      email: value => {\n        if (!isEmail(value)) {\n          this.setError('잘못된 이메일 형식 입니다.', 'email');\n          return false;\n        }\n\n        return true;\n      },\n      id: value => {\n        if (!isAlphanumeric(value) || !isLength(value, {\n          min: 9,\n          max: 15\n        })) {\n          this.setError('아이디는 9~15 글자의 알파벳 혹은 숫자로 이루어져야 합니다.', 'id');\n          return false;\n        }\n\n        return true;\n      },\n      password: value => {\n        if (!new RegExp(/^(?=.*\\d)(?=.*[~`!@#$%\\\\^&*()-])(?=.*[a-z])(?=.*[A-Z]).{9,12}$/).test(value)) {\n          this.setError('비밀번호는 9~12 글자의 알파벳 (대소문자 구분), 숫자, 특수문자로 이루어져야 합니다.', 'password');\n          return false;\n        } else if (new RegExp(/(\\w)\\1\\1\\1/).test(value)) {\n          this.setError('비밀번호는 같은 문자를 4번 이상 사용할 수 없습니다.', 'password');\n          return false;\n        }\n\n        this.setError(null);\n        return true;\n      },\n      passwordConfirm: value => {\n        if (this.props.form.get('password') !== value) {\n          this.setError('비밀번호 확인이 일치하지 않습니다.', 'passwordConfirm');\n          return false;\n        }\n\n        this.setError(null);\n        return true;\n      },\n      phone: value => {\n        if (!new RegExp(/^01(?:0|1|[6-9])-(\\d{3}|\\d{4})-(\\d{4})$/).test(value)) {\n          this.setError('핸드폰 번호는 01x-xxx(x)-xxxx와 같은 형태로 입력해야 합니다.', 'phone');\n          return false;\n        }\n\n        return true;\n      },\n      comment: value => {\n        if (!isLength(value, {\n          min: 0,\n          max: 50\n        })) {\n          this.setError('코멘트는 50자를 넘길 수 없습니다.', 'comment');\n          return false;\n        }\n\n        this.setError(null);\n        return true;\n      },\n      name: value => {\n        if (!isLength(value, {\n          min: 1,\n          max: 30\n        })) {\n          this.setError('이름은 1자 이상 30자 이하여야 합니다.', 'name');\n          return false;\n        }\n\n        this.setError(null);\n        return true;\n      },\n      gender: value => {\n        if (value == null) {\n          this.setError('성별은 반드시 입력해야 합니다.', 'gender');\n          return false;\n        }\n\n        this.setError(null);\n        return true;\n      }\n    };\n\n    this.checkedChange = e => {\n      const AuthActions = this.props.AuthActions;\n      const _e$target$checked = e.target.checked,\n            name = _e$target$checked.name,\n            value = _e$target$checked.value;\n      AuthActions.changeInput({\n        name,\n        value,\n        form: 'register'\n      });\n    };\n\n    this.defaultNullChange = e => {\n      const AuthActions = this.props.AuthActions;\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      AuthActions.changeInput({\n        name,\n        value,\n        form: 'register'\n      });\n    };\n\n    this.handleChange = e => {\n      const AuthActions = this.props.AuthActions;\n      const _e$target2 = e.target,\n            name = _e$target2.name,\n            value = _e$target2.value;\n      AuthActions.changeInput({\n        name,\n        value,\n        form: 'register'\n      });\n      const validation = this.validate[name](value);\n      if (name.indexOf('password') > -1 || !validation) return;\n      if (name.indexOf('email') > -1) this.checkEmailExists(value);else if (name.indexOf('id') > -1) this.checkIdExists(value);else if (name.indexOf('phone') > -1) this.checkPhoneExists(value);\n    };\n\n    this.handleLocalRegister = async () => {\n      const _this$props = this.props,\n            form = _this$props.form,\n            AuthActions = _this$props.AuthActions,\n            error = _this$props.error,\n            history = _this$props.history,\n            UserActions = _this$props.UserActions;\n\n      const _form$toJS = form.toJS(),\n            email = _form$toJS.email,\n            id = _form$toJS.id,\n            password = _form$toJS.password,\n            passwordConfirm = _form$toJS.passwordConfirm,\n            phone = _form$toJS.phone,\n            name = _form$toJS.name,\n            comment = _form$toJS.comment,\n            address = _form$toJS.address,\n            gender = _form$toJS.gender,\n            birthday = _form$toJS.birthday;\n\n      const formData = new FormData();\n      if (this.state.file !== null) formData.append('file', this.state.file);else formData.append('file', null);\n      formData.append('userId', id);\n      const validate = this.validate;\n      if (error) return; //현재 에러 있는 상태라면 진행 x\n\n      if (!validate['email'](email) || !validate['id'](id) || !validate['password'](password) || !validate['passwordConfirm'](passwordConfirm) || !validate['name'](name) || !validate['comment'](comment) || !validate['phone'](phone) || !validate['gender'](gender)) {\n        //하나라도 실패하면 진행 하지 않음\n        return;\n      }\n\n      try {\n        await AuthActions.localRegister({\n          email,\n          id,\n          password,\n          name,\n          comment,\n          phone,\n          address,\n          gender,\n          birthday\n        });\n      } catch (e) {\n        if (e.response.status === 411) this.setError('조건에 맞는 데이터를 입력해주세요.');\n        if (e.response.status === 409) this.setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');\n      }\n\n      try {\n        await AuthActions.localRegisterImage(formData);\n        const loggedInfo = this.props.result.toJS();\n        storage.set('loggedInfo', loggedInfo);\n        UserActions.setLoggedInfo(loggedInfo);\n        UserActions.setValidated(true);\n        history.push('/');\n      } catch (e) {\n        if (e.response.status === 422) this.setError('알 수 없는 에러가 발생했습니다.');\n        if (e.response.status === 409) this.setError('다른 회원의 아이디와 동일합니다. 다시 입력해주세요.');\n        if (e.response.status === 411) this.setError('조건에 맞는 데이터를 입력해주세요.');\n      }\n    };\n\n    this.enterRegister = () => {\n      if (window.event.keyCode === 13) this.handleLocalRegister();\n    };\n\n    this.state = {\n      file: null\n    };\n    this.handleFileInput = this.handleFileInput.bind(this);\n  }\n\n  componentWillUnmount() {\n    const AuthActions = this.props.AuthActions;\n    AuthActions.initializeForm('register');\n  }\n\n  handleFileInput(e) {\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  render() {\n    const inputStyle = {\n      width: '15%',\n      left: '5%',\n      position: 'relative',\n      outline: 'none',\n      borderRadius: '0px',\n      lineHeight: '2.5rem',\n      fontSize: '1.2rem',\n      paddingLeft: '0.5rem',\n      fontFamily: 'Noto Sans KR',\n      fontStyle: 'normal',\n      paddingRight: '1rem',\n      marginRight: '1rem'\n    };\n    const _this$props2 = this.props,\n          error = _this$props2.error,\n          errorId = _this$props2.errorId;\n\n    const _this$props$form$toJS = this.props.form.toJS(),\n          id = _this$props$form$toJS.id,\n          password = _this$props$form$toJS.password,\n          passwordConfirm = _this$props$form$toJS.passwordConfirm,\n          email = _this$props$form$toJS.email,\n          name = _this$props$form$toJS.name,\n          phone = _this$props$form$toJS.phone,\n          birthday = _this$props$form$toJS.birthday,\n          comment = _this$props$form$toJS.comment,\n          address = _this$props$form$toJS.address,\n          gender = _this$props$form$toJS.gender;\n\n    const handleChange = this.handleChange,\n          handleLocalRegister = this.handleLocalRegister,\n          defaultNullChange = this.defaultNullChange,\n          handleFileInput = this.handleFileInput,\n          checkedChange = this.checkedChange,\n          enterRegister = this.enterRegister;\n    return React.createElement(AuthContent, {\n      title: \"SIGN UP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(InputWithLabel, {\n      label: \"\\uC544\\uC774\\uB514\",\n      name: \"id\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      enter: enterRegister,\n      value: id,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), errorId === 'id' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      name: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      enter: enterRegister,\n      type: \"password\",\n      value: password,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), errorId === 'password' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      name: \"passwordConfirm\",\n      placeholder: \"\\uB2E4\\uC2DC \\uD55C\\uBC88 \\uC785\\uB825\",\n      type: \"password\",\n      enter: enterRegister,\n      value: passwordConfirm,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), errorId === 'passwordConfirm' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uC0DD\\uB144\\uC6D4\\uC77C\",\n      name: \"birthday\",\n      placeholder: \"****-**-**\",\n      type: \"date\",\n      enter: enterRegister,\n      value: birthday,\n      onChange: defaultNullChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), errorId === 'birthday' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uC774\\uBA54\\uC77C\",\n      name: \"email\",\n      placeholder: \"timeline@naver.com\",\n      type: \"email\",\n      enter: enterRegister,\n      value: email,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), errorId === 'email' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uD578\\uB4DC\\uD3F0 \\uBC88\\uD638\",\n      name: \"phone\",\n      placeholder: \"010-1234-1234\",\n      value: phone,\n      enter: enterRegister,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }), errorId === 'phone' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uC774\\uB984\",\n      name: \"name\",\n      placeholder: \"\\uC774\\uB984\",\n      enter: enterRegister,\n      value: name,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), errorId === 'name' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uCF54\\uBA58\\uD2B8\",\n      name: \"comment\",\n      placeholder: \"\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4.\",\n      enter: enterRegister,\n      value: comment,\n      onChange: handleChange,\n      enter: enterRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), errorId === 'comment' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, error), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(Label, {\n      label: \"\\uC131\\uBCC4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: inputStyle,\n      name: \"gender\",\n      type: \"radio\",\n      value: \"0\",\n      onKeyUp: enterRegister,\n      onChange: checkedChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), \"\\uC5EC\\uC131\", React.createElement(\"input\", {\n      style: inputStyle,\n      name: \"gender\",\n      type: \"radio\",\n      value: 1,\n      onKeyUp: enterRegister,\n      onChange: checkedChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), \"\\uB0A8\\uC131\", React.createElement(\"input\", {\n      style: inputStyle,\n      name: \"gender\",\n      type: \"radio\",\n      value: 2,\n      onKeyUp: enterRegister,\n      onChange: checkedChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), \"others\", errorId === 'gender' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      enter: enterRegister,\n      label: \"\\uC8FC\\uC18C\",\n      name: \"address\",\n      placeholder: \"\\uC11C\\uC6B8\",\n      value: address,\n      onChange: defaultNullChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }), errorId === 'address' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      enter: enterRegister,\n      label: \"\\uD504\\uB85C\\uD544 \\uC0AC\\uC9C4\",\n      name: \"image\",\n      type: \"file\",\n      accept: \".gif, .jpg, .png\",\n      onChange: handleFileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), React.createElement(AuthButton, {\n      onClick: handleLocalRegister,\n      enter: enterRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(RightAlignedLink, {\n      to: \"/auth/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC778\"));\n  }\n\n}\n\nexport default connect(state => ({\n  form: state.auth.getIn(['register', 'form']),\n  error: state.auth.getIn(['register', 'error']),\n  errorId: state.auth.getIn(['register', 'errorId']),\n  result: state.auth.get('result')\n}), dispatch => ({\n  AuthActions: bindActionCreators(authActions, dispatch),\n  UserActions: bindActionCreators(userActions, dispatch)\n}))(Register);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Auth/Register.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","AuthError","Label","bindActionCreators","connect","authActions","isEmail","isAlphanumeric","isLength","debounce","userActions","storage","Register","constructor","props","setError","message","id","AuthActions","form","setErrorId","checkEmailExists","email","e","checkIdExists","checkPhoneExists","phone","validate","value","min","max","password","RegExp","test","passwordConfirm","get","comment","name","gender","checkedChange","target","checked","changeInput","defaultNullChange","handleChange","validation","indexOf","handleLocalRegister","error","history","UserActions","toJS","address","birthday","formData","FormData","state","file","append","localRegister","response","status","localRegisterImage","loggedInfo","result","set","setLoggedInfo","setValidated","push","enterRegister","window","event","keyCode","handleFileInput","bind","componentWillUnmount","initializeForm","setState","files","render","inputStyle","width","left","position","outline","borderRadius","lineHeight","fontSize","paddingLeft","fontFamily","fontStyle","paddingRight","marginRight","errorId","auth","getIn","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {AuthContent,InputWithLabel,AuthButton,RightAlignedLink,AuthError,Label} from '../../components/Auth';\r\nimport { bindActionCreators } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as authActions from '../../redux/modules/auth';\r\nimport {isEmail,isAlphanumeric,isLength} from 'validator';\r\nimport debounce from 'lodash/debounce';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport storage from '../../lib/storage';\r\n\r\nclass Register extends Component{  \r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        \r\n        this.state = {\r\n        \r\n        file: null\r\n        }\r\n        this.handleFileInput = this.handleFileInput.bind(this);\r\n    }\r\n    setError = (message,id) => {\r\n        const{AuthActions} = this.props;\r\n        AuthActions.setError({form: 'register',message});\r\n        AuthActions.setErrorId({form: 'register',id});\r\n    }\r\n\r\n    checkEmailExists = debounce(async (email) => {\r\n        const { AuthActions } = this.props;\r\n        try{\r\n            await AuthActions.checkEmailExists(email,'null');\r\n            this.setError(null,'email');\r\n        }catch(e){\r\n            this.setError('이미 존재하는 이메일입니다.','email');\r\n        }\r\n    },300);\r\n\r\n    checkIdExists = debounce(async(id)=> {\r\n        const {AuthActions} = this.props;\r\n        try{\r\n            await AuthActions.checkIdExists(id);\r\n                this.setError(null,'id');\r\n            \r\n        } catch (e){\r\n            this.setError('이미 존재하는 아이디입니다.','id');\r\n        }\r\n    },300);\r\n\r\n    checkPhoneExists = debounce(async(phone) => {\r\n        const {AuthActions} = this.props;\r\n        try{\r\n            await AuthActions.checkPhoneExists(phone,'null');\r\n                this.setError(null,'phone');\r\n            \r\n        }catch (e){\r\n            this.setError('이미 존재하는 핸드폰 번호입니다.','phone');\r\n        }\r\n    },300);\r\n\r\n    validate = {\r\n        email: (value) => {\r\n            if(!isEmail(value)){\r\n                this.setError('잘못된 이메일 형식 입니다.','email');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n            id: (value) => {\r\n            if(!isAlphanumeric(value) || !isLength(value, {min:9, max: 15})) {\r\n                this.setError('아이디는 9~15 글자의 알파벳 혹은 숫자로 이루어져야 합니다.','id');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        password: (value) => {\r\n            \r\n            if(!new RegExp(/^(?=.*\\d)(?=.*[~`!@#$%\\\\^&*()-])(?=.*[a-z])(?=.*[A-Z]).{9,12}$/).test(value)){\r\n                this.setError('비밀번호는 9~12 글자의 알파벳 (대소문자 구분), 숫자, 특수문자로 이루어져야 합니다.','password');\r\n                return false;\r\n            }\r\n            else if(new RegExp(/(\\w)\\1\\1\\1/).test(value)){\r\n                this.setError('비밀번호는 같은 문자를 4번 이상 사용할 수 없습니다.','password');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        passwordConfirm: (value) => {\r\n            if(this.props.form.get('password') !== value){\r\n                this.setError('비밀번호 확인이 일치하지 않습니다.','passwordConfirm');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        phone: (value)=> {\r\n            if(!new RegExp(/^01(?:0|1|[6-9])-(\\d{3}|\\d{4})-(\\d{4})$/).test(value)){\r\n                this.setError('핸드폰 번호는 01x-xxx(x)-xxxx와 같은 형태로 입력해야 합니다.','phone');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        comment: (value)=> {\r\n            if(!isLength(value, {min:0, max: 50})){\r\n                this.setError('코멘트는 50자를 넘길 수 없습니다.','comment');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        name: (value) => {\r\n            if(!isLength(value, {min:1, max: 30})){\r\n                this.setError('이름은 1자 이상 30자 이하여야 합니다.','name');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        gender: (value) => {\r\n            if(value == null){\r\n                this.setError('성별은 반드시 입력해야 합니다.','gender');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        }\r\n\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        const {AuthActions} = this.props;\r\n        AuthActions.initializeForm('register');\r\n    }\r\n\r\n    checkedChange = (e) =>{\r\n        const {AuthActions} = this.props;\r\n        const {name, value} = e.target.checked;\r\n        AuthActions.changeInput({\r\n          name,\r\n          value,\r\n          form: 'register'  \r\n        });\r\n    }\r\n\r\n    defaultNullChange = (e) =>{\r\n        const {AuthActions} = this.props;\r\n        const {name, value} = e.target;\r\n        AuthActions.changeInput({\r\n          name,\r\n          value,\r\n          form: 'register'  \r\n        });\r\n        \r\n    }\r\n\r\n    handleFileInput(e){\r\n            this.setState({\r\n            file: e.target.files[0]\r\n            });\r\n        \r\n      }\r\n    handleChange = (e) =>{\r\n    const {AuthActions} = this.props;\r\n    const {name, value} = e.target;\r\n    AuthActions.changeInput({\r\n      name,\r\n      value,\r\n      form: 'register'  \r\n    });\r\n    const validation = this.validate[name](value);\r\n    if(name.indexOf('password') > -1 || !validation) return;\r\n    if( name.indexOf('email') > -1)\r\n    this.checkEmailExists(value);\r\n    else if(name.indexOf('id') > -1) \r\n     this.checkIdExists(value); \r\n     else if(name.indexOf('phone') > -1) \r\n     this.checkPhoneExists(value);\r\n    \r\n}\r\nhandleLocalRegister = async() => {\r\n    const{form, AuthActions, error, history,UserActions} = this.props;\r\n    const {email, id, password, passwordConfirm, phone,name,comment,address,gender,birthday} = form.toJS();\r\n    const formData = new FormData();\r\n    if(this.state.file !== null)\r\n        formData.append('file',this.state.file);\r\n    else\r\n        formData.append('file',null);\r\n    formData.append('userId',id);\r\n    const {validate} = this;\r\n\r\n    if(error) return; //현재 에러 있는 상태라면 진행 x\r\n    if(!validate['email'](email)\r\n    || !validate['id'](id)\r\n    || !validate['password'](password)\r\n    || !validate['passwordConfirm'](passwordConfirm)\r\n    || !validate['name'](name)\r\n    || !validate['comment'](comment)\r\n    || !validate['phone'](phone)\r\n    || !validate['gender'](gender)\r\n    ){\r\n        //하나라도 실패하면 진행 하지 않음\r\n        return;\r\n    }\r\n    \r\n    try{\r\n         await AuthActions.localRegister({\r\n            email,id,password,name,comment,phone,address,gender,birthday\r\n        });\r\n    } catch(e){\r\n        if(e.response.status === 411)\r\n            this.setError('조건에 맞는 데이터를 입력해주세요.');\r\n        if(e.response.status === 409)\r\n            this.setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');\r\n    }\r\n    try{\r\n         await AuthActions.localRegisterImage(\r\n            formData\r\n        );\r\n        const loggedInfo = this.props.result.toJS();\r\n        storage.set('loggedInfo', loggedInfo);\r\n        UserActions.setLoggedInfo(loggedInfo);\r\n        UserActions.setValidated(true);\r\n        history.push('/');\r\n    } catch(e){\r\n        if(e.response.status === 422)\r\n            this.setError('알 수 없는 에러가 발생했습니다.');\r\n        if(e.response.status === 409)\r\n            this.setError('다른 회원의 아이디와 동일합니다. 다시 입력해주세요.');\r\n        if(e.response.status === 411)\r\n            this.setError('조건에 맞는 데이터를 입력해주세요.');\r\n    }\r\n    }\r\n    enterRegister = () => {\r\n        if(window.event.keyCode === 13)\r\n          this.handleLocalRegister();\r\n    }\r\n    render(){\r\n        const inputStyle = {\r\n            width: '15%',\r\n            left: '5%',\r\n            position: 'relative',\r\n    outline: 'none',\r\n    borderRadius: '0px',\r\n    lineHeight: '2.5rem',\r\n    fontSize: '1.2rem',\r\n    paddingLeft: '0.5rem',\r\n    fontFamily: 'Noto Sans KR',\r\n    fontStyle: 'normal',\r\n    paddingRight: '1rem',\r\n    marginRight : '1rem'\r\n        }\r\n        const {error,errorId} = this.props;\r\n        const {id,password,passwordConfirm,email,name,phone,birthday,comment,address,gender} = this.props.form.toJS();\r\n        const {handleChange,handleLocalRegister,defaultNullChange,handleFileInput,checkedChange,enterRegister} = this;\r\n        return(\r\n            <AuthContent title='SIGN UP'>\r\n                <InputWithLabel label = \"아이디\" name=\"id\" placeholder=\"아이디\" enter = {enterRegister}\r\n                value = {id}\r\n                onChange={handleChange}/>\r\n                 {\r\n                    errorId === 'id' &&error && <AuthError>{error}</AuthError>\r\n                }               \r\n                <InputWithLabel label = \"비밀번호\" name=\"password\" placeholder=\"비밀번호\" enter = {enterRegister}\r\n                type=\"password\"\r\n                value={password} onChange={handleChange}\r\n                />\r\n                {\r\n                    errorId === 'password' &&error && <AuthError>{error}</AuthError>\r\n                }  \r\n                <InputWithLabel label = \"비밀번호 확인\" name=\"passwordConfirm\" placeholder=\"다시 한번 입력\"\r\n                type=\"password\" enter = {enterRegister}\r\n                value={passwordConfirm} onChange={handleChange}\r\n                />\r\n                {\r\n                    errorId === 'passwordConfirm' &&error && <AuthError>{error}</AuthError>\r\n                }  \r\n                <InputWithLabel label = \"생년월일\" name=\"birthday\" placeholder=\"****-**-**\"\r\n                type=\"date\" enter = {enterRegister}\r\n                value = {birthday} onChange={defaultNullChange}\r\n                />\r\n                {\r\n                    errorId === 'birthday' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <InputWithLabel label = \"이메일\" name=\"email\" placeholder=\"timeline@naver.com\"\r\n                type=\"email\" enter = {enterRegister}\r\n                value = {email}\r\n                onChange={handleChange}/>\r\n                {\r\n                    errorId === 'email' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <InputWithLabel label = \"핸드폰 번호\" name=\"phone\" placeholder=\"010-1234-1234\"\r\n                value={phone} enter = {enterRegister}\r\n                onChange={handleChange}/>\r\n                {\r\n                    errorId === 'phone' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <InputWithLabel label = \"이름\" name=\"name\" placeholder=\"이름\" enter = {enterRegister}\r\n                value = {name} onChange={handleChange}/> \r\n                {\r\n                    errorId === 'name' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <InputWithLabel label = \"코멘트\" name=\"comment\" placeholder=\"반갑습니다.\" enter = {enterRegister}\r\n                value = {comment} onChange={handleChange} enter = {enterRegister}/>\r\n                {\r\n                    errorId === 'comment' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                 <br/>\r\n                <Label label = \"성별\"></Label>\r\n                <input style={inputStyle}  name= \"gender\" type=\"radio\" value='0' onKeyUp = {enterRegister} onChange={checkedChange} />여성\r\n                <input style={inputStyle} name=\"gender\" type=\"radio\" value ={1} onKeyUp = {enterRegister}  onChange={checkedChange}/>남성\r\n                <input style={inputStyle} name=\"gender\" type=\"radio\"value={2} onKeyUp = {enterRegister} onChange={checkedChange} />others\r\n                {\r\n                    errorId === 'gender' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <InputWithLabel enter = {enterRegister} label =\"주소\" name =\"address\" placeholder=\"서울\" value = {address} onChange={defaultNullChange} />\r\n                {\r\n                    errorId === 'address' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <InputWithLabel enter = {enterRegister} label = \"프로필 사진\" name =\"image\" type=\"file\" accept=\".gif, .jpg, .png\" onChange={handleFileInput}></InputWithLabel>\r\n               \r\n                <AuthButton onClick={handleLocalRegister} enter = {enterRegister}>회원가입</AuthButton>\r\n                <RightAlignedLink to=\"/auth/login\">로그인</RightAlignedLink>\r\n            </AuthContent>\r\n        );\r\n        }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['register','form']),\r\n        error: state.auth.getIn(['register','error']),\r\n        errorId: state.auth.getIn(['register','errorId']),\r\n        result: state.auth.get('result')\r\n    }),\r\n    (dispatch)=>({\r\n        AuthActions : bindActionCreators(authActions,dispatch),\r\n        UserActions : bindActionCreators(userActions, dispatch)\r\n    })\r\n)(Register);"]},"metadata":{},"sourceType":"module"}