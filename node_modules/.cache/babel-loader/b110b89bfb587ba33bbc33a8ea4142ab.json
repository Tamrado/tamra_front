{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Auth\\\\KakaoRegister.js\";\nimport React, { Component } from 'react';\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink, AuthError, Label } from '../../components/Auth';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as authActions from '../../redux/modules/auth';\nimport { isEmail, isAlphanumeric, isLength } from 'validator';\nimport debounce from 'lodash/debounce';\nimport * as userActions from '../../redux/modules/user';\nimport storage from '../../lib/storage';\n\nclass KakaoRegister extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = e => {\n      const AuthActions = this.props.AuthActions;\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      AuthActions.changeInput({\n        name,\n        value,\n        form: 'register'\n      });\n      const validation = this.validate[name](value);\n      if (name.indexOf('password') > -1 || !validation) return;\n      if (name.indexOf('email') > -1) this.checkEmailExists(value);else if (name.indexOf('id') > -1) this.checkIdExists(value);else if (name.indexOf('phone') > -1) this.checkPhoneExists(value);\n    };\n\n    this.handleLocalRegister = async () => {\n      const _this$props = this.props,\n            form = _this$props.form,\n            AuthActions = _this$props.AuthActions,\n            error = _this$props.error,\n            history = _this$props.history,\n            UserActions = _this$props.UserActions;\n\n      const _form$toJS = form.toJS(),\n            email = _form$toJS.email,\n            id = _form$toJS.id,\n            password = _form$toJS.password,\n            passwordConfirm = _form$toJS.passwordConfirm,\n            phone = _form$toJS.phone,\n            name = _form$toJS.name,\n            comment = _form$toJS.comment,\n            address = _form$toJS.address,\n            gender = _form$toJS.gender,\n            birthday = _form$toJS.birthday;\n\n      const formData = new FormData();\n      if (this.state.file !== null) formData.append('file', this.state.file);else formData.append('file', null);\n      formData.append('userId', id);\n      const validate = this.validate;\n      if (error) return; //현재 에러 있는 상태라면 진행 x\n\n      if (!validate['email'](email) || !validate['id'](id) || !validate['password'](password) || !validate['passwordConfirm'](passwordConfirm) || !validate['name'](name) || !validate['comment'](comment) || !validate['phone'](phone) || !validate['gender'](gender)) {\n        //하나라도 실패하면 진행 하지 않음\n        return;\n      }\n\n      try {\n        await AuthActions.localRegister({\n          email,\n          id,\n          password,\n          name,\n          comment,\n          phone,\n          address,\n          gender,\n          birthday\n        });\n      } catch (e) {\n        if (e.response.status === 411) this.setError('조건에 맞는 데이터를 입력해주세요.');\n        if (e.response.status === 409) this.setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');\n      }\n\n      try {\n        await AuthActions.localRegisterImage(formData);\n        const loggedInfo = this.props.result.toJS();\n        storage.set('loggedInfo', loggedInfo);\n        UserActions.setLoggedInfo(loggedInfo);\n        UserActions.setValidated(true);\n        history.push('/');\n      } catch (e) {\n        if (e.response.status === 422) this.setError('알 수 없는 에러가 발생했습니다.');\n        if (e.response.status === 409) this.setError('다른 회원의 아이디와 동일합니다. 다시 입력해주세요.');\n        if (e.response.status === 411) this.setError('조건에 맞는 데이터를 입력해주세요.');\n      }\n    };\n\n    this.enterRegister = () => {\n      if (window.event.keyCode === 13) this.handleLocalRegister();\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          error = _this$props2.error,\n          errorId = _this$props2.errorId;\n\n    const _this$props$form$toJS = this.props.form.toJS(),\n          email = _this$props$form$toJS.email,\n          comment = _this$props$form$toJS.comment;\n\n    const handleChange = this.handleChange,\n          handleLocalRegister = this.handleLocalRegister,\n          enterRegister = this.enterRegister;\n    return React.createElement(AuthContent, {\n      title: \"SIGN UP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(InputWithLabel, {\n      label: \"\\uC774\\uBA54\\uC77C\",\n      name: \"email\",\n      placeholder: \"timeline@naver.com\",\n      enter: enterRegister,\n      value: email,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), errorId === 'email' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uCF54\\uBA58\\uD2B8\",\n      name: \"comment\",\n      placeholder: \"\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4.\",\n      enter: enterRegister,\n      value: comment,\n      onChange: handleChange,\n      enter: enterRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), errorId === 'comment' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, error), React.createElement(AuthButton, {\n      onClick: handleLocalRegister,\n      enter: enterRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(RightAlignedLink, {\n      to: \"/auth/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC778\"));\n  }\n\n}\n\nexport default connect(state => ({\n  form: state.auth.getIn(['register', 'form']),\n  error: state.auth.getIn(['register', 'error']),\n  errorId: state.auth.getIn(['register', 'errorId']),\n  result: state.auth.get('result')\n}), dispatch => ({\n  AuthActions: bindActionCreators(authActions, dispatch),\n  UserActions: bindActionCreators(userActions, dispatch)\n}))(Register);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Auth/KakaoRegister.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","AuthError","Label","bindActionCreators","connect","authActions","isEmail","isAlphanumeric","isLength","debounce","userActions","storage","KakaoRegister","handleChange","e","AuthActions","props","target","name","value","changeInput","form","validation","validate","indexOf","checkEmailExists","checkIdExists","checkPhoneExists","handleLocalRegister","error","history","UserActions","toJS","email","id","password","passwordConfirm","phone","comment","address","gender","birthday","formData","FormData","state","file","append","localRegister","response","status","setError","localRegisterImage","loggedInfo","result","set","setLoggedInfo","setValidated","push","enterRegister","window","event","keyCode","render","errorId","auth","getIn","get","dispatch","Register"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {AuthContent,InputWithLabel,AuthButton,RightAlignedLink,AuthError,Label} from '../../components/Auth';\r\nimport { bindActionCreators } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as authActions from '../../redux/modules/auth';\r\nimport {isEmail,isAlphanumeric,isLength} from 'validator';\r\nimport debounce from 'lodash/debounce';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport storage from '../../lib/storage';\r\n\r\nclass KakaoRegister extends Component{ \r\n    handleChange = (e) =>{\r\n        const {AuthActions} = this.props;\r\n        const {name, value} = e.target;\r\n        AuthActions.changeInput({\r\n          name,\r\n          value,\r\n          form: 'register'  \r\n        });\r\n        const validation = this.validate[name](value);\r\n        if(name.indexOf('password') > -1 || !validation) return;\r\n        if( name.indexOf('email') > -1)\r\n        this.checkEmailExists(value);\r\n        else if(name.indexOf('id') > -1) \r\n         this.checkIdExists(value); \r\n         else if(name.indexOf('phone') > -1) \r\n         this.checkPhoneExists(value);\r\n        \r\n    } \r\n    handleLocalRegister = async() => {\r\n        const{form, AuthActions, error, history,UserActions} = this.props;\r\n        const {email, id, password, passwordConfirm, phone,name,comment,address,gender,birthday} = form.toJS();\r\n        const formData = new FormData();\r\n        if(this.state.file !== null)\r\n            formData.append('file',this.state.file);\r\n        else\r\n            formData.append('file',null);\r\n        formData.append('userId',id);\r\n        const {validate} = this;\r\n    \r\n        if(error) return; //현재 에러 있는 상태라면 진행 x\r\n        if(!validate['email'](email)\r\n        || !validate['id'](id)\r\n        || !validate['password'](password)\r\n        || !validate['passwordConfirm'](passwordConfirm)\r\n        || !validate['name'](name)\r\n        || !validate['comment'](comment)\r\n        || !validate['phone'](phone)\r\n        || !validate['gender'](gender)\r\n        ){\r\n            //하나라도 실패하면 진행 하지 않음\r\n            return;\r\n        }\r\n        \r\n        try{\r\n             await AuthActions.localRegister({\r\n                email,id,password,name,comment,phone,address,gender,birthday\r\n            });\r\n        } catch(e){\r\n            if(e.response.status === 411)\r\n                this.setError('조건에 맞는 데이터를 입력해주세요.');\r\n            if(e.response.status === 409)\r\n                this.setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');\r\n        }\r\n        try{\r\n             await AuthActions.localRegisterImage(\r\n                formData\r\n            );\r\n            const loggedInfo = this.props.result.toJS();\r\n            storage.set('loggedInfo', loggedInfo);\r\n            UserActions.setLoggedInfo(loggedInfo);\r\n            UserActions.setValidated(true);\r\n            history.push('/');\r\n        } catch(e){\r\n            if(e.response.status === 422)\r\n                this.setError('알 수 없는 에러가 발생했습니다.');\r\n            if(e.response.status === 409)\r\n                this.setError('다른 회원의 아이디와 동일합니다. 다시 입력해주세요.');\r\n            if(e.response.status === 411)\r\n                this.setError('조건에 맞는 데이터를 입력해주세요.');\r\n        }\r\n        }\r\n        enterRegister = () => {\r\n            if(window.event.keyCode === 13)\r\n              this.handleLocalRegister();\r\n        }\r\nrender(){\r\n    const {error,errorId} = this.props;\r\n        const {email,comment} = this.props.form.toJS();\r\n        const {handleChange,handleLocalRegister,enterRegister} = this;\r\n    return(\r\n        <AuthContent title='SIGN UP'>\r\n                <InputWithLabel label = \"이메일\" name=\"email\" placeholder=\"timeline@naver.com\" enter = {enterRegister}\r\n                value = {email}\r\n                onChange={handleChange}/>\r\n                 {\r\n                    errorId === 'email' &&error && <AuthError>{error}</AuthError>\r\n                }               \r\n                <InputWithLabel label = \"코멘트\" name=\"comment\" placeholder=\"반갑습니다.\" enter = {enterRegister}\r\n                value = {comment} onChange={handleChange} enter = {enterRegister}/>\r\n                {\r\n                    errorId === 'comment' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <AuthButton onClick={handleLocalRegister} enter = {enterRegister}>회원가입</AuthButton>\r\n                <RightAlignedLink to=\"/auth/login\">로그인</RightAlignedLink>\r\n            </AuthContent>\r\n    );\r\n}\r\n}\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['register','form']),\r\n        error: state.auth.getIn(['register','error']),\r\n        errorId: state.auth.getIn(['register','errorId']),\r\n        result: state.auth.get('result')\r\n    }),\r\n    (dispatch)=>({\r\n        AuthActions : bindActionCreators(authActions,dispatch),\r\n        UserActions : bindActionCreators(userActions, dispatch)\r\n    })\r\n)(Register);"]},"metadata":{},"sourceType":"module"}