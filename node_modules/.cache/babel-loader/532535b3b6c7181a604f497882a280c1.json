{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { Map, List } from 'immutable';\nimport { handleActions, createAction } from 'redux-actions';\nimport { pender } from 'redux-pender';\nimport * as LikeAPI from '../../lib/api/like';\nconst SET_LIKE_DISPLAY = 'like/SET_LIKE_DISPLAY';\nconst CLICK_LIKE = 'like/CLICK_LIKE';\nconst CANCEL_LIKE = 'like/CANCEL_LIKE';\nconst GET_LIKE_AND_USER_LIST = 'like/GET_LIKE_AND_USER_LIST';\nexport const getLikeAndUserList = createAction(GET_LIKE_AND_USER_LIST, LikeAPI.getLikeandUserList);\nexport const setLikeDisplay = createAction(SET_LIKE_DISPLAY);\nexport const clickLike = createAction(CLICK_LIKE, LikeAPI.clickLike);\nexport const cancelLike = createAction(CANCEL_LIKE, LikeAPI.cancelLike);\nconst initialState = Map({\n  likedisplay: '',\n  likelist: List(),\n  totalNum: 0\n});\nexport default handleActions(_objectSpread({\n  [SET_LIKE_DISPLAY]: (state, action) => state.set('likedisplay', action.payload)\n}, pender({\n  type: CLICK_LIKE,\n  onSuccess: (state, action) => state.set('likedisplay', 'none')\n}), {}, pender({\n  type: CANCEL_LIKE,\n  onSuccess: (state, action) => state.set('likedisplay', 'block')\n}), {}, pender({\n  type: GET_LIKE_AND_USER_LIST,\n  onSuccess: (state, action) => state.set('totalNum', action.payload.data.totalNum).set('likelist', action.payload.data),\n  onFailure: (state, action) => state.set('totalNum', 0)\n})), initialState);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/redux/modules/like.js"],"names":["Map","List","handleActions","createAction","pender","LikeAPI","SET_LIKE_DISPLAY","CLICK_LIKE","CANCEL_LIKE","GET_LIKE_AND_USER_LIST","getLikeAndUserList","getLikeandUserList","setLikeDisplay","clickLike","cancelLike","initialState","likedisplay","likelist","totalNum","state","action","set","payload","type","onSuccess","data","onFailure"],"mappings":";AAAA,SAASA,GAAT,EAAaC,IAAb,QAAyB,WAAzB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,eAA5C;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AAEA,MAAMC,gBAAgB,GAAG,uBAAzB;AACA,MAAMC,UAAU,GAAG,iBAAnB;AACA,MAAMC,WAAW,GAAG,kBAApB;AACA,MAAMC,sBAAsB,GAAG,6BAA/B;AAEA,OAAO,MAAMC,kBAAkB,GAAGP,YAAY,CAACM,sBAAD,EAAwBJ,OAAO,CAACM,kBAAhC,CAAvC;AACP,OAAO,MAAMC,cAAc,GAAGT,YAAY,CAACG,gBAAD,CAAnC;AACP,OAAO,MAAMO,SAAS,GAAGV,YAAY,CAACI,UAAD,EAAYF,OAAO,CAACQ,SAApB,CAA9B;AACP,OAAO,MAAMC,UAAU,GAAGX,YAAY,CAACK,WAAD,EAAaH,OAAO,CAACS,UAArB,CAA/B;AAEP,MAAMC,YAAY,GAAGf,GAAG,CAAC;AACrBgB,EAAAA,WAAW,EAAC,EADS;AAErBC,EAAAA,QAAQ,EAAGhB,IAAI,EAFM;AAGrBiB,EAAAA,QAAQ,EAAG;AAHU,CAAD,CAAxB;AAOA,eAAehB,aAAa;AAExB,GAACI,gBAAD,GAAoB,CAACa,KAAD,EAAOC,MAAP,KAAkBD,KAAK,CAACE,GAAN,CAAU,aAAV,EAAwBD,MAAM,CAACE,OAA/B;AAFd,GAGrBlB,MAAM,CAAC;AACNmB,EAAAA,IAAI,EAAEhB,UADA;AAENiB,EAAAA,SAAS,EAAE,CAACL,KAAD,EAAOC,MAAP,KAAiBD,KAAK,CAACE,GAAN,CAAU,aAAV,EAAwB,MAAxB;AAFtB,CAAD,CAHe,MAOrBjB,MAAM,CAAC;AACNmB,EAAAA,IAAI,EAAEf,WADA;AAENgB,EAAAA,SAAS,EAAE,CAACL,KAAD,EAAOC,MAAP,KAAiBD,KAAK,CAACE,GAAN,CAAU,aAAV,EAAwB,OAAxB;AAFtB,CAAD,CAPe,MAYrBjB,MAAM,CAAC;AACNmB,EAAAA,IAAI,EAAGd,sBADD;AAENe,EAAAA,SAAS,EAAG,CAACL,KAAD,EAAOC,MAAP,KAAkBD,KAAK,CAACE,GAAN,CAAU,UAAV,EAAqBD,MAAM,CAACE,OAAP,CAAeG,IAAf,CAAoBP,QAAzC,EAAmDG,GAAnD,CAAuD,UAAvD,EAAkED,MAAM,CAACE,OAAP,CAAeG,IAAjF,CAFxB;AAGNC,EAAAA,SAAS,EAAG,CAACP,KAAD,EAAOC,MAAP,KAAkBD,KAAK,CAACE,GAAN,CAAU,UAAV,EAAsB,CAAtB;AAHxB,CAAD,CAZe,GAiBrBN,YAjBqB,CAA5B","sourcesContent":["import { Map,List } from 'immutable';\r\nimport { handleActions, createAction } from 'redux-actions';\r\nimport {pender} from 'redux-pender';\r\nimport * as LikeAPI from '../../lib/api/like';\r\n\r\nconst SET_LIKE_DISPLAY = 'like/SET_LIKE_DISPLAY';\r\nconst CLICK_LIKE = 'like/CLICK_LIKE';\r\nconst CANCEL_LIKE = 'like/CANCEL_LIKE';\r\nconst GET_LIKE_AND_USER_LIST = 'like/GET_LIKE_AND_USER_LIST';\r\n\r\nexport const getLikeAndUserList = createAction(GET_LIKE_AND_USER_LIST,LikeAPI.getLikeandUserList);\r\nexport const setLikeDisplay = createAction(SET_LIKE_DISPLAY);\r\nexport const clickLike = createAction(CLICK_LIKE,LikeAPI.clickLike);\r\nexport const cancelLike = createAction(CANCEL_LIKE,LikeAPI.cancelLike);\r\n\r\nconst initialState = Map({\r\n    likedisplay:'',\r\n    likelist : List(),\r\n    totalNum : 0\r\n    \r\n});\r\n\r\nexport default handleActions({\r\n    \r\n    [SET_LIKE_DISPLAY] :(state,action) => state.set('likedisplay',action.payload),\r\n    ...pender({\r\n        type: CLICK_LIKE,\r\n        onSuccess: (state,action) =>state.set('likedisplay','none') \r\n    }),\r\n    ...pender({\r\n        type: CANCEL_LIKE,\r\n        onSuccess: (state,action) =>state.set('likedisplay','block') \r\n        \r\n    }),\r\n    ...pender({\r\n        type : GET_LIKE_AND_USER_LIST,\r\n        onSuccess : (state,action) => state.set('totalNum',action.payload.data.totalNum).set('likelist',action.payload.data),\r\n        onFailure : (state,action) => state.set('totalNum' ,0)\r\n    })\r\n    }, initialState);"]},"metadata":{},"sourceType":"module"}