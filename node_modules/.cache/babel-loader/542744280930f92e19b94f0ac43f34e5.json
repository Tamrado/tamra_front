{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{Map,List,fromJS}from'immutable';import{handleActions,createAction}from'redux-actions';import{pender}from'redux-pender';import*as CommentAPI from'../../lib/api/comment';var SHOW_POST_COMMENT_LIST='comment/SHOW_POST_COMMENT_LIST';var WRITE_COMMENT='comment/WRITE_COMMENT';var MODIFY_COMMENT='comment/MODIFY_COMMENT';var DELETE_COMMENT='comment/DELETE_COMMENT';var GET_COMMENT_NUM='comment/GET_COMMENT_NUM';export var getCommentNum=createAction(GET_COMMENT_NUM,CommentAPI.getCommentNum);export var showPostCommentList=createAction(SHOW_POST_COMMENT_LIST,CommentAPI.showPostCommentList);export var writeComment=createAction(WRITE_COMMENT,CommentAPI.writeComment);export var modifyComment=createAction(MODIFY_COMMENT,CommentAPI.modifyComment);export var deleteComment=createAction(DELETE_COMMENT,CommentAPI.deleteComment);var initialState=Map({commentList:List(),lastComment:true,result:Map({}),presentComment:Map({}),commentNum:0});export default handleActions(_objectSpread({},pender({type:SHOW_POST_COMMENT_LIST,onSuccess:function onSuccess(state,action){return state.set('commentList',fromJS(action.payload.data.contentlist)).set('lastComment',action.payload.data.last);},onFailure:function onFailure(state,action){return state.set('commentList',List());}}),{},pender({type:WRITE_COMMENT,onSuccess:function onSuccess(state,action){return state.set('presentComment',fromJS(action.payload.data));}}),{},pender({type:MODIFY_COMMENT,onSuccess:function onSuccess(state,action){return state.set('result',action.payload);}}),{},pender({type:DELETE_COMMENT,onSuccess:function onSuccess(state,action){return state.set('result',action.payload);}}),{},pender({type:GET_COMMENT_NUM,onSuccess:function onSuccess(state,action){return state.set('commentNum',action.payload.data);}})),initialState);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/redux/modules/comment.js"],"names":["Map","List","fromJS","handleActions","createAction","pender","CommentAPI","SHOW_POST_COMMENT_LIST","WRITE_COMMENT","MODIFY_COMMENT","DELETE_COMMENT","GET_COMMENT_NUM","getCommentNum","showPostCommentList","writeComment","modifyComment","deleteComment","initialState","commentList","lastComment","result","presentComment","commentNum","type","onSuccess","state","action","set","payload","data","contentlist","last","onFailure"],"mappings":"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","sourcesContent":["import { Map,List,fromJS } from 'immutable';\r\nimport { handleActions, createAction } from 'redux-actions';\r\nimport {pender} from 'redux-pender';\r\nimport * as CommentAPI from '../../lib/api/comment';\r\n\r\nconst SHOW_POST_COMMENT_LIST = 'comment/SHOW_POST_COMMENT_LIST';\r\nconst WRITE_COMMENT = 'comment/WRITE_COMMENT';\r\nconst MODIFY_COMMENT = 'comment/MODIFY_COMMENT';\r\nconst DELETE_COMMENT = 'comment/DELETE_COMMENT';\r\nconst GET_COMMENT_NUM = 'comment/GET_COMMENT_NUM';\r\n\r\nexport const getCommentNum = createAction(GET_COMMENT_NUM,CommentAPI.getCommentNum);\r\nexport const showPostCommentList = createAction(SHOW_POST_COMMENT_LIST,CommentAPI.showPostCommentList);\r\nexport const writeComment = createAction(WRITE_COMMENT,CommentAPI.writeComment);\r\nexport const modifyComment = createAction(MODIFY_COMMENT,CommentAPI.modifyComment);\r\nexport const deleteComment = createAction(DELETE_COMMENT,CommentAPI.deleteComment);\r\n\r\nconst initialState = Map({\r\n    commentList : List(),\r\n    lastComment : true,\r\n    result : Map({}),\r\n    presentComment : Map({}),\r\n    commentNum : 0\r\n});\r\n\r\nexport default handleActions({\r\n    ...pender({\r\n        type : SHOW_POST_COMMENT_LIST,\r\n        onSuccess : (state,action) => state.set('commentList',fromJS(action.payload.data.contentlist)).set('lastComment',action.payload.data.last),\r\n        onFailure : (state,action) => state.set('commentList',List())\r\n        }),\r\n    ...pender({\r\n        type : WRITE_COMMENT,\r\n        onSuccess : (state,action) => state.set('presentComment',fromJS(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type : MODIFY_COMMENT,\r\n        onSuccess : (state,action) => state.set('result',action.payload)\r\n    }),\r\n    ...pender({\r\n        type: DELETE_COMMENT,\r\n        onSuccess : (state,action) => state.set('result',action.payload)\r\n    }),\r\n    ...pender({\r\n        type : GET_COMMENT_NUM,\r\n        onSuccess : (state,action) => state.set('commentNum',action.payload.data)\r\n    })\r\n},initialState);"]},"metadata":{},"sourceType":"module"}