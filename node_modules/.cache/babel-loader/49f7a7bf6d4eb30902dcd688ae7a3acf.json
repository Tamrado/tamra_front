{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Auth\\\\KakaoRegister.js\";\nimport React, { Component } from 'react';\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink, AuthError, Label } from '../../components/Auth';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as authActions from '../../redux/modules/auth';\nimport { isEmail, isAlphanumeric, isLength } from 'validator';\nimport debounce from 'lodash/debounce';\nimport * as userActions from '../../redux/modules/user';\nimport storage from '../../lib/storage';\n\nclass KakaoRegister extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLocalRegister = async () => {\n      const _this$props = this.props,\n            form = _this$props.form,\n            AuthActions = _this$props.AuthActions,\n            error = _this$props.error,\n            history = _this$props.history,\n            UserActions = _this$props.UserActions;\n\n      const _form$toJS = form.toJS(),\n            email = _form$toJS.email,\n            id = _form$toJS.id,\n            password = _form$toJS.password,\n            passwordConfirm = _form$toJS.passwordConfirm,\n            phone = _form$toJS.phone,\n            name = _form$toJS.name,\n            comment = _form$toJS.comment,\n            address = _form$toJS.address,\n            gender = _form$toJS.gender,\n            birthday = _form$toJS.birthday;\n\n      const formData = new FormData();\n      if (this.state.file !== null) formData.append('file', this.state.file);else formData.append('file', null);\n      formData.append('userId', id);\n      const validate = this.validate;\n      if (error) return; //현재 에러 있는 상태라면 진행 x\n\n      if (!validate['email'](email) || !validate['id'](id) || !validate['password'](password) || !validate['passwordConfirm'](passwordConfirm) || !validate['name'](name) || !validate['comment'](comment) || !validate['phone'](phone) || !validate['gender'](gender)) {\n        //하나라도 실패하면 진행 하지 않음\n        return;\n      }\n\n      try {\n        await AuthActions.localRegister({\n          email,\n          id,\n          password,\n          name,\n          comment,\n          phone,\n          address,\n          gender,\n          birthday\n        });\n      } catch (e) {\n        if (e.response.status === 411) this.setError('조건에 맞는 데이터를 입력해주세요.');\n        if (e.response.status === 409) this.setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');\n      }\n\n      try {\n        await AuthActions.localRegisterImage(formData);\n        const loggedInfo = this.props.result.toJS();\n        storage.set('loggedInfo', loggedInfo);\n        UserActions.setLoggedInfo(loggedInfo);\n        UserActions.setValidated(true);\n        history.push('/');\n      } catch (e) {\n        if (e.response.status === 422) this.setError('알 수 없는 에러가 발생했습니다.');\n        if (e.response.status === 409) this.setError('다른 회원의 아이디와 동일합니다. 다시 입력해주세요.');\n        if (e.response.status === 411) this.setError('조건에 맞는 데이터를 입력해주세요.');\n      }\n    };\n\n    this.enterRegister = () => {\n      if (window.event.keyCode === 13) this.handleLocalRegister();\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          error = _this$props2.error,\n          errorId = _this$props2.errorId;\n\n    const _this$props$form$toJS = this.props.form.toJS(),\n          email = _this$props$form$toJS.email,\n          comment = _this$props$form$toJS.comment;\n\n    const handleChange = this.handleChange,\n          handleLocalRegister = this.handleLocalRegister,\n          enterRegister = this.enterRegister;\n    return React.createElement(AuthContent, {\n      title: \"SIGN UP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(InputWithLabel, {\n      label: \"\\uC774\\uBA54\\uC77C\",\n      name: \"email\",\n      placeholder: \"timeline@naver.com\",\n      enter: enterRegister,\n      value: email,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), errorId === 'email' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uCF54\\uBA58\\uD2B8\",\n      name: \"comment\",\n      placeholder: \"\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4.\",\n      enter: enterRegister,\n      value: comment,\n      onChange: handleChange,\n      enter: enterRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), errorId === 'comment' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, error), React.createElement(AuthButton, {\n      onClick: handleLocalRegister,\n      enter: enterRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(RightAlignedLink, {\n      to: \"/auth/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC778\"));\n  }\n\n}\n\nexport default connect(state => ({\n  form: state.auth.getIn(['register', 'form']),\n  error: state.auth.getIn(['register', 'error']),\n  errorId: state.auth.getIn(['register', 'errorId']),\n  result: state.auth.get('result')\n}), dispatch => ({\n  AuthActions: bindActionCreators(authActions, dispatch),\n  UserActions: bindActionCreators(userActions, dispatch)\n}))(Register);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Auth/KakaoRegister.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","AuthError","Label","bindActionCreators","connect","authActions","isEmail","isAlphanumeric","isLength","debounce","userActions","storage","KakaoRegister","handleLocalRegister","props","form","AuthActions","error","history","UserActions","toJS","email","id","password","passwordConfirm","phone","name","comment","address","gender","birthday","formData","FormData","state","file","append","validate","localRegister","e","response","status","setError","localRegisterImage","loggedInfo","result","set","setLoggedInfo","setValidated","push","enterRegister","window","event","keyCode","render","errorId","handleChange","auth","getIn","get","dispatch","Register"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {AuthContent,InputWithLabel,AuthButton,RightAlignedLink,AuthError,Label} from '../../components/Auth';\r\nimport { bindActionCreators } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as authActions from '../../redux/modules/auth';\r\nimport {isEmail,isAlphanumeric,isLength} from 'validator';\r\nimport debounce from 'lodash/debounce';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport storage from '../../lib/storage';\r\n\r\nclass KakaoRegister extends Component{  \r\n    handleLocalRegister = async() => {\r\n        const{form, AuthActions, error, history,UserActions} = this.props;\r\n        const {email, id, password, passwordConfirm, phone,name,comment,address,gender,birthday} = form.toJS();\r\n        const formData = new FormData();\r\n        if(this.state.file !== null)\r\n            formData.append('file',this.state.file);\r\n        else\r\n            formData.append('file',null);\r\n        formData.append('userId',id);\r\n        const {validate} = this;\r\n    \r\n        if(error) return; //현재 에러 있는 상태라면 진행 x\r\n        if(!validate['email'](email)\r\n        || !validate['id'](id)\r\n        || !validate['password'](password)\r\n        || !validate['passwordConfirm'](passwordConfirm)\r\n        || !validate['name'](name)\r\n        || !validate['comment'](comment)\r\n        || !validate['phone'](phone)\r\n        || !validate['gender'](gender)\r\n        ){\r\n            //하나라도 실패하면 진행 하지 않음\r\n            return;\r\n        }\r\n        \r\n        try{\r\n             await AuthActions.localRegister({\r\n                email,id,password,name,comment,phone,address,gender,birthday\r\n            });\r\n        } catch(e){\r\n            if(e.response.status === 411)\r\n                this.setError('조건에 맞는 데이터를 입력해주세요.');\r\n            if(e.response.status === 409)\r\n                this.setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');\r\n        }\r\n        try{\r\n             await AuthActions.localRegisterImage(\r\n                formData\r\n            );\r\n            const loggedInfo = this.props.result.toJS();\r\n            storage.set('loggedInfo', loggedInfo);\r\n            UserActions.setLoggedInfo(loggedInfo);\r\n            UserActions.setValidated(true);\r\n            history.push('/');\r\n        } catch(e){\r\n            if(e.response.status === 422)\r\n                this.setError('알 수 없는 에러가 발생했습니다.');\r\n            if(e.response.status === 409)\r\n                this.setError('다른 회원의 아이디와 동일합니다. 다시 입력해주세요.');\r\n            if(e.response.status === 411)\r\n                this.setError('조건에 맞는 데이터를 입력해주세요.');\r\n        }\r\n        }\r\n        enterRegister = () => {\r\n            if(window.event.keyCode === 13)\r\n              this.handleLocalRegister();\r\n        }\r\nrender(){\r\n    const {error,errorId} = this.props;\r\n        const {email,comment} = this.props.form.toJS();\r\n        const {handleChange,handleLocalRegister,enterRegister} = this;\r\n    return(\r\n        <AuthContent title='SIGN UP'>\r\n                <InputWithLabel label = \"이메일\" name=\"email\" placeholder=\"timeline@naver.com\" enter = {enterRegister}\r\n                value = {email}\r\n                onChange={handleChange}/>\r\n                 {\r\n                    errorId === 'email' &&error && <AuthError>{error}</AuthError>\r\n                }               \r\n                <InputWithLabel label = \"코멘트\" name=\"comment\" placeholder=\"반갑습니다.\" enter = {enterRegister}\r\n                value = {comment} onChange={handleChange} enter = {enterRegister}/>\r\n                {\r\n                    errorId === 'comment' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <AuthButton onClick={handleLocalRegister} enter = {enterRegister}>회원가입</AuthButton>\r\n                <RightAlignedLink to=\"/auth/login\">로그인</RightAlignedLink>\r\n            </AuthContent>\r\n    );\r\n}\r\n}\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['register','form']),\r\n        error: state.auth.getIn(['register','error']),\r\n        errorId: state.auth.getIn(['register','errorId']),\r\n        result: state.auth.get('result')\r\n    }),\r\n    (dispatch)=>({\r\n        AuthActions : bindActionCreators(authActions,dispatch),\r\n        UserActions : bindActionCreators(userActions, dispatch)\r\n    })\r\n)(Register);"]},"metadata":{},"sourceType":"module"}