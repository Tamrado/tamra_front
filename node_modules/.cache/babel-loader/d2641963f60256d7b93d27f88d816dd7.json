{"ast":null,"code":"import React, { Component } from 'react';\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink, AuthError, Label } from '../../components/Auth';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as authActions from '../../redux/modules/auth';\nimport { isEmail, isAlphanumeric, isLength } from 'validator';\nimport debounce from 'lodash/debounce';\nimport * as userActions from '../../redux/modules/user';\nimport storage from '../../lib/storage';\n\nclass KakaoRegister extends Component {\n  reder() {}\n\n}\n\nexport default connect(state => ({\n  form: state.auth.getIn(['register', 'form']),\n  error: state.auth.getIn(['register', 'error']),\n  errorId: state.auth.getIn(['register', 'errorId']),\n  result: state.auth.get('result')\n}), dispatch => ({\n  AuthActions: bindActionCreators(authActions, dispatch),\n  UserActions: bindActionCreators(userActions, dispatch)\n}))(Register);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Auth/KakaoRegister.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","AuthError","Label","bindActionCreators","connect","authActions","isEmail","isAlphanumeric","isLength","debounce","userActions","storage","KakaoRegister","reder","state","form","auth","getIn","error","errorId","result","get","dispatch","AuthActions","UserActions","Register"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAoBC,cAApB,EAAmCC,UAAnC,EAA8CC,gBAA9C,EAA+DC,SAA/D,EAAyEC,KAAzE,QAAqF,uBAArF;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,SAAQC,OAAR,EAAgBC,cAAhB,EAA+BC,QAA/B,QAA8C,WAA9C;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,aAAN,SAA4BhB,SAA5B,CAAqC;AACrCiB,EAAAA,KAAK,GAAE,CAEN;;AAHoC;;AAKrC,eAAeT,OAAO,CACjBU,KAAD,KAAY;AACRC,EAAAA,IAAI,EAAED,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiB,CAAC,UAAD,EAAY,MAAZ,CAAjB,CADE;AAERC,EAAAA,KAAK,EAAEJ,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiB,CAAC,UAAD,EAAY,OAAZ,CAAjB,CAFC;AAGRE,EAAAA,OAAO,EAAEL,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiB,CAAC,UAAD,EAAY,SAAZ,CAAjB,CAHD;AAIRG,EAAAA,MAAM,EAAEN,KAAK,CAACE,IAAN,CAAWK,GAAX,CAAe,QAAf;AAJA,CAAZ,CADkB,EAOjBC,QAAD,KAAa;AACTC,EAAAA,WAAW,EAAGpB,kBAAkB,CAACE,WAAD,EAAaiB,QAAb,CADvB;AAETE,EAAAA,WAAW,EAAGrB,kBAAkB,CAACO,WAAD,EAAcY,QAAd;AAFvB,CAAb,CAPkB,CAAP,CAWbG,QAXa,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {AuthContent,InputWithLabel,AuthButton,RightAlignedLink,AuthError,Label} from '../../components/Auth';\r\nimport { bindActionCreators } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as authActions from '../../redux/modules/auth';\r\nimport {isEmail,isAlphanumeric,isLength} from 'validator';\r\nimport debounce from 'lodash/debounce';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport storage from '../../lib/storage';\r\n\r\nclass KakaoRegister extends Component{  \r\nreder(){\r\n    \r\n}\r\n}\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['register','form']),\r\n        error: state.auth.getIn(['register','error']),\r\n        errorId: state.auth.getIn(['register','errorId']),\r\n        result: state.auth.get('result')\r\n    }),\r\n    (dispatch)=>({\r\n        AuthActions : bindActionCreators(authActions,dispatch),\r\n        UserActions : bindActionCreators(userActions, dispatch)\r\n    })\r\n)(Register);"]},"metadata":{},"sourceType":"module"}