{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Base\\\\HeaderContainer.js\";\nimport React, { Component } from 'react';\nimport Header, { RegisterButton, UserThumbnail, SearchList, Setting } from '../../components/Header';\nimport { FollowList } from '../../components/FollowMenu';\nimport { AlarmList } from '../../components/Alarm';\nimport { connect } from 'react-redux';\nimport * as userActions from '../../redux/modules/user';\nimport * as baseActions from '../../redux/modules/base';\nimport * as friendActions from '../../redux/modules/friend';\nimport * as searchActions from '../../redux/modules/search';\nimport * as alarmActions from '../../redux/modules/alarm';\nimport { bindActionCreators } from 'redux';\nimport UserMenuContainer from './UserMenuContainer';\nimport menuImage from '../../build/static/images/iconmonstr-arrow-80-24.png';\nimport alarmImage from '../../build/static/images/iconmonstr-bell-thin-32.png';\nimport friendRequestImage from '../../build/static/images/iconmonstr-user-29-32.png';\nimport mypageImage from '../../build/static/images/iconmonstr-gear-10-32.png';\nimport hoverMenuImage from '../../build/static/images/iconmonstr-arrow-80-12.png';\nimport hoverAlarmImage from '../../build/static/images/iconmonstr-bell-thin-32 (1).png';\nimport hoverFriendRequestImage from '../../build/static/images/iconmonstr-user-29-32 (1).png';\nimport hoverMypageImage from '../../build/static/images/iconmonstr-gear-10-32 (1).png';\nimport { dateTimeModule } from '../Function/date';\n\nclass HeaderContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friendRequestVisible: 'none',\n      alarmNumVisible: 'none',\n      mypageVisible: 'none',\n      mVisible: 'none',\n      noFriendAddVisible: 'none',\n      alarmNonevisible: 'none'\n    };\n\n    this.getFollowRequest = async () => {\n      const _this$props = this.props,\n            FriendActions = _this$props.FriendActions,\n            followRequest = _this$props.followRequest;\n\n      try {\n        await FriendActions.getFriendAlarmInfo();\n        this.setState({\n          friendRequestVisible: 'block',\n          noFriendAddVisible: 'none'\n        });\n      } catch (e) {\n        console.log(e);\n        this.setState({\n          friendRequestVisible: 'none',\n          noFriendAddVisible: 'block'\n        });\n        return;\n      }\n    };\n\n    this.getAlarm = async () => {\n      const AlarmActions = this.props.AlarmActions;\n\n      try {\n        await AlarmActions.getAlarmNum();\n        await AlarmActions.getAlarm();\n        const _this$props2 = this.props,\n              alarmList = _this$props2.alarmList,\n              alarmNum = _this$props2.alarmNum;\n        alarmList.map(async (alarm, index) => {\n          let time = alarm.get('timestamp');\n          let dateString = this.dateTimeToFormatted(time);\n          await AlarmActions.setAlarmTime({\n            dateString: dateString,\n            index: index\n          });\n        });\n        if (alarmList.size > 0) this.setState({\n          alarmNonevisible: 'none'\n        });else this.setState({\n          alarmNonevisible: 'block'\n        });\n        if (alarmNum > 0) this.setState({\n          alarmNumVisible: 'block'\n        });else this.setState({\n          alarmNumVisible: 'none'\n        });\n      } catch (e) {\n        this.setState({\n          alarmNonevisible: 'block',\n          alarmNumVisible: 'none'\n        });\n      }\n    };\n\n    this.setFollowNotificationUnavailable = async e => {\n      const FriendActions = this.props.FriendActions;\n      const id = e.target.id;\n\n      try {\n        console.log(id);\n        await FriendActions.deleteFriendAlarmNotification({\n          'userId': id\n        });\n        this.handleFriendRequestClick();\n        this.getFollowRequest();\n      } catch (e) {\n        console.log(e);\n        return;\n      }\n    };\n\n    this.handleThumbnailClick = () => {\n      const _this$props3 = this.props,\n            BaseActions = _this$props3.BaseActions,\n            userMenuVisible = _this$props3.userMenuVisible;\n      if (userMenuVisible === 'none') BaseActions.setUserMenuVisibility('block');else BaseActions.setUserMenuVisibility('none');\n    };\n\n    this.handleAlarmClick = () => {\n      const _this$props4 = this.props,\n            BaseActions = _this$props4.BaseActions,\n            alarmMenuVisible = _this$props4.alarmMenuVisible;\n\n      if (alarmMenuVisible === 'none') {\n        BaseActions.setAlarmMenuVisible('block');\n        BaseActions.setFollowMenuVisible('none');\n        BaseActions.setUserMenuVisibility('none');\n      } else BaseActions.setAlarmMenuVisible('none');\n    };\n\n    this.handleFriendRequestClick = () => {\n      const _this$props5 = this.props,\n            BaseActions = _this$props5.BaseActions,\n            followMenuVisible = _this$props5.followMenuVisible;\n\n      if (followMenuVisible === 'none') {\n        BaseActions.setAlarmMenuVisible('none');\n        BaseActions.setFollowMenuVisible('block');\n        BaseActions.setUserMenuVisibility('none');\n      } else BaseActions.setFollowMenuVisible('none');\n    };\n\n    this.handleMyPageClick = () => {\n      const username = this.props.username;\n      window.location.href = '/@' + username + '/password';\n    };\n\n    this.follow = e => {\n      const FriendActions = this.props.FriendActions;\n      const id = e.target.id;\n\n      try {\n        FriendActions.follow(id);\n        this.handleFriendRequestClick();\n        window.location.reload();\n      } catch (e) {\n        return;\n      }\n    };\n\n    this.handleProfileClick = () => {\n      const username = this.props.username;\n      window.location.href = `/@:${username}`;\n    };\n\n    this.handleSearchBox = async e => {\n      const SearchActions = this.props.SearchActions;\n      const innerText = e.target.innerText;\n      await SearchActions.setHeaderContent(innerText);\n      const headerContent = this.props.headerContent;\n\n      try {\n        await SearchActions.searchInHeader(headerContent, 1, 5);\n      } catch (e) {\n        SearchActions.setEmptyUserlist();\n      }\n\n      await SearchActions.setHeaderVisible('block');\n    };\n\n    this.handleSearchClick = async () => {\n      const _this$props6 = this.props,\n            SearchActions = _this$props6.SearchActions,\n            page = _this$props6.page,\n            headerContent = _this$props6.headerContent;\n      await SearchActions.searchInHeader(headerContent, page, 10);\n      await SearchActions.setEmptyUserlist();\n      await SearchActions.setAddPage();\n    };\n\n    this.handleUserClick = async e => {\n      window.location.href = `/@:${e.target.id}`;\n    };\n\n    this.handleClickHome = () => {\n      window.location.href = '/';\n    };\n\n    this.handleAllRead = async () => {\n      const _this$props7 = this.props,\n            AlarmActions = _this$props7.AlarmActions,\n            BaseActions = _this$props7.BaseActions;\n      await AlarmActions.setAllReadAlarm();\n      await this.getAlarm();\n      BaseActions.setAlarmMenuVisible('none');\n    };\n  }\n\n  componentDidMount() {\n    this.getFollowRequest();\n    this.getAlarm();\n  }\n\n  render() {\n    const _this$props8 = this.props,\n          visible = _this$props8.visible,\n          user = _this$props8.user,\n          followRequest = _this$props8.followRequest,\n          friendRequestNum = _this$props8.friendRequestNum,\n          headerVisible = _this$props8.headerVisible,\n          alarmMenuVisible = _this$props8.alarmMenuVisible,\n          userList = _this$props8.userList,\n          headerContent = _this$props8.headerContent,\n          alarmList = _this$props8.alarmList,\n          alarmNum = _this$props8.alarmNum,\n          userMenuVisible = _this$props8.userMenuVisible,\n          followMenuVisible = _this$props8.followMenuVisible;\n    const _this$state = this.state,\n          friendRequestVisible = _this$state.friendRequestVisible,\n          alarmNumVisible = _this$state.alarmNumVisible,\n          friendvisible = _this$state.friendvisible,\n          alarmNonevisible = _this$state.alarmNonevisible,\n          mypageVisible = _this$state.mypageVisible,\n          mVisible = _this$state.mVisible,\n          noFriendAddVisible = _this$state.noFriendAddVisible;\n    const handleThumbnailClick = this.handleThumbnailClick,\n          handleAlarmClick = this.handleAlarmClick,\n          handleFriendRequestClick = this.handleFriendRequestClick,\n          handleMyPageClick = this.handleMyPageClick,\n          follow = this.follow,\n          setFollowNotificationUnavailable = this.setFollowNotificationUnavailable,\n          handleSearchBox = this.handleSearchBox,\n          handleUserClick = this.handleUserClick,\n          handleProfileClick = this.handleProfileClick,\n          handleClickHome = this.handleClickHome,\n          handleAllRead = this.handleAllRead,\n          handleAlarmInfoClick = this.handleAlarmInfoClick;\n    let content,\n        search,\n        alarm,\n        friendRequest,\n        mypage,\n        menu,\n        menuVisible = null;\n    if (!visible) return null;\n\n    if (user.get('logged')) {\n      content = React.createElement(UserThumbnail, {\n        profileClick: handleProfileClick,\n        username: user.getIn(['loggedInfo', 'username']),\n        thumbnail: user.getIn(['loggedInfo', 'thumbnail']),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      });\n      search = React.createElement(SearchList, {\n        userclick: handleUserClick,\n        onclick: handleSearchBox,\n        visible: headerVisible,\n        users: userList,\n        nickname: headerContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      });\n      alarm = React.createElement(Setting, {\n        key: 'alarm',\n        resultvisible: alarmNumVisible,\n        alarmNum: alarmNum,\n        image: alarmImage,\n        size: '30px',\n        onclick: handleAlarmClick,\n        hoverimg: hoverAlarmImage,\n        tvisible: alarmMenuVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      });\n      friendRequest = React.createElement(Setting, {\n        key: 'friendRequest',\n        tvisible: followMenuVisible,\n        resultvisible: friendRequestVisible,\n        image: friendRequestImage,\n        size: '30px',\n        onclick: handleFriendRequestClick,\n        hoverimg: hoverFriendRequestImage,\n        alarmNum: friendRequestNum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      });\n      mypage = React.createElement(Setting, {\n        key: 'mypage',\n        tvisible: 'none',\n        resultvisible: mypageVisible,\n        image: mypageImage,\n        size: '35px',\n        onclick: handleMyPageClick,\n        hoverimg: hoverMypageImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      });\n      menu = React.createElement(Setting, {\n        key: 'menu',\n        left: '10px',\n        tvisible: userMenuVisible,\n        resultvisible: mVisible,\n        image: menuImage,\n        size: '12px',\n        hoverimg: hoverMenuImage,\n        onclick: handleThumbnailClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      });\n    } else {\n      content = React.createElement(RegisterButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Header, {\n      home: handleClickHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, search, content, alarm, friendRequest, mypage, menu, React.createElement(AlarmList, {\n      alarms: alarmList,\n      visible: alarmMenuVisible,\n      alarmvisible: alarmNonevisible,\n      handleAllRead: handleAllRead,\n      handleAlarmInfoClick: handleAlarmInfoClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(FollowList, {\n      friend: followRequest,\n      deleteclick: setFollowNotificationUnavailable,\n      follow: follow,\n      visible: followMenuVisible,\n      result: friendRequestVisible,\n      friendvisible: noFriendAddVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(UserMenuContainer, {\n      eventTypes: \"click\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  userMenuVisible: state.base.get('userMenuVisible'),\n  visible: state.base.getIn(['header', 'visible']),\n  username: state.user.getIn(['loggedInfo', 'username']),\n  user: state.user,\n  followRequest: state.friend.get('alarm'),\n  friendRequestNum: state.friend.get('friendRequestNum'),\n  headerContent: state.search.get('headerContent'),\n  userList: state.search.get('userList'),\n  headerVisble: state.search.get('headervisible'),\n  alarmList: state.alarm.get('alarmList'),\n  alarmNum: state.alarm.get('alarmNum'),\n  followMenuVisible: state.base.get('followMenuVisible'),\n  alarmMenuVisible: state.base.get('alarmMenuVisible')\n}), dispatch => ({\n  UserActions: bindActionCreators(userActions, dispatch),\n  BaseActions: bindActionCreators(baseActions, dispatch),\n  FriendActions: bindActionCreators(friendActions, dispatch),\n  SearchActions: bindActionCreators(searchActions, dispatch),\n  AlarmActions: bindActionCreators(alarmActions, dispatch)\n}))(HeaderContainer);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Base/HeaderContainer.js"],"names":["React","Component","Header","RegisterButton","UserThumbnail","SearchList","Setting","FollowList","AlarmList","connect","userActions","baseActions","friendActions","searchActions","alarmActions","bindActionCreators","UserMenuContainer","menuImage","alarmImage","friendRequestImage","mypageImage","hoverMenuImage","hoverAlarmImage","hoverFriendRequestImage","hoverMypageImage","dateTimeModule","HeaderContainer","state","friendRequestVisible","alarmNumVisible","mypageVisible","mVisible","noFriendAddVisible","alarmNonevisible","getFollowRequest","props","FriendActions","followRequest","getFriendAlarmInfo","setState","e","console","log","getAlarm","AlarmActions","getAlarmNum","alarmList","alarmNum","map","alarm","index","time","get","dateString","dateTimeToFormatted","setAlarmTime","size","setFollowNotificationUnavailable","id","target","deleteFriendAlarmNotification","handleFriendRequestClick","handleThumbnailClick","BaseActions","userMenuVisible","setUserMenuVisibility","handleAlarmClick","alarmMenuVisible","setAlarmMenuVisible","setFollowMenuVisible","followMenuVisible","handleMyPageClick","username","window","location","href","follow","reload","handleProfileClick","handleSearchBox","SearchActions","innerText","setHeaderContent","headerContent","searchInHeader","setEmptyUserlist","setHeaderVisible","handleSearchClick","page","setAddPage","handleUserClick","handleClickHome","handleAllRead","setAllReadAlarm","componentDidMount","render","visible","user","friendRequestNum","headerVisible","userList","friendvisible","handleAlarmInfoClick","content","search","friendRequest","mypage","menu","menuVisible","getIn","base","friend","headerVisble","dispatch","UserActions"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Header, {RegisterButton,UserThumbnail,SearchList,Setting} from '../../components/Header';\r\nimport {FollowList} from '../../components/FollowMenu';\r\nimport {AlarmList} from '../../components/Alarm';\r\nimport {connect} from 'react-redux';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport * as baseActions from '../../redux/modules/base';\r\nimport * as friendActions from '../../redux/modules/friend';\r\nimport * as searchActions from '../../redux/modules/search';\r\nimport * as alarmActions from '../../redux/modules/alarm';\r\nimport {bindActionCreators} from 'redux';\r\nimport UserMenuContainer from './UserMenuContainer';\r\nimport menuImage from '../../build/static/images/iconmonstr-arrow-80-24.png';\r\nimport alarmImage from '../../build/static/images/iconmonstr-bell-thin-32.png';\r\nimport friendRequestImage from '../../build/static/images/iconmonstr-user-29-32.png';\r\nimport mypageImage from '../../build/static/images/iconmonstr-gear-10-32.png';\r\nimport hoverMenuImage from '../../build/static/images/iconmonstr-arrow-80-12.png';\r\nimport hoverAlarmImage from '../../build/static/images/iconmonstr-bell-thin-32 (1).png';\r\nimport hoverFriendRequestImage from '../../build/static/images/iconmonstr-user-29-32 (1).png';\r\nimport hoverMypageImage from '../../build/static/images/iconmonstr-gear-10-32 (1).png';\r\nimport {dateTimeModule} from '../Function/date'\r\nclass HeaderContainer extends Component {\r\n    state = {\r\n        friendRequestVisible : 'none',\r\n        alarmNumVisible : 'none',\r\n        mypageVisible : 'none',\r\n        mVisible : 'none',\r\n        noFriendAddVisible : 'none',\r\n        alarmNonevisible : 'none'\r\n    }\r\n    \r\n    componentDidMount() {\r\n       this.getFollowRequest();\r\n       this.getAlarm();\r\n    }\r\n    getFollowRequest = async() => {\r\n        const {FriendActions,followRequest} = this.props;\r\n        try{\r\n            await FriendActions.getFriendAlarmInfo();\r\n        this.setState({\r\n                friendRequestVisible : 'block',\r\n                noFriendAddVisible : 'none'\r\n            });\r\n        }catch(e){\r\n            console.log(e);\r\n            this.setState({\r\n                friendRequestVisible : 'none',\r\n                noFriendAddVisible : 'block'\r\n            });\r\n            return;\r\n        }\r\n    }\r\n    getAlarm = async () => {\r\n        const {AlarmActions} = this.props;\r\n        try{\r\n            await AlarmActions.getAlarmNum();\r\n            await AlarmActions.getAlarm();\r\n\r\n            const {alarmList,alarmNum} = this.props;\r\n            alarmList.map(\r\n                async(alarm,index) =>{\r\n                    let time = alarm.get('timestamp');\r\n                            let dateString = this.dateTimeToFormatted(time);\r\n                            await AlarmActions.setAlarmTime({dateString:dateString,index : index});\r\n                }\r\n            )\r\n            if(alarmList.size > 0)\r\n            this.setState({ alarmNonevisible : 'none'});\r\n            else\r\n                this.setState({ alarmNonevisible : 'block'});\r\n            if(alarmNum > 0)\r\n                this.setState({alarmNumVisible : 'block'});\r\n            else\r\n                this.setState({alarmNumVisible: 'none'});\r\n            \r\n        }catch(e){\r\n            this.setState({\r\n                alarmNonevisible : 'block',\r\n                alarmNumVisible : 'none'\r\n            });\r\n        }\r\n    }\r\n    setFollowNotificationUnavailable = async(e) => {\r\n        const {FriendActions} = this.props;\r\n        const {id} = e.target;\r\n        try{\r\n            console.log(id);\r\n            await FriendActions.deleteFriendAlarmNotification({'userId' : id});\r\n            this.handleFriendRequestClick();\r\n            this.getFollowRequest();\r\n            \r\n        }catch(e){\r\n            console.log(e);\r\n            return;\r\n        }\r\n    }\r\n    handleThumbnailClick = () => {\r\n        const {BaseActions,userMenuVisible} = this.props;\r\n        if(userMenuVisible === 'none')\r\n            BaseActions.setUserMenuVisibility('block');\r\n        \r\n        else BaseActions.setUserMenuVisibility('none');\r\n    }\r\n\r\n    handleAlarmClick = () => {\r\n        const{BaseActions,alarmMenuVisible} = this.props;\r\n     if(alarmMenuVisible === 'none'){\r\n        BaseActions.setAlarmMenuVisible('block');\r\n        BaseActions.setFollowMenuVisible('none');\r\n        BaseActions.setUserMenuVisibility('none');\r\n    }\r\n     else\r\n        BaseActions.setAlarmMenuVisible('none');\r\n    }\r\n\r\n    handleFriendRequestClick = () => {\r\n        const{BaseActions,followMenuVisible} = this.props;\r\n        if(followMenuVisible === 'none'){\r\n            BaseActions.setAlarmMenuVisible('none');\r\n        BaseActions.setFollowMenuVisible('block');\r\n        BaseActions.setUserMenuVisibility('none');\r\n    }\r\n        else\r\n        BaseActions.setFollowMenuVisible('none');\r\n    }\r\n    handleMyPageClick = () => {\r\n        const {username} = this.props;\r\n        window.location.href = '/@' + username+'/password';\r\n    }\r\n    follow = (e) => {\r\n        const {FriendActions} = this.props;\r\n        const {id} = e.target;\r\n        try{\r\n        FriendActions.follow(id);\r\n        this.handleFriendRequestClick();\r\n        window.location.reload();\r\n        }catch(e){\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleProfileClick = () => {\r\n        const{username} = this.props;\r\n        window.location.href =`/@:${username}`;\r\n    }\r\n\r\n    handleSearchBox = async(e) => {\r\n        const {SearchActions} = this.props;\r\n        const {innerText} = e.target;\r\n        \r\n        await SearchActions.setHeaderContent(innerText);\r\n        const {headerContent} = this.props;\r\n        try{\r\n        await SearchActions.searchInHeader(headerContent,1,5);\r\n        }catch(e){\r\n            SearchActions.setEmptyUserlist();\r\n        }\r\n        await SearchActions.setHeaderVisible('block');\r\n    }\r\n\r\n    handleSearchClick = async() => {\r\n        const {SearchActions,page,headerContent} = this.props;\r\n        await SearchActions.searchInHeader(headerContent,page,10);\r\n        await SearchActions.setEmptyUserlist();\r\n        await SearchActions.setAddPage();\r\n    }\r\n\r\n    handleUserClick = async(e) => {\r\n        window.location.href = `/@:${e.target.id}`;\r\n    }\r\n    handleClickHome = () => {\r\n        window.location.href = '/';\r\n    }\r\n    handleAllRead = async() => {\r\n        const {AlarmActions,BaseActions} = this.props;\r\n        await AlarmActions.setAllReadAlarm();\r\n        await this.getAlarm();\r\n        BaseActions.setAlarmMenuVisible('none');\r\n\r\n    }\r\n\r\n    render(){\r\n    const {visible, user,followRequest,friendRequestNum,headerVisible,alarmMenuVisible,\r\n        userList,headerContent,alarmList,alarmNum,userMenuVisible,followMenuVisible} = this.props;\r\n    const{friendRequestVisible,alarmNumVisible, friendvisible,alarmNonevisible,\r\n        mypageVisible,mVisible,noFriendAddVisible} = this.state;\r\n    const {handleThumbnailClick,handleAlarmClick,handleFriendRequestClick,handleMyPageClick\r\n        ,follow,setFollowNotificationUnavailable,handleSearchBox,handleUserClick,handleProfileClick,\r\n        handleClickHome,handleAllRead,handleAlarmInfoClick} = this;\r\n    let content,search,alarm,friendRequest,mypage,menu,menuVisible = null;\r\n    \r\n    if(!visible) return null;\r\n\r\n    if(user.get('logged')){\r\n        content = <UserThumbnail profileClick={handleProfileClick}  username={user.getIn(['loggedInfo','username'])} thumbnail={user.getIn(['loggedInfo','thumbnail'])} />;\r\n        search = <SearchList userclick = {handleUserClick}\r\n         onclick = {handleSearchBox} visible={headerVisible} users={userList} nickname={headerContent}/>;\r\n        alarm = <Setting key={'alarm'} resultvisible = {alarmNumVisible} alarmNum = {alarmNum}image = {alarmImage} size = {'30px'}\r\n         onclick = {handleAlarmClick} hoverimg={hoverAlarmImage} tvisible={alarmMenuVisible}/>;\r\n        \r\n        friendRequest = <Setting key={'friendRequest'} tvisible={followMenuVisible} resultvisible={friendRequestVisible} image = {friendRequestImage} size ={'30px'}\r\n         onclick = {handleFriendRequestClick} hoverimg={hoverFriendRequestImage} alarmNum = {friendRequestNum}/>;\r\n        \r\n         mypage = <Setting key={'mypage'} tvisible = {'none'}resultvisible={mypageVisible} image = {mypageImage} size = {'35px'} onclick = {handleMyPageClick} hoverimg={hoverMypageImage}/>;\r\n        \r\n         menu = <Setting key={'menu'} left ={'10px'} tvisible = {userMenuVisible} resultvisible={mVisible} image = {menuImage} size = {'12px'}  hoverimg = {hoverMenuImage} onclick={handleThumbnailClick}/>;\r\n    }\r\n    else{\r\n        content = <RegisterButton/>;\r\n    }\r\n        return(\r\n            \r\n            <Header home={handleClickHome}>\r\n                {search}\r\n                {content}\r\n                {alarm}\r\n                {friendRequest}\r\n                {mypage}\r\n                {menu}\r\n                <AlarmList alarms={alarmList} visible={alarmMenuVisible} alarmvisible={alarmNonevisible}\r\n                handleAllRead={handleAllRead} handleAlarmInfoClick={handleAlarmInfoClick}/>\r\n                <FollowList friend = {followRequest} deleteclick={setFollowNotificationUnavailable}\r\n                follow = {follow} visible = {followMenuVisible} result={friendRequestVisible} \r\n                friendvisible = {noFriendAddVisible} />\r\n                <UserMenuContainer eventTypes=\"click\"/>\r\n           </Header>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    (state) => ({\r\n        userMenuVisible : state.base.get('userMenuVisible'),\r\n        visible: state.base.getIn(['header', 'visible']),\r\n        username: state.user.getIn(['loggedInfo','username']),\r\n        user: state.user,\r\n        followRequest : state.friend.get('alarm'),\r\n        friendRequestNum : state.friend.get('friendRequestNum'),\r\n        headerContent : state.search.get('headerContent'),\r\n        userList : state.search.get('userList'),\r\n        headerVisble : state.search.get('headervisible'),\r\n        alarmList : state.alarm.get('alarmList'),\r\n        alarmNum : state.alarm.get('alarmNum'),\r\n        followMenuVisible : state.base.get('followMenuVisible'),\r\n        alarmMenuVisible : state.base.get('alarmMenuVisible')\r\n    }),\r\n    (dispatch) => ({\r\n        UserActions: bindActionCreators(userActions, dispatch),\r\n        BaseActions: bindActionCreators(baseActions,dispatch),\r\n        FriendActions : bindActionCreators(friendActions,dispatch),\r\n        SearchActions : bindActionCreators(searchActions,dispatch),\r\n        AlarmActions : bindActionCreators(alarmActions,dispatch)\r\n    })\r\n) (HeaderContainer);"]},"metadata":{},"sourceType":"module"}