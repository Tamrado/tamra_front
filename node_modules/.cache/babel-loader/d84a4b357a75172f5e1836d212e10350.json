{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\pages\\\\AuthLogin.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as baseActions from '../redux/modules/base';\nimport { AuthWrapper } from '../components/Auth';\nimport { Route } from 'react-router-dom';\nimport { Login, KakaoLogin } from '../containers/Auth';\n\nclass AuthLogin extends Component {\n  render() {\n    const history = this.props.history;\n    return React.createElement(AuthWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(KakaoLogin, {\n      history: history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/auth/Login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({}), //상태값 수정할 때 사용되는 메소드\ndispatch => ({\n  // bindActionCreators 는 액션함수들을 자동으로 바인딩해줍니다.\n  BaseActions: bindActionCreators(baseActions, dispatch)\n}))(AuthLogin);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/pages/AuthLogin.js"],"names":["React","Component","connect","bindActionCreators","baseActions","AuthWrapper","Route","Login","KakaoLogin","AuthLogin","render","history","props","state","dispatch","BaseActions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAO,KAAKC,WAAZ,MAA6B,uBAA7B;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,KAAR,EAAcC,UAAd,QAA+B,oBAA/B;;AACA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAE9BS,EAAAA,MAAM,GAAG;AAAA,UACEC,OADF,GACa,KAAKC,KADlB,CACED,OADF;AAEL,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAEJ,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ;AAMH;;AAV6B;;AAalC,eAAeL,OAAO,CACjBW,KAAD,KAAY,EAAZ,CADkB,EAIlB;AACCC,QAAD,KAAe;AACX;AACAC,EAAAA,WAAW,EAAGZ,kBAAkB,CAACC,WAAD,EAAcU,QAAd;AAFrB,CAAf,CALkB,CAAP,CASbL,SATa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as baseActions from '../redux/modules/base';\r\nimport {AuthWrapper} from '../components/Auth';\r\nimport {Route} from 'react-router-dom';\r\nimport {Login,KakaoLogin} from '../containers/Auth';\r\nclass AuthLogin extends Component {\r\n\r\n    render() {\r\n        const {history} = this.props;  \r\n        return (\r\n            <AuthWrapper>\r\n               <KakaoLogin history={history} />\r\n            <Route path=\"/auth/Login\" component={Login}/>\r\n            </AuthWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n\r\n    }),\r\n    //상태값 수정할 때 사용되는 메소드\r\n    (dispatch) => ({\r\n        // bindActionCreators 는 액션함수들을 자동으로 바인딩해줍니다.\r\n        BaseActions : bindActionCreators(baseActions, dispatch)\r\n    })\r\n)(AuthLogin);"]},"metadata":{},"sourceType":"module"}