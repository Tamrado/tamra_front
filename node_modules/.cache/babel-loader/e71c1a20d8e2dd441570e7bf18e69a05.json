{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _classCallCheck from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{AuthContent,InputWithLabel,AuthButton,RightAlignedLink,AuthError,Label}from'../../components/Auth';import{bindActionCreators}from'redux';import{connect}from'react-redux';import*as authActions from'../../redux/modules/auth';import{isEmail,isLength}from'validator';import debounce from'lodash/debounce';import*as userActions from'../../redux/modules/user';import storage from'../../lib/storage';var KakaoRegister=/*#__PURE__*/function(_Component){_inherits(KakaoRegister,_Component);function KakaoRegister(){var _getPrototypeOf2;var _this;_classCallCheck(this,KakaoRegister);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(KakaoRegister)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.setError=function(message,id){var AuthActions=_this.props.AuthActions;AuthActions.setError({form:'register',message:message});AuthActions.setErrorId({form:'register',id:id});};_this.checkEmailExists=debounce(function _callee(email){var AuthActions;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:AuthActions=_this.props.AuthActions;_context.prev=1;_context.next=4;return _regeneratorRuntime.awrap(AuthActions.checkEmailExists(email,'null'));case 4:_this.setError(null,'email');_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);_this.setError('이미 존재하는 이메일입니다.','email');case 10:case\"end\":return _context.stop();}}},null,null,[[1,7]]);},300);_this.validate={email:function email(value){if(!isEmail(value)){_this.setError('잘못된 이메일 형식 입니다.','email');return false;}return true;},comment:function comment(value){if(!isLength(value,{min:0,max:50})){_this.setError('코멘트는 50자를 넘길 수 없습니다.','comment');return false;}_this.setError(null);return true;}};_this.handleChange=function(e){var AuthActions=_this.props.AuthActions;var _e$target=e.target,name=_e$target.name,value=_e$target.value;AuthActions.changeInput({name:name,value:value,form:'register'});var validation=_this.validate[name](value);if(name.indexOf('email')>-1)_this.checkEmailExists(value);};_this.handleLocalRegister=function _callee2(){var _this$props,form,AuthActions,error,history,UserActions,match,id,_form$toJS,email,comment,_assertThisInitialize,validate,loggedInfo;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_this$props=_this.props,form=_this$props.form,AuthActions=_this$props.AuthActions,error=_this$props.error,history=_this$props.history,UserActions=_this$props.UserActions,match=_this$props.match;id=match.params.id;_form$toJS=form.toJS(),email=_form$toJS.email,comment=_form$toJS.comment;_assertThisInitialize=_assertThisInitialized(_this),validate=_assertThisInitialize.validate;if(!error){_context2.next=6;break;}return _context2.abrupt(\"return\");case 6:if(!(!validate['email'](email)||!validate['comment'](comment))){_context2.next=8;break;}return _context2.abrupt(\"return\");case 8:_context2.prev=8;_context2.next=11;return _regeneratorRuntime.awrap(AuthActions.kakaoRegister({email:email,id:id,comment:comment}));case 11:loggedInfo=_this.props.result.toJS();storage.set('loggedInfo',loggedInfo);UserActions.setLoggedInfo(loggedInfo);UserActions.setValidated(true);history.push('/');_context2.next=22;break;case 18:_context2.prev=18;_context2.t0=_context2[\"catch\"](8);if(_context2.t0.response.status===411)_this.setError('조건에 맞는 데이터를 입력해주세요.');if(_context2.t0.response.status===409)_this.setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');case 22:case\"end\":return _context2.stop();}}},null,null,[[8,18]]);};_this.enterRegister=function(){if(window.event.keyCode===13)_this.handleLocalRegister();};return _this;}_createClass(KakaoRegister,[{key:\"componentDidMount\",value:function componentDidMount(){if(!storage.get('kakaologin'))return null;storage.remove('kakaologin');}},{key:\"render\",value:function render(){var _this$props2=this.props,error=_this$props2.error,errorId=_this$props2.errorId;var _this$props$form$toJS=this.props.form.toJS(),email=_this$props$form$toJS.email,comment=_this$props$form$toJS.comment;var handleChange=this.handleChange,handleLocalRegister=this.handleLocalRegister,enterRegister=this.enterRegister;return React.createElement(AuthContent,{title:\"SIGN UP\"},React.createElement(InputWithLabel,{label:\"\\uC774\\uBA54\\uC77C\",name:\"email\",placeholder:\"timeline@naver.com\",enter:enterRegister,value:email,onChange:handleChange}),errorId==='email'&&error&&React.createElement(AuthError,null,error),React.createElement(InputWithLabel,_defineProperty({label:\"\\uCF54\\uBA58\\uD2B8\",name:\"comment\",placeholder:\"\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4.\",enter:enterRegister,value:comment,onChange:handleChange},\"enter\",enterRegister)),errorId==='comment'&&error&&React.createElement(AuthError,null,error),React.createElement(AuthButton,{onClick:handleLocalRegister,enter:enterRegister},\"\\uD68C\\uC6D0\\uAC00\\uC785\"),React.createElement(RightAlignedLink,{to:\"/auth/login\"},\"\\uB85C\\uADF8\\uC778\"));}}]);return KakaoRegister;}(Component);export default connect(function(state){return{form:state.auth.getIn(['register','form']),error:state.auth.getIn(['register','error']),errorId:state.auth.getIn(['register','errorId']),result:state.auth.get('result')};},function(dispatch){return{AuthActions:bindActionCreators(authActions,dispatch),UserActions:bindActionCreators(userActions,dispatch)};})(KakaoRegister);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Auth/KakaoRegister.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","AuthError","Label","bindActionCreators","connect","authActions","isEmail","isLength","debounce","userActions","storage","KakaoRegister","setError","message","id","AuthActions","props","form","setErrorId","checkEmailExists","email","validate","value","comment","min","max","handleChange","e","target","name","changeInput","validation","indexOf","handleLocalRegister","error","history","UserActions","match","params","toJS","kakaoRegister","loggedInfo","result","set","setLoggedInfo","setValidated","push","response","status","enterRegister","window","event","keyCode","get","remove","errorId","state","auth","getIn","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {AuthContent,InputWithLabel,AuthButton,RightAlignedLink,AuthError,Label} from '../../components/Auth';\r\nimport { bindActionCreators } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as authActions from '../../redux/modules/auth';\r\nimport {isEmail,isLength} from 'validator';\r\nimport debounce from 'lodash/debounce';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport storage from '../../lib/storage';\r\n\r\nclass KakaoRegister extends Component{ \r\n    setError = (message,id) => {\r\n        const{AuthActions} = this.props;\r\n        AuthActions.setError({form: 'register',message});\r\n        AuthActions.setErrorId({form: 'register',id});\r\n    }\r\n    componentDidMount(){\r\n        if(!storage.get('kakaologin')) return null;\r\n        storage.remove('kakaologin');\r\n    }\r\n    checkEmailExists = debounce(async (email) => {\r\n        const { AuthActions } = this.props;\r\n        try{\r\n            await AuthActions.checkEmailExists(email,'null');\r\n            this.setError(null,'email');\r\n        }catch(e){\r\n            this.setError('이미 존재하는 이메일입니다.','email');\r\n        }\r\n    },300);\r\n    validate = {\r\n        email: (value) => {\r\n            if(!isEmail(value)){\r\n                this.setError('잘못된 이메일 형식 입니다.','email');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        comment: (value)=> {\r\n            if(!isLength(value, {min:0, max: 50})){\r\n                this.setError('코멘트는 50자를 넘길 수 없습니다.','comment');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        }\r\n    }\r\n    handleChange = (e) =>{\r\n        const {AuthActions} = this.props;\r\n        const {name, value} = e.target;\r\n        AuthActions.changeInput({\r\n          name,\r\n          value,\r\n          form: 'register'  \r\n        });\r\n        const validation = this.validate[name](value);\r\n        if( name.indexOf('email') > -1)\r\n        this.checkEmailExists(value);\r\n    } \r\n    handleLocalRegister = async() => {\r\n        const{form, AuthActions, error, history,UserActions,match} = this.props;\r\n        const{id} = match.params;\r\n        const {email,comment} = form.toJS();\r\n        const {validate} = this;\r\n    \r\n        if(error) return; //현재 에러 있는 상태라면 진행 x\r\n        if(!validate['email'](email)\r\n        || !validate['comment'](comment)\r\n        ){\r\n            //하나라도 실패하면 진행 하지 않음\r\n            return;\r\n        }\r\n        \r\n        try{\r\n             await AuthActions.kakaoRegister({\r\n                email,id,comment\r\n            });\r\n            const loggedInfo = this.props.result.toJS();\r\n            storage.set('loggedInfo', loggedInfo);\r\n            UserActions.setLoggedInfo(loggedInfo);\r\n            UserActions.setValidated(true);\r\n            history.push('/');\r\n        } catch(e){\r\n            if(e.response.status === 411)\r\n                this.setError('조건에 맞는 데이터를 입력해주세요.');\r\n            if(e.response.status === 409)\r\n                this.setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');\r\n        }\r\n        }\r\n        enterRegister = () => {\r\n            if(window.event.keyCode === 13)\r\n              this.handleLocalRegister();\r\n        }\r\nrender(){\r\n    const {error,errorId} = this.props;\r\n        const {email,comment} = this.props.form.toJS();\r\n        const {handleChange,handleLocalRegister,enterRegister} = this;\r\n    return(\r\n        <AuthContent title='SIGN UP'>\r\n                <InputWithLabel label = \"이메일\" name=\"email\" placeholder=\"timeline@naver.com\" enter = {enterRegister}\r\n                value = {email}\r\n                onChange={handleChange}/>\r\n                 {\r\n                    errorId === 'email' &&error && <AuthError>{error}</AuthError>\r\n                }               \r\n                <InputWithLabel label = \"코멘트\" name=\"comment\" placeholder=\"반갑습니다.\" enter = {enterRegister}\r\n                value = {comment} onChange={handleChange} enter = {enterRegister}/>\r\n                {\r\n                    errorId === 'comment' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <AuthButton onClick={handleLocalRegister} enter = {enterRegister}>회원가입</AuthButton>\r\n                <RightAlignedLink to=\"/auth/login\">로그인</RightAlignedLink>\r\n            </AuthContent>\r\n    );\r\n}\r\n}\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['register','form']),\r\n        error: state.auth.getIn(['register','error']),\r\n        errorId: state.auth.getIn(['register','errorId']),\r\n        result: state.auth.get('result')\r\n    }),\r\n    (dispatch)=>({\r\n        AuthActions : bindActionCreators(authActions,dispatch),\r\n        UserActions : bindActionCreators(userActions, dispatch)\r\n    })\r\n)(KakaoRegister);"]},"metadata":{},"sourceType":"module"}