{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Auth\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink, AuthError } from '../../components/Auth';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as authActions from '../../redux/modules/auth';\nimport * as userActions from '../../redux/modules/user';\nimport storage from '../../lib/storage';\nimport queryString from 'query-string';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = e => {\n      const AuthActions = this.props.AuthActions;\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      AuthActions.changeInput({\n        name,\n        value,\n        form: 'login'\n      });\n    };\n\n    this.setError = message => {\n      const AuthActions = this.props.AuthActions;\n      AuthActions.setError({\n        form: 'login',\n        message\n      });\n      return false;\n    };\n\n    this.handleLocalLogin = async () => {\n      const _this$props = this.props,\n            form = _this$props.form,\n            AuthActions = _this$props.AuthActions,\n            UserActions = _this$props.UserActions,\n            history = _this$props.history;\n\n      const _form$toJS = form.toJS(),\n            id = _form$toJS.id,\n            password = _form$toJS.password;\n\n      try {\n        await AuthActions.localLogin({\n          id,\n          password\n        });\n        const loggedInfo = this.props.result.toJS();\n        UserActions.setLoggedInfo(loggedInfo);\n        storage.set('loggedInfo', loggedInfo);\n        window.location.replace('/');\n      } catch (e) {\n        this.setError('잘못된 계정정보입니다.');\n      }\n    };\n\n    this.enterLogin = () => {\n      if (window.event.keyCode === 13) this.handleLocalLogin();\n    };\n  }\n\n  componentDidMount() {\n    const location = this.props.location;\n    const query = queryString.parse(location.search);\n\n    if (query.expired !== undefined) {\n      this.setError('로그인 후 이용바랍니다.');\n    }\n  }\n\n  componentWillUnmount() {\n    const AuthActions = this.props.AuthActions;\n    AuthActions.initializeForm('login');\n  }\n\n  render() {\n    const _this$props$form$toJS = this.props.form.toJS(),\n          id = _this$props$form$toJS.id,\n          password = _this$props$form$toJS.password; // form 에서 id 과 password 값을 읽어옴\n\n\n    const handleChange = this.handleChange,\n          handleLocalLogin = this.handleLocalLogin,\n          enterLogin = this.enterLogin;\n    const error = this.props.error;\n    return React.createElement(AuthContent, {\n      title: \"SIGN IN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(InputWithLabel, {\n      enter: enterLogin,\n      label: \"\\uC544\\uC774\\uB514\",\n      name: \"id\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: id,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(InputWithLabel, {\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      name: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      type: \"password\",\n      value: password,\n      onChange: handleChange,\n      enter: enterLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, error), React.createElement(AuthButton, {\n      onClick: handleLocalLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC778\"), React.createElement(RightAlignedLink, {\n      to: \"/auth/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"));\n  }\n\n}\n\nexport default connect(state => ({\n  form: state.auth.getIn(['login', 'form']),\n  error: state.auth.getIn(['login', 'error']),\n  result: state.auth.get('result'),\n  user: state.user\n}), dispatch => ({\n  AuthActions: bindActionCreators(authActions, dispatch),\n  UserActions: bindActionCreators(userActions, dispatch)\n}))(Login);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Auth/Login.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","AuthError","connect","bindActionCreators","authActions","userActions","storage","queryString","Login","handleChange","e","AuthActions","props","target","name","value","changeInput","form","setError","message","handleLocalLogin","UserActions","history","toJS","id","password","localLogin","loggedInfo","result","setLoggedInfo","set","window","location","replace","enterLogin","event","keyCode","componentDidMount","query","parse","search","expired","undefined","componentWillUnmount","initializeForm","render","error","state","auth","getIn","get","user","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink, AuthError } from '../../components/Auth';\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as authActions from '../../redux/modules/auth';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport storage from '../../lib/storage';\r\nimport queryString from 'query-string';\r\n\r\nclass Login extends Component {\r\n\r\n    componentDidMount(){\r\n        const{location} = this.props;\r\n        const query = queryString.parse(location.search);\r\n\r\n        if(query.expired !== undefined){\r\n            this.setError('로그인 후 이용바랍니다.')\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { AuthActions } = this.props;\r\n        const { name, value } = e.target;\r\n\r\n        AuthActions.changeInput({\r\n            name,\r\n            value,\r\n            form: 'login'\r\n        });\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        const {AuthActions} = this.props;\r\n        AuthActions.initializeForm('login');\r\n    }\r\n\r\n    setError = (message) => {\r\n        const {AuthActions} = this.props;\r\n        AuthActions.setError({\r\n            form : 'login',\r\n            message\r\n        });\r\n        return false;\r\n    }\r\n\r\n    handleLocalLogin = async () => {\r\n        const {form, AuthActions, UserActions,history} = this.props;\r\n        const {id,password} = form.toJS();\r\n        try{\r\n            await AuthActions.localLogin({id, password});\r\n            const loggedInfo = this.props.result.toJS();\r\n\r\n            UserActions.setLoggedInfo(loggedInfo);\r\n            storage.set('loggedInfo', loggedInfo);\r\n            window.location.replace('/');\r\n            \r\n        \r\n        } catch(e){\r\n            this.setError('잘못된 계정정보입니다.');\r\n        }\r\n     }\r\n     enterLogin = () => {\r\n        if(window.event.keyCode === 13)\r\n          this.handleLocalLogin();\r\n    }\r\n    render() {\r\n        const { id, password } = this.props.form.toJS(); // form 에서 id 과 password 값을 읽어옴\r\n        const { handleChange,handleLocalLogin,enterLogin } = this;\r\n        const {error} = this.props;\r\n\r\n        return (\r\n            <AuthContent title=\"SIGN IN\">\r\n                \r\n                <InputWithLabel \r\n                enter = {enterLogin}\r\n                    label=\"아이디\" \r\n                    name=\"id\" \r\n                    placeholder=\"아이디\" \r\n                    value={id} \r\n                    onChange={handleChange}\r\n                />\r\n                <InputWithLabel \r\n                    label=\"비밀번호\" \r\n                    name=\"password\" \r\n                    placeholder=\"비밀번호\" \r\n                    type=\"password\" \r\n                    value={password} \r\n                    onChange={handleChange}\r\n                    enter = {enterLogin}\r\n                />\r\n                {\r\n                    error && <AuthError>{error}</AuthError>\r\n                }\r\n                <AuthButton onClick={handleLocalLogin} >로그인</AuthButton>\r\n                <RightAlignedLink to=\"/auth/register\">회원가입</RightAlignedLink>\r\n            </AuthContent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['login', 'form']),\r\n        error: state.auth.getIn(['login', 'error']),\r\n        result : state.auth.get('result'),\r\n        user: state.user\r\n    }),\r\n    (dispatch) => ({\r\n        AuthActions: bindActionCreators(authActions, dispatch),\r\n        UserActions: bindActionCreators(userActions,dispatch)\r\n    })\r\n)(Login);"]},"metadata":{},"sourceType":"module"}