{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { createAction, handleActions } from 'redux-actions';\nimport { Map, List, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as AlarmAPI from '../../lib/api/alarm';\nconst GET_ALARM = 'alarm/GET_ALARM';\nconst GET_ALARM_NUM = 'alarm/GET_ALARM_NUM';\nconst SET_ALL_READ_ALARM = 'alarm/SET_ALL_READ_ALARM';\nconst SET_ALARM_TIME = 'alarm/SET_ALARM_TIME';\nexport const getAlarm = createAction(GET_ALARM, AlarmAPI.getAlarm);\nexport const getAlarmNum = createAction(GET_ALARM_NUM, AlarmAPI.getAlarmNum);\nexport const setAllReadAlarm = createAction(SET_ALL_READ_ALARM, AlarmAPI.setAllReadAlarm);\nexport const setAlarmTime = createAction(SET_ALARM_TIME);\nconst initialState = Map({\n  alarmList: List(),\n  alarmNum: 0,\n  result: Map({})\n});\nexport default handleActions(_objectSpread({\n  [SET_ALARM_TIME]: (state, action) => state.setIn(['alarmList', action.payload.index, 'dateString'], action.payload.dateString)\n}, pender({\n  type: GET_ALARM,\n  onSuccess: (state, action) => state.set('alarmList', fromJS(action.payload.data))\n}), {}, pender({\n  type: GET_ALARM_NUM,\n  onSuccess: (state, action) => state.set('alarmNum', action.payload.data.count)\n}), {}, pender({\n  type: SET_ALL_READ_ALARM,\n  onSuccess: (state, action) => state.set('result', action.payload)\n})), initialState);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/redux/modules/alarm.js"],"names":["createAction","handleActions","Map","List","fromJS","pender","AlarmAPI","GET_ALARM","GET_ALARM_NUM","SET_ALL_READ_ALARM","SET_ALARM_TIME","getAlarm","getAlarmNum","setAllReadAlarm","setAlarmTime","initialState","alarmList","alarmNum","result","state","action","setIn","payload","index","dateString","type","onSuccess","set","data","count"],"mappings":";AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAkBC,MAAlB,QAA+B,WAA/B;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,qBAA1B;AAEA,MAAMC,SAAS,GAAG,iBAAlB;AACA,MAAMC,aAAa,GAAG,qBAAtB;AACA,MAAMC,kBAAkB,GAAG,0BAA3B;AACA,MAAMC,cAAc,GAAG,sBAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAGX,YAAY,CAACO,SAAD,EAAWD,QAAQ,CAACK,QAApB,CAA7B;AACP,OAAO,MAAMC,WAAW,GAAGZ,YAAY,CAACQ,aAAD,EAAeF,QAAQ,CAACM,WAAxB,CAAhC;AACP,OAAO,MAAMC,eAAe,GAAGb,YAAY,CAACS,kBAAD,EAAoBH,QAAQ,CAACO,eAA7B,CAApC;AACP,OAAO,MAAMC,YAAY,GAAGd,YAAY,CAACU,cAAD,CAAjC;AACP,MAAMK,YAAY,GAAGb,GAAG,CAAC;AACrBc,EAAAA,SAAS,EAAGb,IAAI,EADK;AAErBc,EAAAA,QAAQ,EAAG,CAFU;AAGrBC,EAAAA,MAAM,EAAGhB,GAAG,CAAC,EAAD;AAHS,CAAD,CAAxB;AAMA,eAAeD,aAAa;AACxB,GAACS,cAAD,GAAmB,CAACS,KAAD,EAAOC,MAAP,KAAkBD,KAAK,CAACE,KAAN,CAAY,CAAC,WAAD,EAAaD,MAAM,CAACE,OAAP,CAAeC,KAA5B,EAAkC,YAAlC,CAAZ,EAA4DH,MAAM,CAACE,OAAP,CAAeE,UAA3E;AADb,GAErBnB,MAAM,CAAC;AACNoB,EAAAA,IAAI,EAAGlB,SADD;AAENmB,EAAAA,SAAS,EAAG,CAACP,KAAD,EAAOC,MAAP,KAAkBD,KAAK,CAACQ,GAAN,CAAU,WAAV,EAAsBvB,MAAM,CAACgB,MAAM,CAACE,OAAP,CAAeM,IAAhB,CAA5B;AAFxB,CAAD,CAFe,MAMrBvB,MAAM,CAAC;AACNoB,EAAAA,IAAI,EAAGjB,aADD;AAENkB,EAAAA,SAAS,EAAG,CAACP,KAAD,EAAOC,MAAP,KAAkBD,KAAK,CAACQ,GAAN,CAAU,UAAV,EAAqBP,MAAM,CAACE,OAAP,CAAeM,IAAf,CAAoBC,KAAzC;AAFxB,CAAD,CANe,MAUrBxB,MAAM,CAAC;AACNoB,EAAAA,IAAI,EAAGhB,kBADD;AAENiB,EAAAA,SAAS,EAAG,CAACP,KAAD,EAAOC,MAAP,KAAkBD,KAAK,CAACQ,GAAN,CAAU,QAAV,EAAmBP,MAAM,CAACE,OAA1B;AAFxB,CAAD,CAVe,GAe1BP,YAf0B,CAA5B","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\r\nimport {Map, List,fromJS} from 'immutable';\r\nimport {pender} from 'redux-pender';\r\nimport * as AlarmAPI from '../../lib/api/alarm';\r\n\r\nconst GET_ALARM = 'alarm/GET_ALARM';\r\nconst GET_ALARM_NUM = 'alarm/GET_ALARM_NUM';\r\nconst SET_ALL_READ_ALARM = 'alarm/SET_ALL_READ_ALARM';\r\nconst SET_ALARM_TIME = 'alarm/SET_ALARM_TIME';\r\n\r\nexport const getAlarm = createAction(GET_ALARM,AlarmAPI.getAlarm);\r\nexport const getAlarmNum = createAction(GET_ALARM_NUM,AlarmAPI.getAlarmNum);\r\nexport const setAllReadAlarm = createAction(SET_ALL_READ_ALARM,AlarmAPI.setAllReadAlarm);\r\nexport const setAlarmTime = createAction(SET_ALARM_TIME);\r\nconst initialState = Map({\r\n    alarmList : List(),\r\n    alarmNum : 0,\r\n    result : Map({})\r\n});\r\n\r\nexport default handleActions({\r\n    [SET_ALARM_TIME] : (state,action) => state.setIn(['alarmList',action.payload.index,'dateString'],action.payload.dateString),\r\n    ...pender({\r\n        type : GET_ALARM,\r\n        onSuccess : (state,action) => state.set('alarmList',fromJS(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type : GET_ALARM_NUM,\r\n        onSuccess : (state,action) => state.set('alarmNum',action.payload.data.count)\r\n    }),\r\n    ...pender({\r\n        type : SET_ALL_READ_ALARM,\r\n        onSuccess : (state,action) => state.set('result',action.payload)\r\n    })\r\n\r\n},initialState);"]},"metadata":{},"sourceType":"module"}