{"ast":null,"code":"//로컬 스토리지에 JSON 형태로 저장/ 불러오기/ 삭제 헬퍼\nvar storage={set:function set(key,object){if(!localStorage)return;localStorage[key]=typeof object==='string'?object:JSON.stringify(object);},get:function get(key){if(!localStorage)return null;if(!localStorage[key]){return null;}try{var parsed=JSON.parse(localStorage[key]);return parsed;}catch(e){return localStorage[key];}},remove:function remove(key){if(!localStorage)return null;if(localStorage[key]){localStorage.removeItem(key);}}};export default storage;","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/lib/storage.js"],"names":["storage","set","key","object","localStorage","JSON","stringify","get","parsed","parse","e","remove","removeItem"],"mappings":"AAAA;AACA,GAAMA,CAAAA,OAAO,CAAG,CACZC,GAAG,CAAG,aAACC,GAAD,CAAKC,MAAL,CAAgB,CAClB,GAAG,CAACC,YAAJ,CAAkB,OAClBA,YAAY,CAACF,GAAD,CAAZ,CAAqB,MAAOC,CAAAA,MAAR,GAAoB,QAApB,CAA+BA,MAA/B,CAAwCE,IAAI,CAACC,SAAL,CAAeH,MAAf,CAA5D,CACH,CAJW,CAKZI,GAAG,CAAG,aAACL,GAAD,CAAS,CACX,GAAG,CAACE,YAAJ,CAAkB,MAAO,KAAP,CAElB,GAAG,CAACA,YAAY,CAACF,GAAD,CAAhB,CAAsB,CAClB,MAAO,KAAP,CACH,CACD,GAAI,CACA,GAAMM,CAAAA,MAAM,CAAGH,IAAI,CAACI,KAAL,CAAWL,YAAY,CAACF,GAAD,CAAvB,CAAf,CACA,MAAOM,CAAAA,MAAP,CACH,CAAC,MAAME,CAAN,CAAQ,CACN,MAAON,CAAAA,YAAY,CAACF,GAAD,CAAnB,CACH,CACJ,CAjBW,CAkBZS,MAAM,CAAE,gBAACT,GAAD,CAAS,CACb,GAAG,CAACE,YAAJ,CAAkB,MAAO,KAAP,CAElB,GAAGA,YAAY,CAACF,GAAD,CAAf,CAAqB,CACjBE,YAAY,CAACQ,UAAb,CAAwBV,GAAxB,EACH,CACJ,CAxBW,CAAhB,CA2BA,cAAeF,CAAAA,OAAf","sourcesContent":["//로컬 스토리지에 JSON 형태로 저장/ 불러오기/ 삭제 헬퍼\r\nconst storage = {\r\n    set : (key,object) => {\r\n        if(!localStorage) return;\r\n        localStorage[key] = (typeof object) === 'string' ? object : JSON.stringify(object);\r\n    },\r\n    get : (key) => {\r\n        if(!localStorage) return null;\r\n\r\n        if(!localStorage[key]){\r\n            return null;\r\n        }\r\n        try {\r\n            const parsed = JSON.parse(localStorage[key]);\r\n            return parsed;\r\n        } catch(e){\r\n            return localStorage[key];\r\n        }\r\n    },\r\n    remove: (key) => {\r\n        if(!localStorage) return null;\r\n\r\n        if(localStorage[key]){\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n};\r\n\r\nexport default storage;"]},"metadata":{},"sourceType":"module"}