{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\User\\\\UserModify.js\";\nimport React, { Component } from 'react';\nimport { AuthContent, InputWithLabel, AuthButton, AuthError, Label } from '../../components/Auth';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as userPageActions from '../../redux/modules/userPage';\nimport { isEmail, isLength } from 'validator';\nimport debounce from 'lodash/debounce';\nimport * as userActions from '../../redux/modules/user';\nimport * as authActions from '../../redux/modules/auth';\nimport storage from '../..//lib/storage';\nimport { setError, validate, checkEmailExists, checkIdExists, checkPhoneExists } from '../Auth/RegisterModule';\n\nclass UserModify extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkIfUserPassed = () => {\n      const username = this.props.username;\n      if (!storage.get('passed')) window.location.href = '/@' + username + \"/password\";else storage.remove('passed');\n    };\n\n    this.initialModifyInfo = async () => {\n      const _this$props = this.props,\n            username = _this$props.username,\n            UserPageActions = _this$props.UserPageActions;\n\n      try {\n        await UserPageActions.checkUserAndGetUser();\n        const user = this.props.result.toJS();\n        UserPageActions.setUserData(user);\n      } catch (e) {\n        console.log(e);\n        window.location.href = '/@' + username + \"/password\";\n      }\n    };\n\n    this.checkEmailExists = debounce(async email => {\n      const _this$props2 = this.props,\n            UserPageActions = _this$props2.UserPageActions,\n            username = _this$props2.username;\n\n      try {\n        await UserPageActions.checkEmailExists(email, username);\n\n        if (this.props.result.get('issue') !== null) {\n          this.setError('이미 존재하는 이메일입니다.');\n        } else {\n          this.setError(null);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }, 300);\n    this.checkPhoneExists = debounce(async phone => {\n      const _this$props3 = this.props,\n            UserPageActions = _this$props3.UserPageActions,\n            username = _this$props3.username;\n\n      try {\n        await UserPageActions.checkPhoneExists(phone, username);\n\n        if (this.props.result.get('issue') !== null) {\n          this.setError('이미 존재하는 핸드폰 번호입니다.');\n        } else {\n          this.setError(null);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }, 300);\n    this.validate = {\n      email: value => {\n        if (!isEmail(value)) {\n          this.setError('잘못된 이메일 형식 입니다.', 'email');\n          return false;\n        }\n\n        return true;\n      },\n      password: value => {\n        if (!new RegExp(/^(?=.*\\d)(?=.*[~`!@#$%\\\\^&*()-])(?=.*[a-z])(?=.*[A-Z]).{9,12}$/).test(value)) {\n          this.setError('비밀번호는 8~12 글자의 알파벳 (대소문자 구분), 숫자, 특수문자로 이루어져야 합니다.', 'password');\n          return false;\n        } else if (new RegExp(/(\\w)\\1\\1\\1/).test(value)) {\n          this.setError('비밀번호는 같은 문자를 4번 이상 사용할 수 없습니다.', 'password');\n          return false;\n        }\n\n        this.setError(null);\n        return true;\n      },\n      passwordConfirm: value => {\n        if (this.props.form.get('password') !== value) {\n          this.setError('비밀번호 확인이 일치하지 않습니다.', 'passwordConfirm');\n          return false;\n        }\n\n        this.setError(null);\n        return true;\n      },\n      phone: value => {\n        if (!new RegExp(/^01(?:0|1|[6-9])-(\\d{3}|\\d{4})-(\\d{4})$/).test(value)) {\n          this.setError('핸드폰 번호는 01x-xxx(x)-xxxx와 같은 형태로 입력해야 합니다.', 'phone');\n          return false;\n        }\n\n        return true;\n      },\n      comment: value => {\n        if (!isLength(value, {\n          min: 0,\n          max: 50\n        })) {\n          this.setError('코멘트는 50자를 넘길 수 없습니다.', 'comment');\n          return false;\n        }\n\n        this.setError(null);\n        return true;\n      },\n      name: value => {\n        if (!isLength(value, {\n          min: 1,\n          max: 30\n        })) {\n          this.setError('이름은 1자 이상 30자 이하여야 합니다.', 'name');\n          return false;\n        }\n\n        this.setError(null);\n        return true;\n      },\n      gender: value => {\n        if (value == null) {\n          this.setError('성별은 반드시 입력해야 합니다.', 'gender');\n          return false;\n        }\n\n        this.setError(null);\n        return true;\n      }\n    };\n\n    this.checkedChange = e => {\n      const UserPageActions = this.props.UserPageActions;\n      const _e$target$checked = e.target.checked,\n            name = _e$target$checked.name,\n            value = _e$target$checked.value;\n      UserPageActions.changeInput({\n        name,\n        value,\n        form: 'User'\n      });\n    };\n\n    this.defaultNullChange = e => {\n      const UserPageActions = this.props.UserPageActions;\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      UserPageActions.changeInput({\n        name,\n        value,\n        form: 'User'\n      });\n    };\n\n    this.handleChange = e => {\n      const UserPageActions = this.props.UserPageActions;\n      const _e$target2 = e.target,\n            name = _e$target2.name,\n            value = _e$target2.value;\n      UserPageActions.changeInput({\n        name,\n        value,\n        form: 'User'\n      });\n      const validation = this.validate[name](value);\n      if (name.indexOf('password') > -1 || !validation) return;\n      if (name.indexOf('email') > -1) this.checkEmailExists(value);else if (name.indexOf('phone') > -1) this.checkPhoneExists(value);\n    };\n\n    this.handleLocalRegister = async () => {\n      const _this$props4 = this.props,\n            form = _this$props4.form,\n            UserPageActions = _this$props4.UserPageActions,\n            error = _this$props4.error,\n            history = _this$props4.history;\n\n      const _form$toJS = form.toJS(),\n            email = _form$toJS.email,\n            id = _form$toJS.id,\n            password = _form$toJS.password,\n            passwordConfirm = _form$toJS.passwordConfirm,\n            phone = _form$toJS.phone,\n            name = _form$toJS.name,\n            comment = _form$toJS.comment,\n            address = _form$toJS.address,\n            gender = _form$toJS.gender,\n            birthday = _form$toJS.birthday;\n\n      const validate = this.validate;\n      if (error) return; //현재 에러 있는 상태라면 진행 x\n\n      if (!validate['email'](email) || !validate['password'](password) || !validate['passwordConfirm'](passwordConfirm) || !validate['name'](name) || !validate['comment'](comment) || !validate['phone'](phone) || !validate['gender'](gender)) {\n        //하나라도 실패하면 진행 하지 않음\n        return;\n      }\n\n      try {\n        await UserPageActions.modifyUserInfo({\n          email,\n          id,\n          password,\n          name,\n          comment,\n          phone,\n          address,\n          gender,\n          birthday\n        });\n        window.location.href = '/';\n        storage.remove('passed');\n      } catch (e) {\n        if (e.response.status === 411) this.setError('조건에 맞는 데이터를 입력해주세요.');\n        if (e.response.status === 409) this.setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.checkIfUserPassed();\n    this.initialModifyInfo();\n  }\n\n  componentWillUnmount() {\n    const UserPageActions = this.props.UserPageActions;\n    UserPageActions.initializeForm('User');\n  }\n\n  render() {\n    const inputStyle = {\n      width: '15%',\n      left: '5%',\n      position: 'relative',\n      outline: 'none',\n      borderRadius: '0px',\n      lineHeight: '2.5rem',\n      fontSize: '1.2rem',\n      paddingLeft: '0.5rem',\n      fontFamily: 'Noto Sans KR',\n      fontStyle: 'normal',\n      paddingRight: '1rem',\n      marginRight: '1rem'\n    };\n    const _this$props5 = this.props,\n          error = _this$props5.error,\n          form = _this$props5.form,\n          errorId = _this$props5.errorId;\n\n    const _form$toJS2 = form.toJS(),\n          id = _form$toJS2.id,\n          password = _form$toJS2.password,\n          passwordConfirm = _form$toJS2.passwordConfirm,\n          email = _form$toJS2.email,\n          name = _form$toJS2.name,\n          phone = _form$toJS2.phone,\n          birthday = _form$toJS2.birthday,\n          comment = _form$toJS2.comment,\n          address = _form$toJS2.address,\n          gender = _form$toJS2.gender;\n\n    const handleChange = this.handleChange,\n          handleLocalRegister = this.handleLocalRegister,\n          defaultNullChange = this.defaultNullChange,\n          handleFileInput = this.handleFileInput,\n          checkedChange = this.checkedChange;\n    return React.createElement(AuthContent, {\n      title: \"MY PAGE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(InputWithLabel, {\n      label: \"\\uC544\\uC774\\uB514\",\n      name: \"id\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: id,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(InputWithLabel, {\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      name: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      type: \"password\",\n      value: password,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), errorId === 'password' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      name: \"passwordConfirm\",\n      placeholder: \"\\uB2E4\\uC2DC \\uD55C\\uBC88 \\uC785\\uB825\",\n      type: \"password\",\n      value: passwordConfirm,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), errorId === 'passwordConfirm' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uC0DD\\uB144\\uC6D4\\uC77C\",\n      name: \"birthday\",\n      type: \"date\",\n      value: birthday,\n      onChange: defaultNullChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), errorId === 'birthday' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uC774\\uBA54\\uC77C\",\n      name: \"email\",\n      placeholder: \"timeline@naver.com\",\n      type: \"email\",\n      defaultValue: email,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), errorId === 'email' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uD578\\uB4DC\\uD3F0 \\uBC88\\uD638\",\n      name: \"phone\",\n      placeholder: \"010-1234-1234\",\n      defaultValue: phone,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), errorId === 'phone' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uC774\\uB984\",\n      name: \"name\",\n      placeholder: \"\\uC774\\uB984\",\n      defaultValue: name,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), errorId === 'name' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, error), React.createElement(InputWithLabel, {\n      label: \"\\uCF54\\uBA58\\uD2B8\",\n      name: \"comment\",\n      placeholder: \"\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4.\",\n      defaultValue: comment,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), errorId === 'comment' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, error), React.createElement(Label, {\n      label: \"\\uC131\\uBCC4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), errorId === 'gender' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, error), React.createElement(\"input\", {\n      style: inputStyle,\n      name: \"gender\",\n      type: \"radio\",\n      value: Number('0'),\n      defaultChecked: Number(gender),\n      onChange: checkedChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), \"\\uC5EC\\uC790\", React.createElement(\"input\", {\n      style: inputStyle,\n      name: \"gender\",\n      type: \"radio\",\n      value: Number('1'),\n      defaultChecked: Number(gender),\n      onChange: checkedChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), \"\\uB0A8\\uC790\", React.createElement(\"input\", {\n      style: inputStyle,\n      name: \"gender\",\n      type: \"radio\",\n      value: Number('2'),\n      defaultChecked: Number(gender),\n      onChange: checkedChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), \"others\", React.createElement(InputWithLabel, {\n      label: \"\\uC8FC\\uC18C\",\n      name: \"address\",\n      placeholder: \"\\uC11C\\uC6B8\",\n      defaultValue: address,\n      onChange: defaultNullChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), errorId === 'address' && error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, error), React.createElement(AuthButton, {\n      onClick: handleLocalRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"\\uD655\\uC778\"));\n  }\n\n}\n\nexport default connect(state => ({\n  form: state.userPage.getIn(['User', 'form']),\n  error: state.userPage.getIn(['User', 'error']),\n  errorId: state.auth.getIn(['register', 'errorId']),\n  result: state.userPage.get('result'),\n  userPage: state.userPage\n}), dispatch => ({\n  UserPageActions: bindActionCreators(userPageActions, dispatch),\n  UserActions: bindActionCreators(userActions, dispatch),\n  AuthActions: bindActionCreators(authActions, dispatch)\n}))(UserModify);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/User/UserModify.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","AuthError","Label","bindActionCreators","connect","userPageActions","isEmail","isLength","debounce","userActions","authActions","storage","setError","validate","checkEmailExists","checkIdExists","checkPhoneExists","UserModify","checkIfUserPassed","username","props","get","window","location","href","remove","initialModifyInfo","UserPageActions","checkUserAndGetUser","user","result","toJS","setUserData","e","console","log","email","phone","value","password","RegExp","test","passwordConfirm","form","comment","min","max","name","gender","checkedChange","target","checked","changeInput","defaultNullChange","handleChange","validation","indexOf","handleLocalRegister","error","history","id","address","birthday","modifyUserInfo","response","status","componentDidMount","componentWillUnmount","initializeForm","render","inputStyle","width","left","position","outline","borderRadius","lineHeight","fontSize","paddingLeft","fontFamily","fontStyle","paddingRight","marginRight","errorId","handleFileInput","Number","state","userPage","getIn","auth","dispatch","UserActions","AuthActions"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {AuthContent,InputWithLabel,AuthButton,AuthError,Label} from '../../components/Auth';\r\nimport { bindActionCreators } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as userPageActions from '../../redux/modules/userPage';\r\nimport {isEmail,isLength} from 'validator';\r\nimport debounce from 'lodash/debounce';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport * as authActions from '../../redux/modules/auth';\r\nimport storage from '../..//lib/storage';\r\nimport {setError,validate,checkEmailExists,checkIdExists,checkPhoneExists} from '../Auth/RegisterModule';\r\n\r\nclass UserModify extends Component{ \r\n \r\n        \r\n\r\n    checkIfUserPassed = () => {\r\n        const{username} = this.props;\r\n        if(!storage.get('passed')) window.location.href = '/@' + username+ \"/password\";\r\n        else storage.remove('passed');\r\n    }\r\n    \r\n    initialModifyInfo = async() => {\r\n        const{username,UserPageActions} = this.props;\r\n        try{\r\n        await UserPageActions.checkUserAndGetUser();\r\n        const user = this.props.result.toJS();\r\n        UserPageActions.setUserData(user);\r\n        \r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            window.location.href = '/@' + username+ \"/password\";\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.checkIfUserPassed();\r\n        this.initialModifyInfo();\r\n    }\r\n    componentWillUnmount(){\r\n        const {UserPageActions} = this.props;\r\n        UserPageActions.initializeForm('User');\r\n        \r\n    }\r\n\r\n    checkEmailExists = debounce(async (email) => {\r\n        const { UserPageActions,username } = this.props;\r\n        try{\r\n            await UserPageActions.checkEmailExists(email,username);\r\n            if(this.props.result.get('issue')!== null) {\r\n                this.setError('이미 존재하는 이메일입니다.');\r\n            } else {\r\n                this.setError(null);\r\n            }\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    },300);\r\n\r\n\r\n    checkPhoneExists = debounce(async(phone) => {\r\n        const {UserPageActions,username} = this.props;\r\n        try{\r\n            await UserPageActions.checkPhoneExists(phone,username);\r\n            if(this.props.result.get('issue')!== null){\r\n                this.setError('이미 존재하는 핸드폰 번호입니다.');\r\n            } else {\r\n                this.setError(null);\r\n            } \r\n        }catch (e){\r\n                console.log(e);\r\n        }\r\n    },300);\r\n\r\n    validate = {\r\n        email: (value) => {\r\n            if(!isEmail(value)){\r\n                this.setError('잘못된 이메일 형식 입니다.','email');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        password: (value) => {\r\n            \r\n            if(!new RegExp(/^(?=.*\\d)(?=.*[~`!@#$%\\\\^&*()-])(?=.*[a-z])(?=.*[A-Z]).{9,12}$/).test(value)){\r\n                this.setError('비밀번호는 8~12 글자의 알파벳 (대소문자 구분), 숫자, 특수문자로 이루어져야 합니다.','password');\r\n                return false;\r\n            }\r\n            else if(new RegExp(/(\\w)\\1\\1\\1/).test(value)){\r\n                this.setError('비밀번호는 같은 문자를 4번 이상 사용할 수 없습니다.','password');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        passwordConfirm: (value) => {\r\n            if(this.props.form.get('password') !== value){\r\n                this.setError('비밀번호 확인이 일치하지 않습니다.','passwordConfirm');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        phone: (value)=> {\r\n            if(!new RegExp(/^01(?:0|1|[6-9])-(\\d{3}|\\d{4})-(\\d{4})$/).test(value)){\r\n                this.setError('핸드폰 번호는 01x-xxx(x)-xxxx와 같은 형태로 입력해야 합니다.','phone');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        comment: (value)=> {\r\n            if(!isLength(value, {min:0, max: 50})){\r\n                this.setError('코멘트는 50자를 넘길 수 없습니다.','comment');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        name: (value) => {\r\n            if(!isLength(value, {min:1, max: 30})){\r\n                this.setError('이름은 1자 이상 30자 이하여야 합니다.','name');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        gender: (value) => {\r\n            if(value == null){\r\n                this.setError('성별은 반드시 입력해야 합니다.','gender');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        }\r\n\r\n    }\r\n    checkedChange = (e) =>{\r\n        const {UserPageActions} = this.props;\r\n        const {name, value} = e.target.checked;\r\n        UserPageActions.changeInput({\r\n          name,\r\n          value,\r\n          form: 'User'  \r\n        });\r\n    }\r\n\r\n    defaultNullChange = (e) =>{\r\n        const {UserPageActions} = this.props;\r\n        const {name, value} = e.target;\r\n        UserPageActions.changeInput({\r\n          name,\r\n          value,\r\n          form: 'User'  \r\n        });\r\n    }\r\n    handleChange = (e) =>{\r\n    const {UserPageActions} = this.props;\r\n    const {name, value} = e.target;\r\n    UserPageActions.changeInput({\r\n      name,\r\n      value,\r\n      form: 'User'  \r\n    });\r\n    const validation = this.validate[name](value);\r\n    if(name.indexOf('password') > -1 || !validation) return;\r\n    if( name.indexOf('email') > -1)\r\n    this.checkEmailExists(value);\r\n     else if(name.indexOf('phone') > -1) \r\n     this.checkPhoneExists(value);\r\n}\r\nhandleLocalRegister = async () => {\r\n    const{form, UserPageActions, error, history} = this.props;\r\n    const {email, id,password, passwordConfirm, phone,name,comment,address,gender,birthday} = form.toJS();\r\n    const {validate} = this;\r\n\r\n    if(error) return; //현재 에러 있는 상태라면 진행 x\r\n    if(!validate['email'](email)\r\n    || !validate['password'](password)\r\n    || !validate['passwordConfirm'](passwordConfirm)\r\n    || !validate['name'](name)\r\n    || !validate['comment'](comment)\r\n    || !validate['phone'](phone)\r\n    || !validate['gender'](gender)\r\n    ){\r\n        //하나라도 실패하면 진행 하지 않음\r\n        return;\r\n    }\r\n    \r\n    try{\r\n        await UserPageActions.modifyUserInfo({\r\n            email,id,password,name,comment,phone,address,gender,birthday\r\n        });\r\n        window.location.href = '/';\r\n        storage.remove('passed');\r\n        } catch(e){\r\n            if(e.response.status === 411)\r\n            this.setError('조건에 맞는 데이터를 입력해주세요.');\r\n        if(e.response.status === 409)\r\n            this.setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');\r\n    }\r\n    }\r\n    render(){\r\n        const inputStyle = {\r\n            width: '15%',\r\n            left: '5%',\r\n            position: 'relative',\r\n    outline: 'none',\r\n    borderRadius: '0px',\r\n    lineHeight: '2.5rem',\r\n    fontSize: '1.2rem',\r\n    paddingLeft: '0.5rem',\r\n    fontFamily: 'Noto Sans KR',\r\n    fontStyle: 'normal',\r\n    paddingRight: '1rem',\r\n    marginRight : '1rem'\r\n        }\r\n        const {error,form,errorId} = this.props\r\n        const {id,password,passwordConfirm,email,name,phone,birthday,comment,address,gender} =form.toJS();\r\n        const {handleChange,handleLocalRegister,defaultNullChange,handleFileInput,checkedChange} = this; \r\n  \r\n                return(\r\n                <AuthContent title='MY PAGE'>\r\n                <InputWithLabel label = \"아이디\" name=\"id\" placeholder=\"아이디\"\r\n                value = {id}\r\n                disabled/>\r\n                <InputWithLabel label = \"비밀번호\" name=\"password\" placeholder=\"비밀번호\"\r\n                type=\"password\"\r\n                value={password} onChange={handleChange}\r\n                />\r\n                {\r\n                    errorId === 'password' &&error && <AuthError>{error}</AuthError>\r\n                }  \r\n                <InputWithLabel label = \"비밀번호 확인\" name=\"passwordConfirm\" placeholder=\"다시 한번 입력\"\r\n                type=\"password\"\r\n                value={passwordConfirm} onChange={handleChange}\r\n                />\r\n                {\r\n                    errorId === 'passwordConfirm' &&error && <AuthError>{error}</AuthError>\r\n                }  \r\n                <InputWithLabel label = \"생년월일\" name=\"birthday\" \r\n                type=\"date\" \r\n                value = {birthday} onChange={defaultNullChange}\r\n                />\r\n                {\r\n                    errorId === 'birthday' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <InputWithLabel label = \"이메일\" name=\"email\" placeholder=\"timeline@naver.com\" \r\n                type=\"email\"\r\n                defaultValue = {email}\r\n                onChange={handleChange}/>\r\n                {\r\n                    errorId === 'email' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <InputWithLabel label = \"핸드폰 번호\" name=\"phone\" placeholder=\"010-1234-1234\" \r\n                defaultValue={phone}\r\n                onChange={handleChange}/>\r\n                {\r\n                    errorId === 'phone' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <InputWithLabel label = \"이름\" name=\"name\" placeholder=\"이름\" \r\n                defaultValue = {name} onChange={handleChange}/>\r\n                {\r\n                    errorId === 'name' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <InputWithLabel label = \"코멘트\" name=\"comment\" placeholder=\"반갑습니다.\"\r\n                defaultValue = {comment} onChange={handleChange} /> <br/>\r\n                {\r\n                    errorId === 'comment' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <Label label = \"성별\"></Label>\r\n                {\r\n                    errorId === 'gender' &&error && <AuthError>{error}</AuthError>\r\n                } \r\n                <input style ={inputStyle} name= \"gender\" type=\"radio\" value = {Number('0')} defaultChecked = {Number(gender)} onChange={checkedChange} />여자\r\n                <input style ={inputStyle} name=\"gender\" type=\"radio\" value = {Number('1')} defaultChecked ={Number(gender)}  onChange={checkedChange}/>남자\r\n                <input style ={inputStyle} name=\"gender\" type=\"radio\" value = {Number('2')} defaultChecked ={Number(gender)} onChange={checkedChange} />others\r\n                <InputWithLabel label =\"주소\" name =\"address\" placeholder=\"서울\" defaultValue = {address} onChange={defaultNullChange} />\r\n                {\r\n                    errorId === 'address' &&error && <AuthError>{error}</AuthError>\r\n                }              \r\n                <AuthButton onClick={handleLocalRegister}>확인</AuthButton>\r\n                </AuthContent>\r\n            );\r\n        }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.userPage.getIn(['User','form']),\r\n        error: state.userPage.getIn(['User','error']),\r\n        errorId: state.auth.getIn(['register','errorId']),\r\n        result: state.userPage.get('result'),\r\n        userPage : state.userPage\r\n    }),\r\n    (dispatch)=>({\r\n        UserPageActions : bindActionCreators(userPageActions,dispatch),\r\n        UserActions : bindActionCreators(userActions, dispatch),\r\n        AuthActions: bindActionCreators(authActions,dispatch)\r\n    })\r\n)(UserModify);"]},"metadata":{},"sourceType":"module"}