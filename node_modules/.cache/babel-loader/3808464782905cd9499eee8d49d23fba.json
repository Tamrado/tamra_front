{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\User\\\\UserHeadContainer.js\";\nimport React, { Component } from 'react';\nimport UserHead from '../../components/User/UserHead';\nimport { InputWithLabel, AuthButton, AuthContent, AuthError } from '../../components/Auth';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as userPageActions from '../../redux/modules/userPage';\nimport storage from '../../lib/storage';\n\nclass UserHeadContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getUserInfo = async () => {\n      const _this$props = this.props,\n            UserPageActions = _this$props.UserPageActions,\n            username = _this$props.username;\n\n      try {\n        await UserPageActions.getUserInfo(username);\n        const info = this.props.result.toJS();\n        await UserPageActions.setUserInfo(info);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.setError = message => {\n      const UserPageActions = this.props.UserPageActions;\n      UserPageActions.setError({\n        form: 'User',\n        message\n      });\n      return false;\n    };\n\n    this.handleChange = e => {\n      const UserPageActions = this.props.UserPageActions;\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      UserPageActions.changeInput({\n        name,\n        value,\n        form: 'User'\n      });\n    };\n\n    this.handleClick = async () => {\n      const _this$props2 = this.props,\n            UserPageActions = _this$props2.UserPageActions,\n            form = _this$props2.form,\n            username = _this$props2.username;\n\n      const _form$toJS = form.toJS(),\n            password = _form$toJS.password;\n\n      try {\n        await UserPageActions.checkUserAndGetInfo({\n          password\n        });\n        const data = this.props.result.toJS();\n        await UserPageActions.setUserData({\n          data\n        });\n        storage.set('passed', 'true');\n      } catch (e) {\n        console.log(e);\n        return this.setError(\"비밀번호가 틀렸습니다. 다시 입력해주세요.\");\n      }\n\n      window.location.href = '/@' + username + '/info';\n    };\n\n    this.enter = () => {\n      if (window.event.keyCode === 13) this.handleClick();\n    };\n  }\n\n  componentDidMount() {\n    if (!storage.get('loggedInfo')) return;\n    let username = storage.get('loggedInfo').username;\n\n    if (username.includes('Kakao')) {\n      storage.set('passed', 'true');\n      window.location.href = '/@' + username + '/info';\n    }\n\n    this.getUserInfo();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.username !== this.props.username) {\n      this.getUserInfo();\n    }\n  }\n\n  render() {\n    const error = this.props.error;\n    const _this$props3 = this.props,\n          username = _this$props3.username,\n          thumbnail = _this$props3.thumbnail,\n          fetched = _this$props3.fetched,\n          password = _this$props3.password;\n    const handleChange = this.handleChange,\n          handleClick = this.handleClick,\n          enter = this.enter;\n    if (!fetched) return null;\n    return React.createElement(AuthContent, {\n      title: \"MY PAGE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(UserHead, {\n      username: username,\n      thumbnail: thumbnail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(InputWithLabel, {\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\",\n      name: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      type: \"password\",\n      value: password,\n      onChange: handleChange,\n      enter: enter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), error && React.createElement(AuthError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, error), React.createElement(AuthButton, {\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\uD655\\uC778\"));\n  }\n\n}\n\nexport default connect(state => ({\n  thumbnail: state.userPage.getIn(['info', 'thumbnail']),\n  error: state.userPage.getIn(['User', 'error']),\n  result: state.userPage.get('result'),\n  fetched: state.pender.success['userPage/GET_USER_INFO'],\n  form: state.userPage.getIn(['User', 'form']),\n  userpage: state.userPage\n}), dispatch => ({\n  UserPageActions: bindActionCreators(userPageActions, dispatch)\n}))(UserHeadContainer);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/User/UserHeadContainer.js"],"names":["React","Component","UserHead","InputWithLabel","AuthButton","AuthContent","AuthError","connect","bindActionCreators","userPageActions","storage","UserHeadContainer","getUserInfo","props","UserPageActions","username","info","result","toJS","setUserInfo","e","console","log","setError","message","form","handleChange","target","name","value","changeInput","handleClick","password","checkUserAndGetInfo","data","setUserData","set","window","location","href","enter","event","keyCode","componentDidMount","get","includes","componentDidUpdate","prevProps","prevState","render","error","thumbnail","fetched","state","userPage","getIn","pender","success","userpage","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport UserHead from '../../components/User/UserHead';\r\nimport {InputWithLabel,AuthButton,AuthContent,AuthError} from '../../components/Auth';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as userPageActions from '../../redux/modules/userPage';\r\nimport storage from '../../lib/storage';\r\n\r\nclass UserHeadContainer extends Component {\r\n    componentDidMount(){\r\n        if(!storage.get('loggedInfo')) return;\r\n        let username = storage.get('loggedInfo').username;\r\n        if(username.includes('Kakao')){\r\n            storage.set('passed','true');\r\n            window.location.href =  '/@' + username+'/info';\r\n        }\r\n        this.getUserInfo();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.username !== this.props.username){\r\n            this.getUserInfo();\r\n        }\r\n    }\r\n    \r\n    getUserInfo = async() => {\r\n        const{UserPageActions, username} = this.props;\r\n        try{\r\n            await UserPageActions.getUserInfo(username);\r\n            const info = this.props.result.toJS();\r\n            await UserPageActions.setUserInfo(info);\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n        \r\n    }\r\n\r\n    setError = (message) => {\r\n        const {UserPageActions} = this.props;\r\n        UserPageActions.setError({\r\n            form : 'User',\r\n            message\r\n        });\r\n        return false;\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        const {UserPageActions} = this.props;\r\n        const {name, value} = e.target;\r\n        UserPageActions.changeInput({\r\n            name,\r\n            value,\r\n            form: 'User'  \r\n        });\r\n    }\r\n    handleClick = async() => {\r\n        const{UserPageActions,form,username} = this.props;\r\n        const{password} = form.toJS();\r\n        try{\r\n            await UserPageActions.checkUserAndGetInfo({password});\r\n            const data = this.props.result.toJS();\r\n            await UserPageActions.setUserData({data}); \r\n            storage.set('passed','true');\r\n        } catch(e){\r\n            console.log(e);\r\n            return this.setError(\"비밀번호가 틀렸습니다. 다시 입력해주세요.\");\r\n        }\r\n        window.location.href =  '/@' + username+'/info';\r\n        \r\n    } \r\n    enter = () => {\r\n        if(window.event.keyCode === 13)\r\n        this.handleClick();\r\n    }\r\n\r\n    render(){\r\n        const { error } = this.props;\r\n        const {username,thumbnail,fetched,password} = this.props;\r\n        const {handleChange,handleClick,enter} = this;\r\n        if(!fetched) return null;\r\n        return (\r\n            <AuthContent title='MY PAGE'>\r\n            <UserHead username={username} thumbnail={thumbnail}/>\r\n            <InputWithLabel label = \"비밀번호 입력\" name=\"password\" placeholder=\"비밀번호\"\r\n                type=\"password\"\r\n                value={password} onChange={handleChange} enter={enter}\r\n                />\r\n                {\r\n                    error && <AuthError>{error}</AuthError>\r\n                }\r\n                <AuthButton onClick={handleClick} >확인</AuthButton>\r\n                \r\n            </AuthContent>\r\n\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        thumbnail: state.userPage.getIn(['info','thumbnail']),\r\n        error: state.userPage.getIn(['User','error']),\r\n        result : state.userPage.get('result'),\r\n        fetched: state.pender.success['userPage/GET_USER_INFO'],\r\n        form : state.userPage.getIn(['User','form']),\r\n        userpage : state.userPage\r\n    }),\r\n    (dispatch)=> ({\r\n        UserPageActions: bindActionCreators(userPageActions, dispatch)\r\n    })\r\n)(UserHeadContainer);"]},"metadata":{},"sourceType":"module"}