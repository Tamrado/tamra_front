{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Auth\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { RegisterComponent } from '../../components/Auth';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as authActions from '../../redux/modules/auth';\nimport * as userActions from '../../redux/modules/user';\nimport storage from '../../lib/storage';\nimport { setError, validate, checkEmailExists, checkIdExists, checkPhoneExists, inputStyle, setAuthActions, setPassword } from '../Function/ValidateModuledateModule';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      file: null\n    };\n\n    this.checkedChange = e => {\n      const AuthActions = this.props.AuthActions;\n      const _e$target$checked = e.target.checked,\n            name = _e$target$checked.name,\n            value = _e$target$checked.value;\n      AuthActions.changeInput({\n        name,\n        value,\n        form: 'register'\n      });\n    };\n\n    this.defaultNullChange = e => {\n      const AuthActions = this.props.AuthActions;\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      AuthActions.changeInput({\n        name,\n        value,\n        form: 'register'\n      });\n    };\n\n    this.handleChange = e => {\n      const AuthActions = this.props.AuthActions;\n      const _e$target2 = e.target,\n            name = _e$target2.name,\n            value = _e$target2.value;\n      AuthActions.changeInput({\n        name,\n        value,\n        form: 'register'\n      });\n      setPassword(this.props.password);\n      const validation = validate[name](value);\n      if (name.indexOf('password') > -1 || !validation) return;\n      if (name.indexOf('email') > -1) checkEmailExists(value);else if (name.indexOf('id') > -1) checkIdExists(value);else if (name.indexOf('phone') > -1) checkPhoneExists(value);\n    };\n\n    this.handleLocalRegister = async () => {\n      const _this$props = this.props,\n            form = _this$props.form,\n            AuthActions = _this$props.AuthActions,\n            error = _this$props.error,\n            history = _this$props.history,\n            UserActions = _this$props.UserActions;\n\n      const _form$toJS = form.toJS(),\n            email = _form$toJS.email,\n            id = _form$toJS.id,\n            password = _form$toJS.password,\n            passwordConfirm = _form$toJS.passwordConfirm,\n            phone = _form$toJS.phone,\n            name = _form$toJS.name,\n            comment = _form$toJS.comment,\n            address = _form$toJS.address,\n            gender = _form$toJS.gender,\n            birthday = _form$toJS.birthday;\n\n      const formData = new FormData();\n      if (this.state.file !== null) formData.append('file', this.state.file);else formData.append('file', null);\n      formData.append('userId', id);\n      if (error) return; //현재 에러 있는 상태라면 진행 x\n\n      if (!validate['email'](email) || !validate['id'](id) || !validate['password'](password) || !validate['passwordConfirm'](passwordConfirm) || !validate['name'](name) || !validate['comment'](comment) || !validate['phone'](phone) || !validate['gender'](gender)) {\n        //하나라도 실패하면 진행 하지 않음\n        return;\n      }\n\n      try {\n        await AuthActions.localRegister({\n          email,\n          id,\n          password,\n          name,\n          comment,\n          phone,\n          address,\n          gender,\n          birthday\n        });\n      } catch (e) {\n        if (e.response.status === 411) setError('조건에 맞는 데이터를 입력해주세요.');\n        if (e.response.status === 409) setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');\n      }\n\n      try {\n        await AuthActions.localRegisterImage(formData);\n        const loggedInfo = this.props.result.toJS();\n        storage.set('loggedInfo', loggedInfo);\n        UserActions.setLoggedInfo(loggedInfo);\n        UserActions.setValidated(true);\n        history.push('/');\n      } catch (e) {\n        if (e.response.status === 422) setError('알 수 없는 에러가 발생했습니다.');\n        if (e.response.status === 409) setError('다른 회원의 아이디와 동일합니다. 다시 입력해주세요.');\n        if (e.response.status === 411) setError('조건에 맞는 데이터를 입력해주세요.');\n      }\n    };\n\n    this.enterRegister = () => {\n      if (window.event.keyCode === 13) this.handleLocalRegister();\n    };\n  }\n\n  componentWillUnmount() {\n    const AuthActions = this.props.AuthActions;\n    AuthActions.initializeForm('register');\n  }\n\n  componentDidMount() {\n    const AuthActions = this.props.AuthActions;\n    setAuthActions(AuthActions);\n  }\n\n  handleFileInput(e) {\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          error = _this$props2.error,\n          errorId = _this$props2.errorId;\n\n    const _this$props$form$toJS = this.props.form.toJS(),\n          id = _this$props$form$toJS.id,\n          password = _this$props$form$toJS.password,\n          passwordConfirm = _this$props$form$toJS.passwordConfirm,\n          email = _this$props$form$toJS.email,\n          name = _this$props$form$toJS.name,\n          phone = _this$props$form$toJS.phone,\n          birthday = _this$props$form$toJS.birthday,\n          comment = _this$props$form$toJS.comment,\n          address = _this$props$form$toJS.address;\n\n    const handleChange = this.handleChange,\n          handleLocalRegister = this.handleLocalRegister,\n          defaultNullChange = this.defaultNullChange,\n          handleFileInput = this.handleFileInput,\n          checkedChange = this.checkedChange,\n          enterRegister = this.enterRegister;\n    return React.createElement(RegisterComponent, {\n      error: error,\n      errorId: errorId,\n      id: id,\n      password: password,\n      passwordConfirm: passwordConfirm,\n      email: email,\n      name: name,\n      phone: phone,\n      birthday: birthday,\n      comment: comment,\n      address: address,\n      handleChange: handleChange,\n      handleLocalRegister: handleLocalRegister,\n      defaultNullChange: defaultNullChange,\n      handleFileInput: handleFileInput,\n      checkedChange: checkedChange,\n      enterRegister: enterRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default connect(state => ({\n  form: state.auth.getIn(['register', 'form']),\n  error: state.auth.getIn(['register', 'error']),\n  errorId: state.auth.getIn(['register', 'errorId']),\n  result: state.auth.get('result'),\n  password: state.auth.getIn(['register', 'form', 'password'])\n}), dispatch => ({\n  AuthActions: bindActionCreators(authActions, dispatch),\n  UserActions: bindActionCreators(userActions, dispatch)\n}))(Register);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Auth/Register.js"],"names":["React","Component","RegisterComponent","bindActionCreators","connect","authActions","userActions","storage","setError","validate","checkEmailExists","checkIdExists","checkPhoneExists","inputStyle","setAuthActions","setPassword","Register","state","file","checkedChange","e","AuthActions","props","target","checked","name","value","changeInput","form","defaultNullChange","handleChange","password","validation","indexOf","handleLocalRegister","error","history","UserActions","toJS","email","id","passwordConfirm","phone","comment","address","gender","birthday","formData","FormData","append","localRegister","response","status","localRegisterImage","loggedInfo","result","set","setLoggedInfo","setValidated","push","enterRegister","window","event","keyCode","componentWillUnmount","initializeForm","componentDidMount","handleFileInput","setState","files","render","errorId","auth","getIn","get","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {RegisterComponent} from '../../components/Auth';\r\nimport { bindActionCreators } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as authActions from '../../redux/modules/auth';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport storage from '../../lib/storage';\r\nimport {setError,validate,checkEmailExists,checkIdExists,checkPhoneExists,inputStyle,\r\n    setAuthActions,setPassword} from '../Function/ValidateModuledateModule';\r\n\r\nclass Register extends Component{  \r\n\r\n        state = {\r\n        \r\n        file: null\r\n        }\r\n    \r\n    componentWillUnmount(){\r\n        const {AuthActions} = this.props;\r\n        AuthActions.initializeForm('register');\r\n    }\r\n    componentDidMount(){\r\n        const {AuthActions} = this.props;\r\n        setAuthActions(AuthActions);\r\n    }\r\n\r\n    checkedChange = (e) =>{\r\n        const {AuthActions} = this.props;\r\n        const {name, value} = e.target.checked;\r\n        AuthActions.changeInput({\r\n          name,\r\n          value,\r\n          form: 'register'  \r\n        });\r\n    }\r\n\r\n    defaultNullChange = (e) =>{\r\n        const {AuthActions} = this.props;\r\n        const {name, value} = e.target;\r\n        AuthActions.changeInput({\r\n          name,\r\n          value,\r\n          form: 'register'  \r\n        });\r\n        \r\n    }\r\n\r\n    handleFileInput(e){\r\n            this.setState({\r\n            file: e.target.files[0]\r\n            });\r\n        \r\n      }\r\n    handleChange = (e) =>{\r\n    const {AuthActions} = this.props;\r\n    const {name, value} = e.target;\r\n    AuthActions.changeInput({\r\n      name,\r\n      value,\r\n      form: 'register'  \r\n    });\r\n    setPassword(this.props.password);\r\n    const validation = validate[name](value);\r\n    if(name.indexOf('password') > -1 || !validation) return;\r\n    if( name.indexOf('email') > -1)\r\n        checkEmailExists(value);\r\n    else if(name.indexOf('id') > -1) \r\n        checkIdExists(value); \r\n     else if(name.indexOf('phone') > -1) \r\n        checkPhoneExists(value);\r\n    \r\n}\r\nhandleLocalRegister = async() => {\r\n    const{form, AuthActions, error, history,UserActions} = this.props;\r\n    const {email, id, password, passwordConfirm, phone,name,comment,address,gender,birthday} = form.toJS();\r\n    const formData = new FormData();\r\n    if(this.state.file !== null)\r\n        formData.append('file',this.state.file);\r\n    else\r\n        formData.append('file',null);\r\n    formData.append('userId',id);\r\n\r\n    if(error) return; //현재 에러 있는 상태라면 진행 x\r\n    if(!validate['email'](email)\r\n    || !validate['id'](id)\r\n    || !validate['password'](password)\r\n    || !validate['passwordConfirm'](passwordConfirm)\r\n    || !validate['name'](name)\r\n    || !validate['comment'](comment)\r\n    || !validate['phone'](phone)\r\n    || !validate['gender'](gender)\r\n    ){\r\n        //하나라도 실패하면 진행 하지 않음\r\n        return;\r\n    }\r\n    \r\n    try{\r\n         await AuthActions.localRegister({\r\n            email,id,password,name,comment,phone,address,gender,birthday\r\n        });\r\n    } catch(e){\r\n        if(e.response.status === 411)\r\n            setError('조건에 맞는 데이터를 입력해주세요.');\r\n        if(e.response.status === 409)\r\n            setError('다른 회원과 일치하는 데이터가 있습니다. 다시 입력해주세요.');\r\n    }\r\n    try{\r\n         await AuthActions.localRegisterImage(\r\n            formData\r\n        );\r\n        const loggedInfo = this.props.result.toJS();\r\n        storage.set('loggedInfo', loggedInfo);\r\n        UserActions.setLoggedInfo(loggedInfo);\r\n        UserActions.setValidated(true);\r\n        history.push('/');\r\n    } catch(e){\r\n        if(e.response.status === 422)\r\n            setError('알 수 없는 에러가 발생했습니다.');\r\n        if(e.response.status === 409)\r\n            setError('다른 회원의 아이디와 동일합니다. 다시 입력해주세요.');\r\n        if(e.response.status === 411)\r\n            setError('조건에 맞는 데이터를 입력해주세요.');\r\n    }\r\n    }\r\n    enterRegister = () => {\r\n        if(window.event.keyCode === 13)\r\n          this.handleLocalRegister();\r\n    }\r\n    render(){\r\n        const {error,errorId} = this.props;\r\n        const {id,password,passwordConfirm,email,name,phone,birthday,comment,address} = this.props.form.toJS();\r\n        const {handleChange,handleLocalRegister,defaultNullChange,handleFileInput,checkedChange,enterRegister} = this;\r\n        return(\r\n            <RegisterComponent error={error} errorId = {errorId} id = {id} password={password} \r\n            passwordConfirm = {passwordConfirm} email={email} name={name} phone={phone} birthday={birthday}\r\n            comment={comment} address={address} handleChange={handleChange} handleLocalRegister={handleLocalRegister}\r\n            defaultNullChange={defaultNullChange} handleFileInput={handleFileInput} checkedChange={checkedChange}\r\n            enterRegister={enterRegister}/>\r\n        );\r\n        }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['register','form']),\r\n        error: state.auth.getIn(['register','error']),\r\n        errorId: state.auth.getIn(['register','errorId']),\r\n        result: state.auth.get('result'),\r\n        password : state.auth.getIn(['register','form','password'])\r\n    }),\r\n    (dispatch)=>({\r\n        AuthActions : bindActionCreators(authActions,dispatch),\r\n        UserActions : bindActionCreators(userActions, dispatch)\r\n    })\r\n)(Register);"]},"metadata":{},"sourceType":"module"}