{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\fronttimeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { Map, List, fromJS } from 'immutable';\nimport { handleActions, createAction } from 'redux-actions';\nimport { pender } from 'redux-pender';\nimport * as FriendAPI from '../../lib/api/friend';\nconst GET_FRIENDLIST_INFO = 'friend/GET_FRIENDLIST_INFO';\nconst GET_FRIEND_ALARM_INFO = 'friend/GET_FRIEND_ALARM_INFO';\nconst DELETE_FRIEND_ALARM_NOTIFICATION = 'friend/DELETE_FRIEND_ALARM_NOTIFICATION';\nconst FOLLOW = 'friend/FOLLOW';\nconst GET_MY_INFO_NUM = 'friend/GET_MY_INFO_NUM';\nconst GET_OTHER_INFO_NUM = 'friend/GET_OTHER_INFO_NUM';\nconst NOTIFY_IS_FOLLOW_USER = 'friend/NOTIFY_IS_FOLLOW_USER';\nconst UNFOLLOW = 'friend/UNFOLLOW';\nexport const unfollow = createAction(UNFOLLOW, FriendAPI.unfollow);\nexport const notifyIsFollowUser = createAction(NOTIFY_IS_FOLLOW_USER, FriendAPI.notifyIsFollowUser);\nexport const getFriendAlarmInfo = createAction(GET_FRIEND_ALARM_INFO, FriendAPI.getFriendAlarmInfo);\nexport const getFriendListInfo = createAction(GET_FRIENDLIST_INFO, FriendAPI.getFriendListInfo);\nexport const deleteFriendAlarmNotification = createAction(DELETE_FRIEND_ALARM_NOTIFICATION, FriendAPI.deleteFriendAlarmNotification);\nexport const follow = createAction(FOLLOW, FriendAPI.follow);\nexport const getMyInfoNum = createAction(GET_MY_INFO_NUM, FriendAPI.getMyfInfoNum);\nexport const getOtherInfoNum = createAction(GET_OTHER_INFO_NUM, FriendAPI.getOtherInfoNum);\nconst initialState = Map({\n  friend: List(),\n  alarm: List(),\n  result: Map({}),\n  friendRequestNum: 0,\n  alarmRequestNum: 0,\n  followNum: 0,\n  followerNum: 0,\n  isFollow: ''\n});\nexport default handleActions(_objectSpread({}, pender({\n  type: NOTIFY_IS_FOLLOW_USER,\n  onSuccess: (state, action) => state.set('isFollow', '팔로잉'),\n  onFailure: (state, action) => state.set('isFollow', '팔로우')\n}), {}, pender({\n  type: FOLLOW,\n  onSuccess: (state, action) => state.set('isFollow', '팔로잉')\n}), {}, pender({\n  type: UNFOLLOW,\n  onSuccess: (state, action) => state.set('isFollow', '팔로우')\n}), {}, pender({\n  type: GET_MY_INFO_NUM,\n  onSuccess: (state, action) => state.set('followNum', action.payload.data.followNum).set('followerNum', action.payload.data.followerNum)\n}), {}, pender({\n  type: GET_OTHER_INFO_NUM,\n  onSuccess: (state, action) => state.set('followNum', action.payload.data.followInfo.followNum).set('followerNum', action.payload.data.followInfo.followerNum).set('result', action.payload.data.userInfo)\n}), {}, pender({\n  type: GET_FRIEND_ALARM_INFO,\n  onSuccess: (state, action) => state.set('alarm', fromJS(action.payload.data)).set('friendRequestNum', fromJS(action.payload.data).size),\n  onFailure: (state, action) => state.set('alarm', List()).set('friendRequestNum', 0)\n}), {}, pender({\n  type: GET_FRIENDLIST_INFO,\n  onSuccess: (state, action) => {\n    return state.set('friend', fromJS(action.payload.data));\n  }\n}), {}, pender({\n  type: DELETE_FRIEND_ALARM_NOTIFICATION,\n  onSuccess: (state, action) => {\n    return state.set('result', fromJS(action.payload.data));\n  }\n})), initialState);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/redux/modules/friend.js"],"names":["Map","List","fromJS","handleActions","createAction","pender","FriendAPI","GET_FRIENDLIST_INFO","GET_FRIEND_ALARM_INFO","DELETE_FRIEND_ALARM_NOTIFICATION","FOLLOW","GET_MY_INFO_NUM","GET_OTHER_INFO_NUM","NOTIFY_IS_FOLLOW_USER","UNFOLLOW","unfollow","notifyIsFollowUser","getFriendAlarmInfo","getFriendListInfo","deleteFriendAlarmNotification","follow","getMyInfoNum","getMyfInfoNum","getOtherInfoNum","initialState","friend","alarm","result","friendRequestNum","alarmRequestNum","followNum","followerNum","isFollow","type","onSuccess","state","action","set","onFailure","payload","data","followInfo","userInfo","size"],"mappings":"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","sourcesContent":["import { Map,List,fromJS } from 'immutable';\r\nimport { handleActions, createAction } from 'redux-actions';\r\nimport {pender} from 'redux-pender';\r\nimport * as FriendAPI from '../../lib/api/friend';\r\n\r\nconst GET_FRIENDLIST_INFO= 'friend/GET_FRIENDLIST_INFO';\r\nconst GET_FRIEND_ALARM_INFO = 'friend/GET_FRIEND_ALARM_INFO';\r\nconst DELETE_FRIEND_ALARM_NOTIFICATION = 'friend/DELETE_FRIEND_ALARM_NOTIFICATION';\r\nconst FOLLOW = 'friend/FOLLOW';\r\nconst GET_MY_INFO_NUM = 'friend/GET_MY_INFO_NUM';\r\nconst GET_OTHER_INFO_NUM = 'friend/GET_OTHER_INFO_NUM';\r\nconst NOTIFY_IS_FOLLOW_USER = 'friend/NOTIFY_IS_FOLLOW_USER';\r\nconst UNFOLLOW = 'friend/UNFOLLOW';\r\n\r\nexport const unfollow = createAction(UNFOLLOW,FriendAPI.unfollow);\r\nexport const notifyIsFollowUser = createAction(NOTIFY_IS_FOLLOW_USER,FriendAPI.notifyIsFollowUser);\r\nexport const getFriendAlarmInfo = createAction(GET_FRIEND_ALARM_INFO,FriendAPI.getFriendAlarmInfo);\r\nexport const getFriendListInfo = createAction(GET_FRIENDLIST_INFO,FriendAPI.getFriendListInfo);\r\nexport const deleteFriendAlarmNotification = createAction(DELETE_FRIEND_ALARM_NOTIFICATION,FriendAPI.deleteFriendAlarmNotification);\r\nexport const follow = createAction(FOLLOW,FriendAPI.follow);\r\nexport const getMyInfoNum = createAction(GET_MY_INFO_NUM,FriendAPI.getMyfInfoNum);\r\nexport const getOtherInfoNum = createAction(GET_OTHER_INFO_NUM,FriendAPI.getOtherInfoNum);\r\nconst initialState = Map({\r\n    friend : List(),\r\n    alarm : List(),\r\n    result: Map({}),\r\n    friendRequestNum : 0,\r\n    alarmRequestNum : 0,\r\n    followNum : 0,\r\n    followerNum : 0,\r\n    isFollow : ''\r\n});\r\n\r\nexport default handleActions({\r\n    ...pender({\r\n        type : NOTIFY_IS_FOLLOW_USER,\r\n        onSuccess : (state,action) => state.set('isFollow','팔로잉'),\r\n        onFailure : (state,action) => state.set('isFollow','팔로우')\r\n        }),\r\n    ...pender({\r\n        type : FOLLOW,\r\n        onSuccess : (state,action) => state.set('isFollow','팔로잉')\r\n    }),\r\n    ...pender({\r\n        type : UNFOLLOW,\r\n        onSuccess : (state,action) => state.set('isFollow','팔로우')\r\n    }),\r\n    ...pender({\r\n        type : GET_MY_INFO_NUM,\r\n        onSuccess: (state,action) => state.set('followNum',action.payload.data.followNum)\r\n        .set('followerNum',action.payload.data.followerNum)\r\n    }),\r\n    ...pender({\r\n        type : GET_OTHER_INFO_NUM,\r\n        onSuccess: (state,action) => state.set('followNum',action.payload.data.followInfo.followNum)\r\n        .set('followerNum',action.payload.data.followInfo.followerNum).set('result',action.payload.data.userInfo)\r\n    }),\r\n    ...pender({\r\n        type: GET_FRIEND_ALARM_INFO,\r\n        onSuccess: (state,action) => state.set('alarm',fromJS(action.payload.data))\r\n        .set('friendRequestNum',fromJS(action.payload.data).size),\r\n        onFailure : (state,action) => state.set('alarm',List()).set('friendRequestNum',0)\r\n    }),\r\n    ...pender({\r\n        type: GET_FRIENDLIST_INFO,\r\n        onSuccess: (state,action) =>{ return state.set('friend',fromJS(action.payload.data));}\r\n    }),\r\n    ...pender({\r\n        type : DELETE_FRIEND_ALARM_NOTIFICATION,\r\n        onSuccess: (state,action) => {return state.set('result',fromJS(action.payload.data));}\r\n    })\r\n    }, initialState);"]},"metadata":{},"sourceType":"module"}