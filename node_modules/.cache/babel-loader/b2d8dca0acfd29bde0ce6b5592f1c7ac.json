{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Base\\\\TagListContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TagList } from '../../components/Post';\nimport { bindActionCreators } from 'redux';\nimport * as friendActions from '../../redux/modules/friend';\nimport * as postActions from '../../redux/modules/post';\nimport * as searchActions from '../../redux/modules/search';\nimport storage from '../../lib/storage';\n\nclass TagListContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      opacity: 0.8\n    };\n\n    this.closeModal = () => {\n      const _this$props = this.props,\n            SearchActions = _this$props.SearchActions,\n            PostActions = _this$props.PostActions;\n      PostActions.setDisplay('none');\n      SearchActions.setFriendContent('');\n    };\n\n    this.handleScroll = e => {\n      const scrollTop = e.srcElement.scrollingElement.scrollTop;\n      this.setState({\n        opacity: 0.8 - scrollTop / 800\n      });\n\n      if (this.state.opacity < 0) {\n        this.closeModal();\n      }\n    };\n\n    this.handleFriendInfo = async e => {\n      const PostActions = this.props.PostActions;\n      const id = e.target.id;\n      let count = 0;\n      await PostActions.setFriendInfo({\n        'username': id,\n        'nickname': e.target.getAttribute('data-nickname'),\n        'thumbnail': e.target.getAttribute('data-thumbnail')\n      });\n      PostActions.setWithDisplay('display');\n      const withData = this.props.withData;\n      await withData.toJS().forEach(item => count++);\n\n      if (count > 1) {\n        PostActions.setWithFriend(withData.toJS()[0].nickname + '님 외 ' + String(count - 1) + '명과 함께');\n      } else {\n        PostActions.setWithFriend(withData.toJS()[0].nickname + '님과 함께');\n      }\n\n      this.closeModal();\n    };\n\n    this.handleFriendCancel = async e => {\n      const PostActions = this.props.PostActions;\n      const id = e.target.id;\n      let count = 0;\n      await PostActions.removeFriend(id);\n      const withData = this.props.withData;\n      console.log(withData.toJS());\n      await withData.toJS().forEach(item => count++);\n\n      if (count > 1) {\n        PostActions.setWithFriend(withData.toJS()[0].nickname + '님 외 ' + String(count - 1) + '명과 함께');\n      } else if (count > 0) {\n        PostActions.setWithFriend(withData.toJS()[0].nickname + '님과 함께');\n      } else {\n        PostActions.setWithDisplay('block');\n        this.setState({\n          withfriendDisplay: 'none'\n        });\n      }\n    };\n\n    this.handleSearch = () => {\n      const _this$props2 = this.props,\n            SearchActions = _this$props2.SearchActions,\n            friendContent = _this$props2.friendContent;\n      SearchActions.searchInFriendlist(friendContent);\n    };\n\n    this.handleSearchContent = e => {\n      const SearchActions = this.props.SearchActions;\n      const innerText = e.target.innerText;\n      SearchActions.setFriendContent(innerText);\n    };\n\n    this.enterSearch = () => {\n      if (window.event.keyCode === 13) this.handleSearch();\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n    if (!storage.get('loggedInfo')) return;\n    this.props.PostActions.setWrittenData(storage.get('loggedInfo').nickname + '님 무슨 일이 있으셨나요?');\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          friendList = _this$props3.friendList,\n          friendContent = _this$props3.friendContent,\n          display = _this$props3.display;\n    const opacity = this.state.opacity;\n    const handleFriendInfo = this.handleFriendInfo,\n          closeModal = this.closeModal,\n          handleFriendCancel = this.handleFriendCancel,\n          handleSearch = this.handleSearch,\n          handleSearchContent = this.handleSearchContent,\n          enterSearch = this.enterSearch;\n    return React.createElement(TagList, {\n      opacity: opacity,\n      friends: friendList,\n      search: handleSearch,\n      onclick: handleFriendInfo,\n      close: closeModal,\n      display: display,\n      cancel: handleFriendCancel,\n      handlecontent: handleSearchContent,\n      content: friendContent,\n      enter: enterSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default connect(state => ({\n  friendContent: state.search.get('friendContent'),\n  friendList: state.search.get('friendList'),\n  display: state.post.get('display'),\n  withdisplay: state.post.get('withDisplay'),\n  withData: state.post.get('friendInfo')\n}), dispatch => ({\n  PostActions: bindActionCreators(postActions, dispatch),\n  FriendActions: bindActionCreators(friendActions, dispatch),\n  SearchActions: bindActionCreators(searchActions, dispatch)\n}))(TagListContainer);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Base/TagListContainer.js"],"names":["React","Component","connect","TagList","bindActionCreators","friendActions","postActions","searchActions","storage","TagListContainer","state","opacity","closeModal","props","SearchActions","PostActions","setDisplay","setFriendContent","handleScroll","e","scrollTop","srcElement","scrollingElement","setState","handleFriendInfo","id","target","count","setFriendInfo","getAttribute","setWithDisplay","withData","toJS","forEach","item","setWithFriend","nickname","String","handleFriendCancel","removeFriend","console","log","withfriendDisplay","handleSearch","friendContent","searchInFriendlist","handleSearchContent","innerText","enterSearch","window","event","keyCode","componentDidMount","addEventListener","get","setWrittenData","render","friendList","display","search","post","withdisplay","dispatch","FriendActions"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {TagList} from '../../components/Post';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as friendActions from '../../redux/modules/friend';\r\nimport * as postActions from '../../redux/modules/post';\r\nimport * as searchActions from '../../redux/modules/search';\r\nimport storage from '../../lib/storage';\r\n\r\nclass TagListContainer extends Component{\r\n    state  = {\r\n        opacity : 0.8\r\n    };\r\n   \r\n    closeModal = () => {\r\n        const {SearchActions,PostActions} = this.props;\r\n        PostActions.setDisplay('none');\r\n        SearchActions.setFriendContent('');\r\n        \r\n    }\r\n     \r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.handleScroll);\r\n        if(!storage.get('loggedInfo')) return ;\r\n        this.props.PostActions.setWrittenData(storage.get('loggedInfo').nickname + '님 무슨 일이 있으셨나요?');\r\n      }\r\n      handleScroll = (e) => {\r\n        const scrollTop =e.srcElement.scrollingElement.scrollTop;\r\n        this.setState({\r\n            opacity : 0.8 - scrollTop / 800\r\n        });\r\n        if(this.state.opacity < 0){\r\n           this.closeModal();\r\n        }\r\n      }\r\n    \r\n    \r\n    handleFriendInfo = async(e) => {\r\n        const{PostActions} = this.props;\r\n        const {id} = e.target;\r\n        let count = 0;\r\n        await PostActions.setFriendInfo({'username':id,'nickname': e.target.getAttribute('data-nickname'), 'thumbnail' : e.target.getAttribute('data-thumbnail')});\r\n        PostActions.setWithDisplay('display');\r\n        const{withData} = this.props;\r\n        await withData.toJS().forEach(item => count++);\r\n       \r\n        if(count > 1){\r\n            PostActions.setWithFriend(withData.toJS()[0].nickname+'님 외 '+String(count-1)+'명과 함께');\r\n        }\r\n        else{\r\n            PostActions.setWithFriend( withData.toJS()[0].nickname+'님과 함께');\r\n        }\r\n        this.closeModal();\r\n    }\r\n    \r\n    handleFriendCancel = async(e) => {\r\n        const{PostActions} = this.props;\r\n        const {id} = e.target;\r\n        let count = 0;\r\n        await PostActions.removeFriend(id);\r\n        const{withData} = this.props;\r\n        console.log(withData.toJS());\r\n        await withData.toJS().forEach(item => count++);\r\n       \r\n        if(count > 1){\r\n            PostActions.setWithFriend(withData.toJS()[0].nickname+'님 외 '+String(count-1)+'명과 함께');\r\n        }\r\n        else if(count > 0){\r\n            PostActions.setWithFriend(withData.toJS()[0].nickname+'님과 함께');\r\n        }\r\n        else{\r\n            PostActions.setWithDisplay('block'); \r\n            this.setState({\r\n            withfriendDisplay : 'none'\r\n        });\r\n    }\r\n    }\r\n\r\n      handleSearch = () => {\r\n          const{SearchActions,friendContent} = this.props;\r\n          SearchActions.searchInFriendlist(friendContent);\r\n          \r\n      }\r\n      handleSearchContent = (e) => {\r\n        const {SearchActions} = this.props;\r\n        const {innerText} = e.target;\r\n        \r\n        SearchActions.setFriendContent(innerText);\r\n      }\r\n      \r\n      enterSearch = () => {\r\n          if(window.event.keyCode === 13)\r\n            this.handleSearch();\r\n      }\r\n\r\n    render(){\r\n        const {friendList,friendContent,display} = this.props;\r\n        const {opacity} = this.state;\r\n        const {handleFriendInfo,closeModal,handleFriendCancel,\r\n        handleSearch,handleSearchContent,enterSearch} = this;\r\n        return(\r\n            <TagList opacity = {opacity} friends = {friendList} search = {handleSearch} onclick = {handleFriendInfo} close={closeModal}\r\n             display = {display} cancel = {handleFriendCancel} handlecontent = {handleSearchContent} content = {friendContent} enter = {enterSearch}/>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        friendContent : state.search.get('friendContent'),\r\n        friendList : state.search.get('friendList'),\r\n        display : state.post.get('display'),\r\n        withdisplay : state.post.get('withDisplay'),\r\n        withData : state.post.get('friendInfo')\r\n    }),\r\n    (dispatch) => ({\r\n        PostActions: bindActionCreators(postActions, dispatch),\r\n        FriendActions: bindActionCreators(friendActions, dispatch),\r\n        SearchActions : bindActionCreators(searchActions,dispatch)\r\n\r\n    })\r\n)(TagListContainer);"]},"metadata":{},"sourceType":"module"}