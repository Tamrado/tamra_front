{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\fronttimeline\\\\src\\\\containers\\\\Auth\\\\KakaoLogin.js\";\nimport React, { Component } from 'react';\nimport { KakaoLoginButton } from '../../components/Auth';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as authActions from '../../redux/modules/auth';\nimport * as userActions from '../../redux/modules/user';\nimport storage from '../../lib/storage';\n\nclass KakaoLogin extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.responseKakao = async res => {\n      console.log(res);\n      const profile = res.profile,\n            response = res.response;\n      const AuthActions = this.props.AuthActions;\n      const access_token = response.access_token,\n            refresh_token = response.refresh_token;\n      const id = profile.id,\n            _profile$kakao_accoun = profile.kakao_account.profile,\n            nickname = _profile$kakao_accoun.nickname,\n            profile_image_url = _profile$kakao_accoun.profile_image_url;\n      await AuthActions.kakaoLogin({\n        accesstoken: access_token,\n        refreshtoken: refresh_token,\n        uid: id,\n        nickname: nickname,\n        thumbnail: profile_image_url\n      });\n    };\n\n    this.responseFail = error => {\n      console.log(error);\n    };\n  }\n\n  render() {\n    const responseKakao = this.responseKakao,\n          responseFail = this.responseFail;\n    return React.createElement(KakaoLoginButton, {\n      responseKakao: responseKakao,\n      responseFail: responseFail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default connect(state => ({\n  form: state.auth.getIn(['login', 'form']),\n  error: state.auth.getIn(['login', 'error']),\n  result: state.auth.get('result'),\n  user: state.user\n}), dispatch => ({\n  AuthActions: bindActionCreators(authActions, dispatch),\n  UserActions: bindActionCreators(userActions, dispatch)\n}))(KakaoLogin);","map":{"version":3,"sources":["C:/Users/user/fronttimeline/src/containers/Auth/KakaoLogin.js"],"names":["React","Component","KakaoLoginButton","connect","bindActionCreators","authActions","userActions","storage","KakaoLogin","responseKakao","res","console","log","profile","response","AuthActions","props","access_token","refresh_token","id","kakao_account","nickname","profile_image_url","kakaoLogin","accesstoken","refreshtoken","uid","thumbnail","responseFail","error","render","state","form","auth","getIn","result","get","user","dispatch","UserActions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAkC;AAAA;AAAA;;AAAA,SAE9BQ,aAF8B,GAEd,MAAMC,GAAN,IAAa;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AADyB,YAEjBG,OAFiB,GAEIH,GAFJ,CAEjBG,OAFiB;AAAA,YAETC,QAFS,GAEIJ,GAFJ,CAETI,QAFS;AAAA,YAGlBC,WAHkB,GAGH,KAAKC,KAHF,CAGlBD,WAHkB;AAAA,YAKrBE,YALqB,GAOrBH,QAPqB,CAKrBG,YALqB;AAAA,YAMrBC,aANqB,GAOrBJ,QAPqB,CAMrBI,aANqB;AAAA,YAS3BC,EAT2B,GAazBN,OAbyB,CAS3BM,EAT2B;AAAA,oCAazBN,OAbyB,CAU3BO,aAV2B,CAWzBP,OAXyB;AAAA,YAWdQ,QAXc,yBAWdA,QAXc;AAAA,YAWJC,iBAXI,yBAWJA,iBAXI;AAe7B,YAAMP,WAAW,CAACQ,UAAZ,CAAuB;AACzBC,QAAAA,WAAW,EAACP,YADa;AAEzBQ,QAAAA,YAAY,EAAGP,aAFU;AAGzBQ,QAAAA,GAAG,EAAGP,EAHmB;AAIzBE,QAAAA,QAAQ,EAAGA,QAJc;AAKzBM,QAAAA,SAAS,EAAGL;AALa,OAAvB,CAAN;AAQC,KAzB6B;;AAAA,SA0B9BM,YA1B8B,GA0BdC,KAAD,IAAU;AACrBlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACH,KA5B6B;AAAA;;AA8BlCC,EAAAA,MAAM,GAAE;AAAA,UACGrB,aADH,GACiC,IADjC,CACGA,aADH;AAAA,UACiBmB,YADjB,GACiC,IADjC,CACiBA,YADjB;AAEJ,WACI,oBAAC,gBAAD;AAAkB,MAAA,aAAa,EAAEnB,aAAjC;AAAgD,MAAA,YAAY,EAAEmB,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAnCiC;;AAqClC,eAAezB,OAAO,CACjB4B,KAAD,KAAY;AACRC,EAAAA,IAAI,EAAED,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiB,CAAC,OAAD,EAAU,MAAV,CAAjB,CADE;AAERL,EAAAA,KAAK,EAAEE,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiB,CAAC,OAAD,EAAU,OAAV,CAAjB,CAFC;AAGRC,EAAAA,MAAM,EAAGJ,KAAK,CAACE,IAAN,CAAWG,GAAX,CAAe,QAAf,CAHD;AAIRC,EAAAA,IAAI,EAAEN,KAAK,CAACM;AAJJ,CAAZ,CADkB,EAOjBC,QAAD,KAAe;AACXvB,EAAAA,WAAW,EAAEX,kBAAkB,CAACC,WAAD,EAAciC,QAAd,CADpB;AAEXC,EAAAA,WAAW,EAAEnC,kBAAkB,CAACE,WAAD,EAAagC,QAAb;AAFpB,CAAf,CAPkB,CAAP,CAWb9B,UAXa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { KakaoLoginButton } from '../../components/Auth';\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as authActions from '../../redux/modules/auth';\r\nimport * as userActions from '../../redux/modules/user';\r\nimport storage from '../../lib/storage';\r\n\r\nclass KakaoLogin extends Component{\r\n    \r\n    responseKakao = async(res) =>{\r\n        console.log(res);\r\n        const { profile,response } = res;\r\n        const {AuthActions} = this.props;\r\n        const{\r\n            access_token,\r\n            refresh_token\r\n        } = response;\r\n    const {\r\n      id,\r\n      kakao_account: {\r\n        profile: { nickname, profile_image_url }\r\n      }\r\n    } = profile;\r\n\r\n    await AuthActions.kakaoLogin({\r\n        accesstoken:access_token,\r\n        refreshtoken : refresh_token,\r\n        uid : id,\r\n        nickname : nickname,\r\n        thumbnail : profile_image_url\r\n    });\r\n    \r\n    }\r\n    responseFail = (error) =>{\r\n        console.log(error);\r\n    }\r\n\r\nrender(){\r\n    const {responseKakao,responseFail} = this;\r\n    return(\r\n        <KakaoLoginButton responseKakao={responseKakao} responseFail={responseFail}/>\r\n    );\r\n}\r\n}\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['login', 'form']),\r\n        error: state.auth.getIn(['login', 'error']),\r\n        result : state.auth.get('result'),\r\n        user: state.user\r\n    }),\r\n    (dispatch) => ({\r\n        AuthActions: bindActionCreators(authActions, dispatch),\r\n        UserActions: bindActionCreators(userActions,dispatch)\r\n    })\r\n)(KakaoLogin);"]},"metadata":{},"sourceType":"module"}